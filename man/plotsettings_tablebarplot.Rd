% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotsettings_tablebarplot.R
\name{plotsettings_tablebarplot}
\alias{plotsettings_tablebarplot}
\title{Set parameters for the barplots.}
\usage{
plotsettings_tablebarplot(
  axis_x = NULL,
  axis_x_label_size = NULL,
  axis_x_lims = NULL,
  axis_x_stepsize = NULL,
  background_stripes_border = NULL,
  background_stripes_colour = NULL,
  bar_background_lines = NULL,
  bar_background_lines_linetype = NULL,
  bar_background_lines_colour = NULL,
  bar_background_0line_linetype = NULL,
  bar_background_0line_colour = NULL,
  bar_background_lines_spanners = NULL,
  bar_fill_colour = NULL,
  bar_frame_linetype = NULL,
  bar_label_colour = NULL,
  bar_label_nudge_x = NULL,
  bar_label_nudge_y = NULL,
  bar_label_nudge_x_out = NULL,
  bar_label_size = NULL,
  bar_line_width = NULL,
  bar_nudge_y = NULL,
  bar_pattern_fill_colour = NULL,
  bar_pattern_spacing = NULL,
  bar_pattern_type = NULL,
  bar_pattern_width = NULL,
  bar_type = NULL,
  bar_width = NULL,
  column_spanners_nudge_y = NULL,
  column_spanners_row_height = NULL,
  column_spanners_2_nudge_y = NULL,
  column_spanners_2_row_height = NULL,
  columns_alignment = NULL,
  columns_nudge_x = NULL,
  columns_nudge_y = NULL,
  columns_table_sig_superscript_letter = NULL,
  columns_table_sig_superscript_letter_nudge_x = NULL,
  columns_width = NULL,
  headers_alignment = NULL,
  headers_background_colour = NULL,
  headers_font_size = NULL,
  headers_ggtext = NULL,
  headers_nudge_x = NULL,
  headers_nudge_y = NULL,
  headers_row_height = NULL,
  font_size = NULL,
  space_right = NULL,
  default_list = NULL
)
}
\arguments{
\item{axis_x}{Logical indicating whether the x-axis should be drawn. Defaults to \code{TRUE}.}

\item{axis_x_label_size}{Numeric for the size of the x axis labels. Defaults to \code{5}.}

\item{axis_x_lims}{Numeric vector of length \code{2} for the x-axis limits. Will be set automatically, \code{NULL} (default).}

\item{axis_x_stepsize}{Numeric for the distance between x-axis ticks. Default is \code{10}.}

\item{background_stripes_border}{Character string of either \code{c("Inf", "background_line_both", "background_line_left", "background_line_right", "background_line_table")}. The background stripes will either be drawn over the whole plot (\code{"Inf"}), from the outer left background_line to the outer right background_line (\code{"background_line_both"}), from the outer left background line to the right of the plot (\code{"background_line_left"}), the outer right background line to the left of the plot (\verb{"background_line_right}), or only over the table-part of the plot (\verb{background_line_table"}).}

\item{background_stripes_colour}{Character vector containing the background colour of each row. Defaults to \code{NULL}.}

\item{bar_background_lines}{Either a character string of either \code{c("borders", "scale_breaks", "none")} or a numeric vector, indicating whether the barplot should receive lines on its borders, at every scale break, none at all, or at some manually defined spots.}

\item{bar_background_lines_linetype}{Character string indicating the linetype for the background lines of the barplot.}

\item{bar_background_lines_colour}{Character string indicating the colour for the background lines of the barplot.}

\item{bar_background_0line_linetype}{Character string indicating the linetype for the background line of the barplot at zero.}

\item{bar_background_0line_colour}{Character string indicating the colour for the background line of the barplot at zero.}

\item{bar_background_lines_spanners}{List containing of numeric vectors of two elements for indicating over which rows the background_lines in the barplot should span. Each vector contains the start and end row for the background line. Defaults to \code{NULL}, in which case The background_lines will be drawn from top to bottom.}

\item{bar_fill_colour}{Colour of the bar filling. Can be either one colour for all bars, or a (named) vector with the names of the groups specified in \code{bar_fill}. If no names are provided for the vector, the order of the factor levels of \code{bar_fill} will be used for determining the colour assignment.}

\item{bar_frame_linetype}{Named vector with the bar frame linetypes. Names have to be found in the column defined in the \code{bar_sig}-argument of\code{plot_tablebarplot()}. Defaults to \code{solid}.}

\item{bar_label_colour}{Colour of the bar labels. Can either be a single colour, or a named vector that contains the colour for each group defined in \code{bar_fill}. Defaults to \code{"black"}.}

\item{bar_label_nudge_x}{Numeric for nudging the bar labels in x direction.}

\item{bar_label_nudge_y}{Numeric for nudging the bar labels in y direction.}

\item{bar_label_nudge_x_out}{Numeric. Necessary for stacked barplots. If the percentage of a subgroup lies below that value, the label will be nudged to the left or right of the stacked bar. Defaults to \code{0}.}

\item{bar_label_size}{Numeric for the font size of the bar labels.}

\item{bar_line_width}{Numeric for the line-size around the bar.}

\item{bar_nudge_y}{Numeric vector for nudging the bar in y direction. Either of the same length as the data, to nudge each bar sepearatly, or of length 1 to nudge all bars the same. Defaults to \code{0}.}

\item{bar_pattern_fill_colour}{Named vector with the filling colours for the bar pattern. Names of the vector must be found in the column specified in \code{bar_pattern_fill}. Defaults to \code{white}.}

\item{bar_pattern_spacing}{Numeric for the gap between patterns.}

\item{bar_pattern_type}{Named vector with the pattern types for the barpattern.}

\item{bar_pattern_width}{Numeric for the width of the pattern stripes. Note that by default the pattern are the whit stripes, so an increase of the \code{bar_pattern_width} parameter will increase the thickness of the white stripes.}

\item{bar_type}{Character string defining the bar type. There are "default", pattern fill ("pattern"), "frame" or "stacked" barplot.}

\item{bar_width}{Numeric between \code{0} and \code{1} specifying the width of the bar. Defaults to \code{0.4}.}

\item{column_spanners_nudge_y}{Numeric vector to increase or decrease the space between column spanners text and line. Can be either of length 1, or provide a nudging parameter for each column spanner. Defaults to \code{-0.2}.}

\item{column_spanners_row_height}{Numeric for the row height of the row the first level of column spanners is written in. Defaults to \code{1}.}

\item{column_spanners_2_nudge_y}{Numeric vector to increase or decrease the space between column spanners level 2 text and line. Can be either of length 1, or provide a nudging parameter for each column spanner. Defaults to \code{-0.2}.}

\item{column_spanners_2_row_height}{Numeric for the row height of the row the second level of column spanners is written in. Defaults to \code{1}}

\item{columns_alignment}{Numeric vector with one element for each column, determining the text adjustement within the column. Can be \code{0} (left-aligned), \code{0.5} (central-aligned), \code{1} (right-aligned), or \code{2} (right-aligned, but in the middle of the column). Defaults to \code{0.5}.}

\item{columns_nudge_x}{Numeric vector to nudge the column text in x direction. Negativ to nudge left, positive to nudge right. Defaults to \code{0}.}

\item{columns_nudge_y}{Either a numeric vector or a list of numeric vectors of the same length as columns in the table (including the bar chart).  Nudges the column texts in y direction, either for all rows in the column the same amount (vector), or each row in each column specifically (list). Negative values to nudge down, positive values to nudge up. Defaults to \code{0}.}

\item{columns_table_sig_superscript_letter}{Character, that will be added on significant values defined by \code{columns_table_sig_superscript}.}

\item{columns_table_sig_superscript_letter_nudge_x}{Numeric for nudging the superscript towards or away from a number.}

\item{columns_width}{Numeric vector with relative column widths. Has to be equal to the number of columns (including the bar chart, if a bar chart is plotted) that are plotted in the table. Defaults to \code{NULL}, in which case all collumns will get the same width.}

\item{headers_alignment}{Numeric vector with one element for each column, determining the text adjustement of the headers. Can be \code{0} (left-aligned), \code{0.5} (central-aligned), or \code{1} (right-aligned). Defaults to \code{NULL}, in which case the alignment of the columns will be adopted.}

\item{headers_background_colour}{Colour of the background of the headers.}

\item{headers_font_size}{Numeric for the font size that will be used for the headers and column_spanners. Defaults to \code{2.5}.}

\item{headers_ggtext}{Logical indicating whether the headers should be drawn with \code{ggtext::geom_richtext()}. Defaults to \code{TRUE}. Only set to \code{FALSE} if you want to plot greek letters in the headers AND save the plot in cmyk color format afterwards. When set to FALSE,\code{grDevices::plotmath()} will be used for plotting the special characters, so refer to the documentation of the \code{grDevices::plotmath()}-function for the syntax.}

\item{headers_nudge_x}{Numeric to nudge the column_headers in x direction. Defaults to \code{0}.}

\item{headers_nudge_y}{Numeric to nudge the column_headers in y direction. Defaults to \code{0}.}

\item{headers_row_height}{Numeric for the row height of the row the headers are written in. Defaults to \code{1}.}

\item{font_size}{Numeric vector with as many elements as columns for the font sizes of the columns. Defaults to \code{2.5}.}

\item{space_right}{Numeric for the width of a white space that will be added on the right of the plotting pane. Has to be the same scale as the data. Defaults to \code{0}.}

\item{default_list}{Named list with predefined settings. Defaults to a list with all settings set to \code{0}.}
}
\value{
A named list with settings for a table/barplot.
}
\description{
Set parameters for the barplots.
}
\examples{
## Calling the function without any arguments will result in the default settings-list.
plotsettings_tablebarplot()

## Arguments will overvrite the respective list element:
plot_settings <- plotsettings_tablebarplot(font_size = 2.5)
plot_settings$font_size

## Colours can be defined like so:
plotsettings_tablebarplot(
  bar_fill_colour = c(
    "blue",
    grDevices::rgb(10, 13, 82, maxColorValue = 255)
  )
)

## Or, to get better control over the colour assignment
## we can also directly name the colours with the different groups
## defined in the bar_sig-argument of plot_tablebarplot()
## (as these groups are used to distinguish between different bar colours):
plotsettings_tablebarplot(
  bar_fill_colour = c(
    fill_group_1 = "blue",
    fill_group_2 = grDevices::rgb(
      10, 13, 82,
      maxColorValue = 255
    )
  )
)

}
