[{"path":[]},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/default_lists.html","id":"lineplots","dir":"Articles","previous_headings":"List of predefined plotsettings-objects","what":"Lineplots","title":"Default lists","text":"?lineplot_4x4","code":""},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"allgemeine-richtlinien","dir":"Articles","previous_headings":"Plotübergreifend","what":"Allgemeine Richtlinien","title":"FAQ BT24","text":"Ganz generell ist wichtig zu wissen, dass die finalen Ausrichtungen, Schriftgrößen etc. immer davon abhängen, wie groß der Plot abgespeichert wird. Schaut euch den Plot also der finalen Größe (abgespeichert als PDF) , bevor ihr Text einrückt oder die Schriftgröße ändert. der RStudio-Umgebung wird alles eventuell etwas verzogen dargestellt, weshalb ihr immer mit der finalen PDF-Größe abgleichen solltet.","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"ausrichtung-von-kennwerten","dir":"Articles","previous_headings":"Plotübergreifend > Allgemeine Richtlinien","what":"Ausrichtung von Kennwerten","title":"FAQ BT24","text":"Ausrichtung von Zahlen erfolgt Dezimalpunkt sowie rechtsbündig. eatPlot kann das erreicht werden: Eventuell muss ein wenig nachjustiert werden, um die Spalteninhalte zu rücken, dass es stimmig aussieht (negative Zahl zum Rücken nach links, positiv zum Rücken nach rechts):","code":"plotsettings_tablebarplot(columns_alignment = c(0, 0.5, 2)) plotsettings_tablebarplot(columns_nudge_x = -1.5 )"},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"darstellung-von-überschriften","dir":"Articles","previous_headings":"Plotübergreifend > Allgemeine Richtlinien","what":"Darstellung von Überschriften","title":"FAQ BT24","text":"Bei Differenzen vor und nach langem Strich kein Leerzeichen setzen. Subscripts werden nicht kursiv dargestellt: MM–MJ M2024-M2018 Nach Δ\\Delta wird ebenfalls kein Leerzeichen gesetzt, Δ\\Delta wird auch nicht kursiv dargestellt: \"Delta * italic(M)\" „Land“ und die oberen Zeile(n) im Tabellenkopf (column_spanners eatPlot genannt) werden fettgedruckt; die Zeile mit M, SD etc. wird nicht fettgedruckt, dafür aber kursiv: Falls griechische Buchstaben den Überschriften verwendet werden, müssen diese plotmath-Notation angegeben werden. Dadurch ändert sich die gesamte Syntax: Syntax kann der Hilfe abgerufen werden: ?plotmath","code":"plot_tablebarplot(   headers = c(\"**Land**\", \"*M*\", \"*SD*\", \"*N*\", \"*p*\"),   column_spanners =  column_spanners = list(     \"**2009**\" = c(2, 3),     \"**2015**\" = c(4, 5)) ) plot_tablebarplot(headers = c(\"bold(Land)\", \"italic(M)\", \"Delta * italic(M)\"),                    plot_settings = plotsettings_tablebarplot(headers_ggtext = FALSE) ## Muss für plotmath-Notation gesetzt werden                    )"},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"schriftgröße","dir":"Articles","previous_headings":"Plotübergreifend > Allgemeine Richtlinien","what":"Schriftgröße","title":"FAQ BT24","text":"Die Schriftgröße kann nicht einheitlich festgelegt werden, weil sie von der Größe der finalen Abbildung abhängt. Falls euer Plot die gleiche Größe hat wie eine der Vorlagen, könnt ihr einfach die Default-list verwenden. Ansonsten orientiert ihr euch besten den Vorlagen, die etwa die gleiche Größe haben wie eure Abbildung, und justiert die Schriftgröße dann: Die Schriftgröße könnt ihr aus den Default lists auslesen, die ihr für eure Abbildung verwendet, z.B mit:","code":"plotsettings_tablebarplot(font_size = 2.5,                            header_font_size = 2.5                           ) abb_6.6$font_size #> [1] 2"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"exporttyp","dir":"Articles","previous_headings":"Plotübergreifend > Export","what":"Exporttyp","title":"FAQ BT24","text":"Exportieren als PDF und im Farbprofil cmyk. Voreingestellt save_plot()","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"exportmaße","dir":"Articles","previous_headings":"Plotübergreifend > Export","what":"Exportmaße","title":"FAQ BT24","text":"Die Exportmaße können save_plot(height = ..., widht = ...) eingestellt werden. Dabei bitte den Vorlagen orientieren: Ganzseitige Abbildung/Tabelle im Hochformat: z.B. Linienplot Ganzseitige Abbildung/Tabelle im Querformat: z.B. große Tabelle Teilseitige Abbildung/Tabelle im Hochformat: z.B. kleinere Tabelle Dabei bitte die Breite bei Hochformat bzw. die Höhe bei Querformat immer beibehalten. Die Höhe kann sich je nach Plot unterscheiden.","code":""},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"delta","dir":"Articles","previous_headings":"Plotübergreifend > Sonderzeichen","what":"Delta","title":"FAQ BT24","text":"Ein String der Delta enthält kann eatPlot auf zwei Arten erzeugt werden:","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"ggtext","dir":"Articles","previous_headings":"Plotübergreifend > Sonderzeichen > Delta","what":"ggtext","title":"FAQ BT24","text":"Nutzt das Paket ggtext für HTML support. Sonderzeichen können leider nicht immer PDF mit cmyk-Farbschema exportiert werden, weshalb dann plotmath verwendet werden muss. Das ist für den BT eigentlich immer der Fall:","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"plotmath","dir":"Articles","previous_headings":"Plotübergreifend > Sonderzeichen > Delta","what":"plotmath","title":"FAQ BT24","text":"\"Delta\" schreiben und dann headers_ggtext = FALSE setzen:","code":"plotsettings_tablebarplot(headers_ggtext = FALSE)"},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"kursiv","dir":"Articles","previous_headings":"Plotübergreifend > Sonderzeichen","what":"Kursiv","title":"FAQ BT24","text":"Kursiver Text kann durch *kursiver Text* erzeugt werden. Im plotmath-Modus durch italic(kursiver Text).","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"fettdruck","dir":"Articles","previous_headings":"Plotübergreifend > Sonderzeichen","what":"Fettdruck","title":"FAQ BT24","text":"Fettgedruckter Text kann durch **fettgedruckter Text** erzeugt werden. Im plotmath-Modus durch bold(fettgedruckter Text).","code":""},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"balkenfüllung","dir":"Articles","previous_headings":"Plotübergreifend > Balkendiagramme","what":"Balkenfüllung","title":"FAQ BT24","text":"Statistisch signifikante Werte (p < .05) werden mit ausgefüllten Balken dargestellt. Statistisch nicht signifikante Werte werden mit schraffierten Balken dargestellt (Schraffur von oben links nach unten rechts). Größe des Balkenmusters muss manuell nachjustiert werden, da es wieder von der Größe der Abbildung beim Abspeichern abhängt. Hier die Größe bitte ungefähr den Vorlagen anpassen, und auch darauf achten, dass die Muster vor allem innerhalb eines Plots gleich groß sind. Bei zusammengesetzten Plots aus mehreren Balkendiagrammen kann die Mustergröße sich leicht unterscheiden, selbst wenn die selben Werte angegeben werden. Hier nochmal manuell nachjustieren, bis es einheitlich aussieht.","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"balkenfarbe","dir":"Articles","previous_headings":"Plotübergreifend > Balkendiagramme","what":"Balkenfarbe","title":"FAQ BT24","text":"Erste Gruppe bzw. erster Kompetenzbereich dunklem türkis (cmyk(85, 0, 43, 17)) Zweite Gruppe bzw. zweiter Kompetenzbereich mittlerem türkis (cmyk(40, 0, 20, 8)) Dritte Gruppe bzw. dritter Kompetenzbereich hellem türkis (cmyk(7, 0, 4, 1)) Farben sind voreingestellt, können aber gesetzt werden:","code":"plotsettings_tablebarplot(   bar_fill_colour = c(\"Gruppe 1\" = cmyk(85, 0, 43, 17),                        \"Gruppe 2\" = cmyk(40, 0, 20, 8)) )"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"farben-zur-zeilenorientierung","dir":"Articles","previous_headings":"Plotübergreifend > Balkendiagramme > Farben","what":"Farben zur Zeilenorientierung","title":"FAQ BT24","text":"Farbliche Hinterlegungen zur Zeilenorientierung (wechselnd weiß / türkis) wird wie im Tabellenteil hinter dem Balkendiagramm weitergeführt. Die Deutschland-Zeile wird grau dargestellt:","code":"plotsettings_tablebarplot(    background_stripes_colour = c(rep(c(\"white\", \"white\", \"white\", rep(cmyk(7, 0, 4, 1), 3)), 8), rep(cmyk(0, 0, 0, 10), 3)) )"},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"x-achse-unterhalb-der-balken","dir":"Articles","previous_headings":"Plotübergreifend > Balkendiagramme > Farben","what":"x-Achse unterhalb der Balken","title":"FAQ BT24","text":"schwarz cmyk(0, 0, 0, 100). Bereits voreingestellt.","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"nulllinie","dir":"Articles","previous_headings":"Plotübergreifend > Balkendiagramme > Farben","what":"Nulllinie","title":"FAQ BT24","text":"schwarz cmyk(0, 0, 0, 100). Bereits voreingestellt.","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"hilfslinien-vertikal","dir":"Articles","previous_headings":"Plotübergreifend > Balkendiagramme > Farben","what":"Hilfslinien vertikal","title":"FAQ BT24","text":"Grau cmyk(0, 0, 0, 60) und gestrichelt. Ist bereits vorgeingestellt, könnte aber geändert werden:","code":"plotsettings_tablebarplot(   bar_background_lines_colour = cmyk(0, 0, 0, 60),   bar_background_lines = \"scale_breaks\",   bar_background_lines_linetype = \"dashed\" )"},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"zeilenumbruch","dir":"Articles","previous_headings":"Plotübergreifend > Balkendiagramme","what":"Zeilenumbruch","title":"FAQ BT24","text":"Zeilenumbrüche werden Ländernamen nur dann gesetzt, wenn die Zeilen aus anderen Gründen breiter sind (z.B. weil je Land zwei Ergebniszeilen berichtet werden). Zeilenumbrüche für die Ländernamen werden vor dem Plotten eingefügt, einfachsten mit:","code":"my_dat$state_var <- process_bundesland(my_dat$state_var, linebreak = TRUE)"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"referenzband","dir":"Articles","previous_headings":"Plotübergreifend > Liniendiagramme","what":"Referenzband","title":"FAQ BT24","text":"Das Referenzband wird mit +/- 2 SE angezeigt. Ist bereits voreingestellt.","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"label","dir":"Articles","previous_headings":"Plotübergreifend > Liniendiagramme","what":"Label","title":"FAQ BT24","text":"Wenn SE einstellig ist, dann wird automatisch ein zusätzliches Leerzeichen vor der Klammer eingefügt, sodass sowohl (SE) als auch der Wert der Mittelwertsdifferenz rechtsbündig zueinanderstehen Die Spitze der geschweiften Klammer zeigt auf das erste Leerzeichen zwischen M und (SE). Ist bereits voreingestllt, kann aber zur nachjustiert werden:","code":"plotsettings_lineplot(   brace_label_nudge_x = 0.1 )"},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"farben-1","dir":"Articles","previous_headings":"Plotübergreifend > Liniendiagramme","what":"Farben","title":"FAQ BT24","text":"Die Farben sind alle voreingestellt, die Farbcodes können hier ausgelesen werden:","code":"lineplot_4x4$axis_x_background_colour #> [1] \"#8DEBBC\" lineplot_4x4$background_line_colour #> [1] \"#EBFDF3\" lineplot_4x4$subgroup_colours #> [1] \"#000000\" \"#666666\" \"#999999\""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"signifikanzen","dir":"Articles","previous_headings":"Plotübergreifend > Liniendiagramme","what":"Signifikanzen","title":"FAQ BT24","text":"Statistisch signifikante Veränderung (p < .05) mit durchgezogener Linie darstellen. Statistisch nicht signifikante Veränderung mit gestrichelter Linie darstellen Ist bereits vorgeingestellt, kann zur geändert werden: Bei bundesweiten Trends für Gruppen: Statistisch signifikante Abweichung (p < .05) zum Trend der Gesamtpopulation aller Neuntklässler:innen Deutschland Bei länderspezifischen Trends für Gruppen: Statistisch signifikante Abweichung (p < .05) zum Trend der jeweiligen Schüler:innengruppe Deutschland insgesamt Ausgefülltes Dreieck für Werte, die statistisch signifikant (p < .05) vom Wert der Gesamptgruppe der Gesamtpopulation abweichen. Ausgefülltes Quadrat für Werte, die statistisch signifikant (p < .05) vom Wert der selben Schüler:innengruppe der Gesamtpopulation abweichen. Ausgefüllter Kreis statistisch nicht signifikante Werte. Ist bereits voreingestellt, kann zur geändert werden:","code":"plotsettings_lineplot(line_type = c(     \"TRUE\" = \"solid\",     \"FALSE\" = \"dashed\"   )) plotsettings_lineplot(    point_shapes = c(     \"TRUE\" = 17,     \"FALSE\" = 16   ) )"},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"signifikanzen-1","dir":"Articles","previous_headings":"","what":"Signifikanzen","title":"FAQ BT24","text":"Hier findet sich eine Übersicht über die Signifikanzen der Vergleiche, die auf verschiedene Arten den Plots dargestellt werden.","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"länderspezifische-linienplots","dir":"Articles","previous_headings":"Signifikanzen","what":"Länderspezifische Linienplots","title":"FAQ BT24","text":"Achtung: Im letzten BT war es vs. Deutschland insgesamt!! Also quasi Abweichung von der Linie!","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"deutschland-kachel-in-länderplots","dir":"Articles","previous_headings":"Signifikanzen > Länderspezifische Linienplots","what":"Deutschland-Kachel in Länderplots","title":"FAQ BT24","text":"Genau das gleiche wie den normalen Linienplots. Die Vergleiche vs. Deutschland sind hier automatisch nicht signifikant gesetzt, da eatRep hierfür kein Wert ausgegeben wird.","code":""},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"tableplots","dir":"Articles","previous_headings":"Signifikanzen","what":"Tableplots","title":"FAQ BT24","text":"Die Darstellung der Signifikanzen ist hier sehr heterogen, und hängt immer von der jeweiligen Abbildung ab. Generell kann sich hier den Linienplots orientiert werden: Wenn eine Gruppe einem der Länder (z.B Mädchen) gegen Deutschland verglichen wird, soll der Regel nicht gegen Gesamtdeutschland, sonderen gegen diese Gruppe Deutschland verglichen werden (also alle Mädchen Deutschland).","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/faq_bt24.html","id":"anmerkungstexte","dir":"Articles","previous_headings":"","what":"Anmerkungstexte","title":"FAQ BT24","text":"Vorlagen finden sich hier: Q:\\BT2024\\BT\\60_Bericht\\_Vorlagen_Richtlinien\\BT2024_Vorlage_Tab-Abb_Anmerkungen.docx","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/lineplots.html","id":"lineplot-for-one-group","dir":"Articles","previous_headings":"","what":"Lineplot for one group","title":"Lineplots","text":"Let’s take example data trend_gender example dataset. first step workflow always data preparation. needed bring eatRep data correct format plotting. might necessary slight manual data preparation: can already plot:","code":"dat_lineplot_1 <- prep_lineplot(   trend_gender[[1]],   subgroup_var = \"Kgender\" ## Leave this argument if you have only one subgroup ) ## Don't do that if you only have one group in your data, or want to plot all groups dat_lineplot_1 <- subset(dat_lineplot_1, subgroup_var == \"total\")  ## For correctly displaying the state names: dat_lineplot_1$state_var <- process_bundesland(dat_lineplot_1$state_var)  dat_lineplot_1$subgroup_var <- as.factor(dat_lineplot_1$subgroup_var) lineplot_1 <- plot_lineplot(dat_lineplot_1,   years_lines = list(c(2009, 2015), c(2015, 2022)),   years_braces = list(c(2009, 2015), c(2015, 2022)),   background_facet = \"Deutschland\",   plot_settings = plotsettings_lineplot(     axis_y_lims = c(420, 540),     default_list = lineplot_4x4   ) ) save_plot(lineplot_1, filename = \"C:/Users/hafiznij/Downloads/lineplot_1_group.pdf\", width = 160, height = 185)"},{"path":"https://nickhaf.github.io/eatPlot/articles/lineplots.html","id":"lineplot-for-two-groups","dir":"Articles","previous_headings":"","what":"Lineplot for two groups","title":"Lineplots","text":"","code":"dat_lineplot_2 <- prep_lineplot(   trend_gender[[1]],   subgroup_var = \"Kgender\" )  dat_lineplot_2$state_var <- process_bundesland(dat_lineplot_2$state_var)   ## We can set the order of the brace labels by setting the factor levels of the subgroup_var: dat_lineplot_2$subgroup_var <- factor(dat_lineplot_2$subgroup_var, levels = c(\"female\", \"male\", \"total\"), ordered = TRUE)  lineplot_2 <- plot_lineplot(   dat_lineplot_2,   years_lines = list(c(2009, 2015), c(2015, 2022)),   years_braces = list(c(2009, 2015), c(2015, 2022)),   background_facet = \"Deutschland\",   background_subgroup = \"total\",   plot_settings = plotsettings_lineplot(     subgroup_colours = c(female = \"black\", male = cmyk(0, 0, 0, 60)), ## Here we determine the colours of the subgroups     axis_y_lims = c(410, 560),     default_list = lineplot_4x4   ) ) save_plot(lineplot_2, filename = \"C:/Users/hafiznij/Downloads/lineplot_2_groups.pdf\", width = 160, height = 185) lineplot_2"},{"path":"https://nickhaf.github.io/eatPlot/articles/lineplots.html","id":"lineplot-for-whole-germany-3x2","dir":"Articles","previous_headings":"","what":"Lineplot for whole Germany 3x2","title":"Lineplots","text":"add significance columns point_sig brace_label_sig_superscript!","code":"trend_ger <- do.call(rbind, lapply(trend_gender, prep_lineplot, subgroup_var = \"Kgender\")) trend_ger <- subset(trend_ger, state_var == \"total\") trend_ger$subgroup_var <- factor(trend_ger$subgroup_var, levels = c(\"female\", \"male\", \"total\"), ordered = TRUE) trend_ger$kb <- gsub(\"hoeren\", \"Hören\", trend_ger$kb) trend_ger$kb <- gsub(\"lesen\", \"Lesen\", trend_ger$kb)  trend_ger_2 <- trend_ger trend_ger_3 <- trend_ger  trend_ger_2$kb <- gsub(\"Lesen\", \"Englisch: Reading\", trend_ger_2$kb) trend_ger_2$kb <- gsub(\"Hören\", \"Englisch: Listening\", trend_ger_2$kb)   trend_ger_3$kb <- gsub(\"Lesen\", \"Biologie: Fachwissen\", trend_ger_3$kb) trend_ger_3$kb <- gsub(\"Hören\", \"Biologie: Erkenntnisgewinnung\", trend_ger_3$kb)   trend_total <- rbind(trend_ger, trend_ger_2, trend_ger_3) lineplot_germany_1 <- plot_lineplot(   trend_total,   years_lines = list(c(2009, 2015), c(2015, 2022)),   years_braces = list(c(2009, 2015), c(2015, 2022)),   point_sig = \"sig_mean_comp_crossDiff_sameFacet_totalSubgroup\",   brace_label_sig_superscript = \"sig_mean_comp_trend_crossDiff_sameFacet_totalSubgroup\",    facet_var = \"kb\",   background_subgroup = \"total\",   plot_settings = plotsettings_lineplot(     subgroup_colours = c(female = \"black\", male = cmyk(0, 0, 0, 60)), ## Here we determine the colours of the subgroups     brace_label_nudge_x = 0.22,     n_cols = 2,     axis_y_lims = c(430, 550),     default_list = lineplot_germany   ) ) save_plot(lineplot_germany_1, filename = \"C:/Users/hafiznij/Downloads/lineplot_2_groups_germany_3x2.pdf\", height = 185, width = 108) lineplot_germany_1"},{"path":"https://nickhaf.github.io/eatPlot/articles/lineplots.html","id":"lineplot-for-whole-germany-2x3-with-split-plot","dir":"Articles","previous_headings":"","what":"Lineplot for whole Germany 2x3 with split plot","title":"Lineplots","text":"","code":"lineplot_germany_2 <- plot_lineplot(   trend_total,   years_lines = list(c(2009, 2015), c(2015, 2022)),   years_braces = list(c(2009, 2015), c(2015, 2022)),   facet_var = \"kb\",   background_subgroup = \"total\",   point_sig = \"sig_mean_comp_crossDiff_sameFacet_totalSubgroup\",   brace_label_sig_superscript = \"sig_mean_comp_trend_crossDiff_sameFacet_totalSubgroup\",    plot_settings = plotsettings_lineplot(     subgroup_colours = c(female = \"black\", male = cmyk(0, 0, 0, 60)), ## Here we determine the colours of the subgroups     brace_label_nudge_x = 0.23,     n_cols = 3,     axis_y_lims = c(430, 550),         default_list = lineplot_germany  ) ) save_plot(lineplot_germany_2, filename = \"C:/Users/hafiznij/Downloads/lineplot_2_groups_germany2x3.pdf\", height = 185 * 2 / 3, width = 160) lineplot_germany_2"},{"path":"https://nickhaf.github.io/eatPlot/articles/lineplots.html","id":"lineplot-with-missing-values","dir":"Articles","previous_headings":"","what":"Lineplot with missing values","title":"Lineplots","text":"One special feature plot depcition two significance types: Comparison subgroup whole population Länder-facets, comparison total subgroup Germany-facet. Therefore, combine two respective columns, give values different names: trends. case, everything Deutschland significant, can leave , workflow :","code":"dat_lineplot_2 <- prep_lineplot(   trend_gender[[1]],   subgroup_var = \"Kgender\" ) ## Einfügen von NAs zur Demonstration  dat_lineplot_2$est_mean_comp_none <- ifelse(dat_lineplot_2$state_var == \"Berlin\" & dat_lineplot_2$year == 2015, NA, dat_lineplot_2$est_mean_comp_none) dat_lineplot_2$est_mean_comp_none <- ifelse(dat_lineplot_2$state_var == \"Brandenburg\" & dat_lineplot_2$year == 2009 & dat_lineplot_2$subgroup_var == \"female\", NA, dat_lineplot_2$est_mean_comp_none)  dat_lineplot_2$est_mean_comp_trend_sameFacet_sameSubgroup <- ifelse(dat_lineplot_2$state_var == \"Brandenburg\" & dat_lineplot_2$trend == \"2009_2015\" & dat_lineplot_2$subgroup_var == \"female\", NA, dat_lineplot_2$est_mean_comp_trend_sameFacet_sameSubgroup)  dat_lineplot_2$se_mean_comp_trend_sameFacet_sameSubgroup <- ifelse(dat_lineplot_2$state_var == \"Brandenburg\" & dat_lineplot_2$trend == \"2009_2015\" & dat_lineplot_2$subgroup_var == \"female\", NA, dat_lineplot_2$se_mean_comp_trend_sameFacet_sameSubgroup)  dat_lineplot_2 <- dat_lineplot_2[dat_lineplot_2$state_var != \"Niedersachsen\", ] dat_lineplot_2$state_var <- process_bundesland(dat_lineplot_2$state_var)  ## Relevel, so Deutschland comes at the end dat_lineplot_2$state_var <- forcats::fct_relevel(dat_lineplot_2$state_var, \"Deutschland\", after = Inf)  ## We can set the order of the brace labels by setting the factor levels of the subgroup_var: dat_lineplot_2$subgroup_var <- factor(dat_lineplot_2$subgroup_var, levels = c(\"female\", \"male\", \"total\"), ordered = TRUE)  state_levels <- levels(dat_lineplot_2$state_var)  years_lines_list <- stats::setNames(lapply(state_levels, function(x) list(c(2009, 2015), c(2015, 2022))), state_levels)  years_lines_list$`Baden−Württemberg`[[1]] <- NULL  years_lines_list$`Berlin` <- list() ## Add NAs at the respective rows, so we can combine them afterwards:  dat_lineplot_2$sig_mean_comp_crossDiff_totalFacet_sameSubgroup_2 <- ifelse(dat_lineplot_2$state_var == \"Deutschland\", NA, dat_lineplot_2$sig_mean_comp_crossDiff_totalFacet_sameSubgroup) dat_lineplot_2$sig_mean_comp_crossDiff_sameFacet_totalSubgroup_2 <- ifelse(dat_lineplot_2$state_var == \"Deutschland\", dat_lineplot_2$sig_mean_comp_crossDiff_sameFacet_totalSubgroup, NA)  ## Add distinct values dat_lineplot_2$sig_mean_comp_crossDiff_totalFacet_sameSubgroup_2 <- ifelse(!dat_lineplot_2$sig_mean_comp_crossDiff_totalFacet_sameSubgroup_2, \"FALSE\", paste(dat_lineplot_2$sig_mean_comp_crossDiff_totalFacet_sameSubgroup_2, \"subgroup\", sep = \"_\")) dat_lineplot_2$sig_mean_comp_crossDiff_sameFacet_totalSubgroup_2 <- ifelse(!dat_lineplot_2$sig_mean_comp_crossDiff_sameFacet_totalSubgroup_2, \"FALSE\", paste(dat_lineplot_2$sig_mean_comp_crossDiff_sameFacet_totalSubgroup_2, \"total\", sep = \"_\"))  dat_lineplot_2$point_sig <- dplyr::coalesce(dat_lineplot_2$sig_mean_comp_crossDiff_totalFacet_sameSubgroup_2, dat_lineplot_2$sig_mean_comp_crossDiff_sameFacet_totalSubgroup_2) dat_lineplot_2$sig_mean_comp_trend_crossDiff_sameFacet_totalSubgrouplineplot_na <- plot_lineplot(   dat_lineplot_2,   point_sig = point_sig,    years_lines = years_lines_list,   years_braces = years_lines_list,   background_facet = \"Deutschland\",   background_subgroup = \"total\",   box_facet = \"Deutschland\",   plot_settings = plotsettings_lineplot(     subgroup_colours = c(female = \"black\", male = cmyk(0, 0, 0, 60)), ## Here we determine the colours of the subgroups     axis_y_lims = c(410, 560),     background_facet_remove = FALSE,     point_shapes = c(\"TRUE_subgroup\" = 15, \"TRUE_total\" = 17, \"FALSE\" = 16),      default_list = lineplot_4x4   ) )  ## Because Deuschland is also our background-facet, the years we removed there are also not plotted in the background. save_plot(lineplot_na, filename = \"C:/Users/hafiznij/Downloads/lineplot_na.pdf\", width = 160, height = 185) lineplot_na ## Warning: No shared levels found between `names(values)` of the manual scale and the ## data's linetype values. ## Warning: Removed 4 rows containing missing values or values outside the scale range ## (`geom_point()`). ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_text()`). ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_line()`). ## Warning: Removed 2 rows containing missing values or values outside the scale range ## (`geom_point()`). ## Warning: Removed 2 rows containing missing values or values outside the scale range ## (`geom_text()`)."},{"path":"https://nickhaf.github.io/eatPlot/articles/lineplots.html","id":"lineplot-with-long-trend","dir":"Articles","previous_headings":"","what":"Lineplot with long trend","title":"Lineplots","text":"","code":"dat_lineplot_2 <- prep_lineplot(   trend_gender[[1]],   subgroup_var = \"Kgender\" )  dat_lineplot_2$state_var <- process_bundesland(dat_lineplot_2$state_var)   ## We can set the order of the brace labels by setting the factor levels of the subgroup_var: dat_lineplot_2$subgroup_var <- factor(dat_lineplot_2$subgroup_var, levels = c(\"female\", \"male\", \"total\"), ordered = TRUE)  lineplot_2_long <- plot_lineplot(   dat_lineplot_2,   years_lines = list(c(2009, 2015), c(2015, 2022)),   years_braces = list(c(2009, 2022), c(2015, 2022)),   background_facet = \"Deutschland\",   background_subgroup = \"total\",   plot_settings = plotsettings_lineplot(     subgroup_colours = c(female = \"black\", male = cmyk(0, 0, 0, 60)), ## Here we determine the colours of the subgroups     axis_y_lims = c(410, 560),     brace_label_nudge_x = 0.175,      default_list = lineplot_4x4   ) ) save_plot(lineplot_2_long, filename = \"C:/Users/hafiznij/Downloads/lineplot_2_groups_long.pdf\", width = 160, height = 185) lineplot_2_long"},{"path":"https://nickhaf.github.io/eatPlot/articles/loop_example.html","id":"data-preperation","dir":"Articles","previous_headings":"","what":"Data preperation","title":"Mehrere Kompetenzbereiche: Schleifen","text":"data using example nexted multiple competence areas. Let’s take look: multiple competence areas: build plots competence areas, ’d suggest follow three steps: Build one plot. Adjust , satisfied. Put function. Use lapply() loop competence areas build plots function defined step 2.","code":"str(dispar) #> List of 5 #>  $ hoeren:List of 4 #>   ..$ plain      :'data.frame':  2331 obs. of  17 variables: #>   .. ..$ label1       : chr [1:2331] \"trend (2015 - 2009) for BadenWuerttemberg_maennlich\" \"trend (2015 - 2009) for crossDiff (BadenWuerttemberg_maennlich - BadenWuerttemberg_total) \" \"trend (2015 - 2009) of groupDiff (maennlich - weiblich) in TR_BUNDESLAND=BadenWuerttemberg\" \"trend (2015 - 2009) for BadenWuerttemberg_total\" ... #>   .. ..$ label2       : chr [1:2331] \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich\" \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich)] - [year=2009: (TR_BUNDESLAND=BadenWuerttember\"| __truncated__ \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich) - (TR_BUNDESLAND=BadenWuerttemberg, Kgender=we\"| __truncated__ \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=total\" ... #>   .. ..$ unit_1       : chr [1:2331] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2       : chr [1:2331] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ depVar       : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ modus        : chr [1:2331] \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" ... #>   .. ..$ parameter    : chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ comparison   : chr [1:2331] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:2331] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" ... #>   .. ..$ Kgender      : chr [1:2331] \"maennlich\" \"maennlich - total\" \"maennlich - weiblich\" \"total\" ... #>   .. ..$ year         : chr [1:2331] \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" ... #>   .. ..$ id           : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ kb           : chr [1:2331] \"hoeren\" \"hoeren\" \"hoeren\" \"hoeren\" ... #>   .. ..$ est          : num [1:2331] -40.74 -6.47 12.97 -34.27 -27.77 ... #>   .. ..$ se           : num [1:2331] 7.66 9.42 8.18 6.15 6.71 ... #>   .. ..$ p            : num [1:2331] 0 0.492 0.113 0 0 0.453 0.004 0 0.605 0.001 ... #>   .. ..$ es           : num [1:2331] -0.395 NA NA -0.336 -0.282 NA NA NA NA NA ... #>   ..$ comparisons:'data.frame':  1719 obs. of  4 variables: #>   .. ..$ id        : chr [1:1719] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ unit_1    : chr [1:1719] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2    : chr [1:1719] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ comparison: chr [1:1719] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   ..$ group      :'data.frame':  153 obs. of  5 variables: #>   .. ..$ id           : chr [1:153] \"group_31\" \"group_202\" \"group_85\" \"group_34\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:153] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"Bayern\" ... #>   .. ..$ Kgender      : chr [1:153] \"maennlich\" \"total\" \"weiblich\" \"maennlich\" ... #>   .. ..$ year         : chr [1:153] \"2009\" \"2009\" \"2009\" \"2009\" ... #>   .. ..$ kb           : chr [1:153] \"hoeren\" \"hoeren\" \"hoeren\" \"hoeren\" ... #>   ..$ estimate   :'data.frame':  2331 obs. of  7 variables: #>   .. ..$ id       : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ depVar   : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ parameter: chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ est      : num [1:2331] -40.74 -6.47 12.97 -34.27 -27.77 ... #>   .. ..$ se       : num [1:2331] 7.66 9.42 8.18 6.15 6.71 ... #>   .. ..$ p        : num [1:2331] 0 0.492 0.113 0 0 0.453 0.004 0 0.605 0.001 ... #>   .. ..$ es       : num [1:2331] -0.395 NA NA -0.336 -0.282 NA NA NA NA NA ... #>   ..- attr(*, \"class\")= chr [1:2] \"list\" \"report2\" #>  $ lesen :List of 4 #>   ..$ plain      :'data.frame':  2331 obs. of  17 variables: #>   .. ..$ label1       : chr [1:2331] \"trend (2015 - 2009) for BadenWuerttemberg_maennlich\" \"trend (2015 - 2009) for crossDiff (BadenWuerttemberg_maennlich - BadenWuerttemberg_total) \" \"trend (2015 - 2009) of groupDiff (maennlich - weiblich) in TR_BUNDESLAND=BadenWuerttemberg\" \"trend (2015 - 2009) for BadenWuerttemberg_total\" ... #>   .. ..$ label2       : chr [1:2331] \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich\" \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich)] - [year=2009: (TR_BUNDESLAND=BadenWuerttember\"| __truncated__ \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich) - (TR_BUNDESLAND=BadenWuerttemberg, Kgender=we\"| __truncated__ \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=total\" ... #>   .. ..$ unit_1       : chr [1:2331] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2       : chr [1:2331] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ depVar       : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ modus        : chr [1:2331] \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" ... #>   .. ..$ parameter    : chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ comparison   : chr [1:2331] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:2331] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" ... #>   .. ..$ Kgender      : chr [1:2331] \"maennlich\" \"maennlich - total\" \"maennlich - weiblich\" \"total\" ... #>   .. ..$ year         : chr [1:2331] \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" ... #>   .. ..$ id           : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ kb           : chr [1:2331] \"lesen\" \"lesen\" \"lesen\" \"lesen\" ... #>   .. ..$ est          : num [1:2331] -27.76 -3.48 6.9 -24.28 -20.86 ... #>   .. ..$ se           : num [1:2331] 8.9 10.97 7.93 6.81 6.51 ... #>   .. ..$ p            : num [1:2331] 0.002 0.751 0.385 0 0.001 0.709 0.196 0.077 0.824 0.074 ... #>   .. ..$ es           : num [1:2331] -0.271 NA NA -0.246 -0.226 NA NA NA NA NA ... #>   ..$ comparisons:'data.frame':  1719 obs. of  4 variables: #>   .. ..$ id        : chr [1:1719] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ unit_1    : chr [1:1719] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2    : chr [1:1719] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ comparison: chr [1:1719] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   ..$ group      :'data.frame':  153 obs. of  5 variables: #>   .. ..$ id           : chr [1:153] \"group_31\" \"group_202\" \"group_85\" \"group_34\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:153] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"Bayern\" ... #>   .. ..$ Kgender      : chr [1:153] \"maennlich\" \"total\" \"weiblich\" \"maennlich\" ... #>   .. ..$ year         : chr [1:153] \"2009\" \"2009\" \"2009\" \"2009\" ... #>   .. ..$ kb           : chr [1:153] \"lesen\" \"lesen\" \"lesen\" \"lesen\" ... #>   ..$ estimate   :'data.frame':  2331 obs. of  7 variables: #>   .. ..$ id       : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ depVar   : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ parameter: chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ est      : num [1:2331] -27.76 -3.48 6.9 -24.28 -20.86 ... #>   .. ..$ se       : num [1:2331] 8.9 10.97 7.93 6.81 6.51 ... #>   .. ..$ p        : num [1:2331] 0.002 0.751 0.385 0 0.001 0.709 0.196 0.077 0.824 0.074 ... #>   .. ..$ es       : num [1:2331] -0.271 NA NA -0.246 -0.226 NA NA NA NA NA ... #>   ..- attr(*, \"class\")= chr [1:2] \"list\" \"report2\" #>  $ listen:List of 4 #>   ..$ plain      :'data.frame':  2331 obs. of  17 variables: #>   .. ..$ label1       : chr [1:2331] \"trend (2015 - 2009) for BadenWuerttemberg_maennlich\" \"trend (2015 - 2009) for crossDiff (BadenWuerttemberg_maennlich - BadenWuerttemberg_total) \" \"trend (2015 - 2009) of groupDiff (maennlich - weiblich) in TR_BUNDESLAND=BadenWuerttemberg\" \"trend (2015 - 2009) for BadenWuerttemberg_total\" ... #>   .. ..$ label2       : chr [1:2331] \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich\" \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich)] - [year=2009: (TR_BUNDESLAND=BadenWuerttember\"| __truncated__ \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich) - (TR_BUNDESLAND=BadenWuerttemberg, Kgender=we\"| __truncated__ \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=total\" ... #>   .. ..$ unit_1       : chr [1:2331] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2       : chr [1:2331] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ depVar       : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ modus        : chr [1:2331] \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" ... #>   .. ..$ parameter    : chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ comparison   : chr [1:2331] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:2331] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" ... #>   .. ..$ Kgender      : chr [1:2331] \"maennlich\" \"maennlich - total\" \"maennlich - weiblich\" \"total\" ... #>   .. ..$ year         : chr [1:2331] \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" ... #>   .. ..$ id           : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ kb           : chr [1:2331] \"listen\" \"listen\" \"listen\" \"listen\" ... #>   .. ..$ est          : num [1:2331] 5.73 -2.36 4.88 8.09 10.61 ... #>   .. ..$ se           : num [1:2331] 6.64 8.62 6.91 5.82 6.67 ... #>   .. ..$ p            : num [1:2331] 0.388 0.784 0.48 0.165 0.112 0.77 0.045 0.05 0.439 0.067 ... #>   .. ..$ es           : num [1:2331] 0.063 NA NA 0.091 0.125 NA NA NA NA NA ... #>   ..$ comparisons:'data.frame':  1719 obs. of  4 variables: #>   .. ..$ id        : chr [1:1719] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ unit_1    : chr [1:1719] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2    : chr [1:1719] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ comparison: chr [1:1719] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   ..$ group      :'data.frame':  153 obs. of  5 variables: #>   .. ..$ id           : chr [1:153] \"group_31\" \"group_202\" \"group_85\" \"group_34\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:153] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"Bayern\" ... #>   .. ..$ Kgender      : chr [1:153] \"maennlich\" \"total\" \"weiblich\" \"maennlich\" ... #>   .. ..$ year         : chr [1:153] \"2009\" \"2009\" \"2009\" \"2009\" ... #>   .. ..$ kb           : chr [1:153] \"listen\" \"listen\" \"listen\" \"listen\" ... #>   ..$ estimate   :'data.frame':  2331 obs. of  7 variables: #>   .. ..$ id       : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ depVar   : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ parameter: chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ est      : num [1:2331] 5.73 -2.36 4.88 8.09 10.61 ... #>   .. ..$ se       : num [1:2331] 6.64 8.62 6.91 5.82 6.67 ... #>   .. ..$ p        : num [1:2331] 0.388 0.784 0.48 0.165 0.112 0.77 0.045 0.05 0.439 0.067 ... #>   .. ..$ es       : num [1:2331] 0.063 NA NA 0.091 0.125 NA NA NA NA NA ... #>   ..- attr(*, \"class\")= chr [1:2] \"list\" \"report2\" #>  $ ortho :List of 4 #>   ..$ plain      :'data.frame':  2331 obs. of  17 variables: #>   .. ..$ label1       : chr [1:2331] \"trend (2015 - 2009) for BadenWuerttemberg_maennlich\" \"trend (2015 - 2009) for crossDiff (BadenWuerttemberg_maennlich - BadenWuerttemberg_total) \" \"trend (2015 - 2009) of groupDiff (maennlich - weiblich) in TR_BUNDESLAND=BadenWuerttemberg\" \"trend (2015 - 2009) for BadenWuerttemberg_total\" ... #>   .. ..$ label2       : chr [1:2331] \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich\" \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich)] - [year=2009: (TR_BUNDESLAND=BadenWuerttember\"| __truncated__ \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich) - (TR_BUNDESLAND=BadenWuerttemberg, Kgender=we\"| __truncated__ \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=total\" ... #>   .. ..$ unit_1       : chr [1:2331] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2       : chr [1:2331] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ depVar       : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ modus        : chr [1:2331] \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" ... #>   .. ..$ parameter    : chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ comparison   : chr [1:2331] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:2331] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" ... #>   .. ..$ Kgender      : chr [1:2331] \"maennlich\" \"maennlich - total\" \"maennlich - weiblich\" \"total\" ... #>   .. ..$ year         : chr [1:2331] \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" ... #>   .. ..$ id           : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ kb           : chr [1:2331] \"ortho\" \"ortho\" \"ortho\" \"ortho\" ... #>   .. ..$ est          : num [1:2331] -18 -0.984 1.639 -17.016 -16.361 ... #>   .. ..$ se           : num [1:2331] 6.92 8.64 7.93 5.47 6.21 ... #>   .. ..$ p            : num [1:2331] 0.009 0.909 0.836 0.002 0.008 0.935 0.023 0.048 0.464 0.022 ... #>   .. ..$ es           : num [1:2331] -0.177 NA NA -0.168 -0.174 NA NA NA NA NA ... #>   ..$ comparisons:'data.frame':  1719 obs. of  4 variables: #>   .. ..$ id        : chr [1:1719] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ unit_1    : chr [1:1719] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2    : chr [1:1719] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ comparison: chr [1:1719] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   ..$ group      :'data.frame':  153 obs. of  5 variables: #>   .. ..$ id           : chr [1:153] \"group_31\" \"group_202\" \"group_85\" \"group_34\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:153] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"Bayern\" ... #>   .. ..$ Kgender      : chr [1:153] \"maennlich\" \"total\" \"weiblich\" \"maennlich\" ... #>   .. ..$ year         : chr [1:153] \"2009\" \"2009\" \"2009\" \"2009\" ... #>   .. ..$ kb           : chr [1:153] \"ortho\" \"ortho\" \"ortho\" \"ortho\" ... #>   ..$ estimate   :'data.frame':  2331 obs. of  7 variables: #>   .. ..$ id       : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ depVar   : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ parameter: chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ est      : num [1:2331] -18 -0.984 1.639 -17.016 -16.361 ... #>   .. ..$ se       : num [1:2331] 6.92 8.64 7.93 5.47 6.21 ... #>   .. ..$ p        : num [1:2331] 0.009 0.909 0.836 0.002 0.008 0.935 0.023 0.048 0.464 0.022 ... #>   .. ..$ es       : num [1:2331] -0.177 NA NA -0.168 -0.174 NA NA NA NA NA ... #>   ..- attr(*, \"class\")= chr [1:2] \"list\" \"report2\" #>  $ read  :List of 4 #>   ..$ plain      :'data.frame':  2331 obs. of  17 variables: #>   .. ..$ label1       : chr [1:2331] \"trend (2015 - 2009) for BadenWuerttemberg_maennlich\" \"trend (2015 - 2009) for crossDiff (BadenWuerttemberg_maennlich - BadenWuerttemberg_total) \" \"trend (2015 - 2009) of groupDiff (maennlich - weiblich) in TR_BUNDESLAND=BadenWuerttemberg\" \"trend (2015 - 2009) for BadenWuerttemberg_total\" ... #>   .. ..$ label2       : chr [1:2331] \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich\" \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich)] - [year=2009: (TR_BUNDESLAND=BadenWuerttember\"| __truncated__ \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich) - (TR_BUNDESLAND=BadenWuerttemberg, Kgender=we\"| __truncated__ \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=total\" ... #>   .. ..$ unit_1       : chr [1:2331] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2       : chr [1:2331] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ depVar       : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ modus        : chr [1:2331] \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" ... #>   .. ..$ parameter    : chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ comparison   : chr [1:2331] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:2331] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" ... #>   .. ..$ Kgender      : chr [1:2331] \"maennlich\" \"maennlich - total\" \"maennlich - weiblich\" \"total\" ... #>   .. ..$ year         : chr [1:2331] \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" ... #>   .. ..$ id           : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ kb           : chr [1:2331] \"read\" \"read\" \"read\" \"read\" ... #>   .. ..$ est          : num [1:2331] -0.757 -8.125 16.415 7.368 15.658 ... #>   .. ..$ se           : num [1:2331] 6.32 7.98 7.54 5.22 6.35 ... #>   .. ..$ p            : num [1:2331] 0.905 0.309 0.03 0.158 0.014 0.301 0.047 0.017 0.154 0.176 ... #>   .. ..$ es           : num [1:2331] -0.008 NA NA 0.085 0.19 NA NA NA NA NA ... #>   ..$ comparisons:'data.frame':  1719 obs. of  4 variables: #>   .. ..$ id        : chr [1:1719] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ unit_1    : chr [1:1719] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   .. ..$ unit_2    : chr [1:1719] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   .. ..$ comparison: chr [1:1719] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   ..$ group      :'data.frame':  153 obs. of  5 variables: #>   .. ..$ id           : chr [1:153] \"group_31\" \"group_202\" \"group_85\" \"group_34\" ... #>   .. ..$ TR_BUNDESLAND: chr [1:153] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"Bayern\" ... #>   .. ..$ Kgender      : chr [1:153] \"maennlich\" \"total\" \"weiblich\" \"maennlich\" ... #>   .. ..$ year         : chr [1:153] \"2009\" \"2009\" \"2009\" \"2009\" ... #>   .. ..$ kb           : chr [1:153] \"read\" \"read\" \"read\" \"read\" ... #>   ..$ estimate   :'data.frame':  2331 obs. of  7 variables: #>   .. ..$ id       : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   .. ..$ depVar   : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   .. ..$ parameter: chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   .. ..$ est      : num [1:2331] -0.757 -8.125 16.415 7.368 15.658 ... #>   .. ..$ se       : num [1:2331] 6.32 7.98 7.54 5.22 6.35 ... #>   .. ..$ p        : num [1:2331] 0.905 0.309 0.03 0.158 0.014 0.301 0.047 0.017 0.154 0.176 ... #>   .. ..$ es       : num [1:2331] -0.008 NA NA 0.085 0.19 NA NA NA NA NA ... #>   ..- attr(*, \"class\")= chr [1:2] \"list\" \"report2\" #>  - attr(*, \"dim\")= int 5 #>  - attr(*, \"dimnames\")=List of 1 #>   ..$ datK6.auswahl[, \"kb\"]: chr [1:5] \"hoeren\" \"lesen\" \"listen\" \"ortho\" ... #>  - attr(*, \"call\")= language by.data.frame(data = datK6.auswahl, INDICES = datK6.auswahl[, \"kb\"], FUN = function(kb) {     disp <- repMean(dat| __truncated__ ... #>  - attr(*, \"class\")= chr \"by\" names(dispar) #> [1] \"hoeren\" \"lesen\"  \"listen\" \"ortho\"  \"read\""},{"path":"https://nickhaf.github.io/eatPlot/articles/loop_example.html","id":"build-the-plot","dir":"Articles","previous_headings":"","what":"1. Build the plot","title":"Mehrere Kompetenzbereiche: Schleifen","text":"goal build Abbildung 6.6. Let’s take hoeren prototype: First, need search appropriate template website. Luckily, already template Abbildung 6.6. ewe need follow ! , first look subgroup variable called. can find easiest looking group plain data.frame: subgroup variable called Kgender. Now can use prep_tablebarplot() function prepare data plotting. course put data function: prepared data.","code":"str(dispar$hoeren) #> List of 4 #>  $ plain      :'data.frame': 2331 obs. of  17 variables: #>   ..$ label1       : chr [1:2331] \"trend (2015 - 2009) for BadenWuerttemberg_maennlich\" \"trend (2015 - 2009) for crossDiff (BadenWuerttemberg_maennlich - BadenWuerttemberg_total) \" \"trend (2015 - 2009) of groupDiff (maennlich - weiblich) in TR_BUNDESLAND=BadenWuerttemberg\" \"trend (2015 - 2009) for BadenWuerttemberg_total\" ... #>   ..$ label2       : chr [1:2331] \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich\" \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich)] - [year=2009: (TR_BUNDESLAND=BadenWuerttember\"| __truncated__ \"[year=2015: (TR_BUNDESLAND=BadenWuerttemberg, Kgender=maennlich) - (TR_BUNDESLAND=BadenWuerttemberg, Kgender=we\"| __truncated__ \"year=2015 - year=2009: TR_BUNDESLAND=BadenWuerttemberg, Kgender=total\" ... #>   ..$ unit_1       : chr [1:2331] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   ..$ unit_2       : chr [1:2331] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   ..$ depVar       : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   ..$ modus        : chr [1:2331] \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" \"JK2.mean__BIFIEsurvey\" ... #>   ..$ parameter    : chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   ..$ comparison   : chr [1:2331] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>   ..$ TR_BUNDESLAND: chr [1:2331] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" ... #>   ..$ Kgender      : chr [1:2331] \"maennlich\" \"maennlich - total\" \"maennlich - weiblich\" \"total\" ... #>   ..$ year         : chr [1:2331] \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" \"2015 - 2009\" ... #>   ..$ id           : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   ..$ kb           : chr [1:2331] \"hoeren\" \"hoeren\" \"hoeren\" \"hoeren\" ... #>   ..$ est          : num [1:2331] -40.74 -6.47 12.97 -34.27 -27.77 ... #>   ..$ se           : num [1:2331] 7.66 9.42 8.18 6.15 6.71 ... #>   ..$ p            : num [1:2331] 0 0.492 0.113 0 0 0.453 0.004 0 0.605 0.001 ... #>   ..$ es           : num [1:2331] -0.395 NA NA -0.336 -0.282 NA NA NA NA NA ... #>  $ comparisons:'data.frame': 1719 obs. of  4 variables: #>   ..$ id        : chr [1:1719] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   ..$ unit_1    : chr [1:1719] \"group_31\" \"comp_757\" \"comp_154\" \"group_202\" ... #>   ..$ unit_2    : chr [1:1719] \"group_225\" \"comp_1373\" \"comp_307\" \"group_339\" ... #>   ..$ comparison: chr [1:1719] \"trend\" \"trend_crossDiff\" \"trend_groupDiff\" \"trend\" ... #>  $ group      :'data.frame': 153 obs. of  5 variables: #>   ..$ id           : chr [1:153] \"group_31\" \"group_202\" \"group_85\" \"group_34\" ... #>   ..$ TR_BUNDESLAND: chr [1:153] \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"Bayern\" ... #>   ..$ Kgender      : chr [1:153] \"maennlich\" \"total\" \"weiblich\" \"maennlich\" ... #>   ..$ year         : chr [1:153] \"2009\" \"2009\" \"2009\" \"2009\" ... #>   ..$ kb           : chr [1:153] \"hoeren\" \"hoeren\" \"hoeren\" \"hoeren\" ... #>  $ estimate   :'data.frame': 2331 obs. of  7 variables: #>   ..$ id       : chr [1:2331] \"comp_32\" \"comp_758\" \"comp_155\" \"comp_203\" ... #>   ..$ depVar   : chr [1:2331] \"bista\" \"bista\" \"bista\" \"bista\" ... #>   ..$ parameter: chr [1:2331] \"mean\" \"mean\" \"mean\" \"mean\" ... #>   ..$ est      : num [1:2331] -40.74 -6.47 12.97 -34.27 -27.77 ... #>   ..$ se       : num [1:2331] 7.66 9.42 8.18 6.15 6.71 ... #>   ..$ p        : num [1:2331] 0 0.492 0.113 0 0 0.453 0.004 0 0.605 0.001 ... #>   ..$ es       : num [1:2331] -0.395 NA NA -0.336 -0.282 NA NA NA NA NA ... #>  - attr(*, \"class\")= chr [1:2] \"list\" \"report2\" str(dispar$hoeren$group) #> 'data.frame':    153 obs. of  5 variables: #>  $ id           : chr  \"group_31\" \"group_202\" \"group_85\" \"group_34\" ... #>  $ TR_BUNDESLAND: chr  \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"BadenWuerttemberg\" \"Bayern\" ... #>  $ Kgender      : chr  \"maennlich\" \"total\" \"weiblich\" \"maennlich\" ... #>  $ year         : chr  \"2009\" \"2009\" \"2009\" \"2009\" ... #>  $ kb           : chr  \"hoeren\" \"hoeren\" \"hoeren\" \"hoeren\" ... dat_6.6 <- prep_tablebarplot(   dispar$hoeren, ## My data.frame   subgroup_var = \"Kgender\", ## The subgroup variable   parameter = c(\"mean\", \"sd\") ## We need both mean and sd for the plot )"},{"path":"https://nickhaf.github.io/eatPlot/articles/loop_example.html","id":"data-wrangling","dir":"Articles","previous_headings":"1. Build the plot","what":"Data wrangling","title":"Mehrere Kompetenzbereiche: Schleifen","text":"specific plot, also additional (simple) data transformation, data plotted order, give function. First , can subset subgroup variable extract groups, want use plot: BT, girls always top. achieve , sort data: Also, want write Bundesland plot every second row, let’s remove duplicates: can use process_bundesland() function add dashes replace umlauts. also want break Bundesländer names, long, set linebreak = TRUE: Finally, rename groups “Jungen” “Mädchen” add empty column, used separator later : ’s . data now correct format plotting.","code":"gender_hoeren <- subset(dat_6.6, subgroup_var %in% c(\"maennlich\", \"weiblich\")) gender_hoeren <- gender_hoeren[order(gender_hoeren$subgroup_var, decreasing = TRUE), ] gender_hoeren <- gender_hoeren[order(gender_hoeren$state_var), ] gender_hoeren$state_var[duplicated(gender_hoeren$state_var)] <- \" \" gender_hoeren$state_var <- process_bundesland(gender_hoeren$state_var, linebreak = TRUE) gender_hoeren$subgroup_var <- gsub(\"maennlich\", \"Jungen\", gender_hoeren$subgroup_var) gender_hoeren$subgroup_var <- gsub(\"weiblich\", \"Mädchen\", gender_hoeren$subgroup_var)  gender_hoeren$empty <- \"\""},{"path":"https://nickhaf.github.io/eatPlot/articles/loop_example.html","id":"plotting","dir":"Articles","previous_headings":"1. Build the plot","what":"Plotting","title":"Mehrere Kompetenzbereiche: Schleifen","text":"want plot two plots next , need set column widths plots : build tables, copy paste template website: Finally, can combine plots:","code":"column_widths_stand <- standardize_column_width(   column_widths = list(     p1 = c(0.085, 0.05, rep(0.035, 6), 0.015, rep(0.035, 3), NA),     p2 = c(rep(0.035, 3), NA)   ),   plot_ranges = c(142, 142) # Ranges of the x-axes of both plots set in 'axis_x_lims'. ) p_1 <- plot_tablebarplot(   dat = gender_hoeren,   bar_est = \"est_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",   bar_label = NULL,   bar_sig = \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",   bar_fill = \"subgroup_var\",   column_spanners = list(     \"**2009**\" = c(3, 4),     \"**2015**\" = c(5, 6),     \"**2022**\" = c(7, 8),     \"**Differenz 2015-2009**\" = c(10, 13)   ),   columns_table_se = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"se_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", NULL),   headers = list(\"**Land**\", \" \", \"*M*\", \"*SD*\", \"*M*\", \"*SD*\", \"*M*\", \"*SD*\", \"\", \"*M<sub>2015<\/sub>-<br>M<sub>2009<\/sub>* \", \"*(SE)*\", \"*d*\", \" \"),   columns_table = c(\"state_var\", \"subgroup_var\", \"est_mean_comp_none_2009\", \"est_sd_comp_none_2009\", \"est_mean_comp_none_2015\", \"est_sd_comp_none_2015\", \"est_mean_comp_none_2022\", \"est_sd_comp_none_2022\", \"empty\", \"est_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", \"se_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", \"es_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\"),   columns_table_sig_bold = list(     NULL, NULL, \"sig_mean_comp_none_2009\",     NULL, \"sig_mean_comp_none_2015\", NULL, \"sig_mean_comp_none_2022\", NULL, NULL, \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", NULL, \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\"   ),   columns_table_sig_superscript = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"sig_mean_comp_trend_crossDiff_totalFacet_sameSubgroup_2009_2015\", NULL, NULL),   y_axis = \"y_axis\",   columns_round = c(rep(0, 11), 2),   plot_settings = plotsettings_tablebarplot(     bar_pattern_spacing = 0.0159,     columns_alignment = c(0, 0, rep(2, 10)),     columns_width = column_widths_stand$p1, ## This is the column-width object we set above     columns_nudge_y = c(-0.5, rep(0, 11)),     headers_alignment = c(0, 0, rep(0.5, 7), 0, 0.5, 0.5, 0),     headers_row_height = 1.75,     headers_nudge_x = c(rep(0, 9), 2, rep(0, 3)),     default_list = abb_6.6   ) )   p_2 <- plot_tablebarplot(   dat = gender_hoeren,   bar_est = \"est_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",   bar_label = NULL,   bar_sig = \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",   bar_fill = \"subgroup_var\",   column_spanners = list(     \"**Differenz 2022-2015**\" = c(1, 4)   ),   headers = list(     \"*M<sub>2022<\/sub>-<br>M<sub>2015<\/sub>* \",     \"*(SE)*\",     \"*d*\",     \" \"   ),   columns_table = c(     \"est_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",     \"se_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",     \"es_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\"   ),   columns_table_se = list(NULL, \"se_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\", NULL),   columns_table_sig_bold = list(\"sig_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\", NULL, \"sig_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\"),   columns_table_sig_superscript = list(\"sig_mean_comp_trend_crossDiff_totalFacet_sameSubgroup_2015_2022\", NULL, NULL),   y_axis = \"y_axis\",   columns_round = c(0, 0, 2),   plot_settings = plotsettings_tablebarplot(     bar_pattern_spacing = 0.0341,     columns_alignment = c(2, 2, 2),     columns_width = column_widths_stand$p2, ## This is the column-width object we set above     headers_nudge_x = c(2, 0, 0, 0),     headers_alignment = c(0, 0.5, 0.5, 0),     headers_row_height = 1.75,     default_list = abb_6.6   ) ) tableplot_6.6 <- combine_plots(list(p_1, p_2))"},{"path":"https://nickhaf.github.io/eatPlot/articles/loop_example.html","id":"adjustments","dir":"Articles","previous_headings":"","what":"2. Adjustments","title":"Mehrere Kompetenzbereiche: Schleifen","text":"Now can fine/tune plot, like setting column widths, nudge headers right position, etc. look plot right format changes shown correct proportions. Either save PDF, use ggview package: (re-evaluate plot without canvas() function saving though.) everything satisfactory, can save plot.","code":"p <- tableplot_6.6 +   ggview::canvas(     235, 130,     units = \"mm\"   ) p save_plot(tableplot_6.6, filename = \"C:/Users/hafiznij/Downloads/abb_6.6.pdf\", width = 235, height = 130, scaling = 1)"},{"path":"https://nickhaf.github.io/eatPlot/articles/loop_example.html","id":"put-it-into-a-function","dir":"Articles","previous_headings":"","what":"3. Put it into a function","title":"Mehrere Kompetenzbereiche: Schleifen","text":"soon plot basis works, can put code dedicated function, pack away: function now thing done , can easily exchange data set:","code":"## Data Prep prepare_6.6_data <- function(dat_kb) {   dat_6.6 <- prep_tablebarplot(     dat_kb,     subgroup_var = \"Kgender\",     parameter = c(\"mean\", \"sd\") ## We need both mean and sd for the plot   )     ## Jetzt müssen wir die Daten noch ein wenig für unseren spezifischen Plot umformen   ## Wir wollen nur männlich und weiblich plotten:   dat_6.6 <- subset(dat_6.6, subgroup_var %in% c(\"maennlich\", \"weiblich\"))    ## Mädchen sollen nach oben, d.h. wir sortieren zuerst absteigend alphabetisch, und dann nach den Bundesländern, um diese wieder in die richtige Reihenfolge zu bekommen   dat_6.6 <- dat_6.6[order(dat_6.6$subgroup_var, decreasing = TRUE), ]   dat_6.6 <- dat_6.6[order(dat_6.6$state_var), ]    ## Dann soll nur in jeder zweiten Zeile das Bundesland geplotted werden, wir entfernen also Duplikate:   dat_6.6$state_var[duplicated(dat_6.6$state_var)] <- \" \"    ## Mit process_bundesland() können wir Bindestriche einfügen und Umlaute austauschen.   ## linebreak = TRUE damit Bundesländer die aus zwei Wörten bestehen umgebrochen werden   dat_6.6$state_var <- process_bundesland(dat_6.6$state_var, linebreak = TRUE)    ## Dann müssen wir noch die Gruppen in Jungen und Mädchen umbenennen   dat_6.6$subgroup_var <- gsub(\"maennlich\", \"Jungen\", dat_6.6$subgroup_var)   dat_6.6$subgroup_var <- gsub(\"weiblich\", \"Mädchen\", dat_6.6$subgroup_var)    ## Und eine leere Spalte erzeugen, die später als Trenner dient   dat_6.6$empty <- \"\"    return(dat_6.6) }  ## Plotting plot_6.6 <- function(dat_prepped) {   column_widths_stand <- standardize_column_width(     column_widths = list(       p1 = c(0.085, 0.05, rep(0.035, 6), 0.015, rep(0.035, 3), NA),       p2 = c(rep(0.035, 3), NA)     ),     plot_ranges = c(140, 142) # Ranges of the x-axes of both plots set in 'axis_x_lims'.   )     ## 3. Tabellen erzeugen:   ## Dafür copy-pasten wir einfach von der Vorlage:    p_1 <- plot_tablebarplot(     dat = dat_prepped,     bar_est = \"est_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",     bar_label = NULL,     bar_sig = \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",     bar_fill = \"subgroup_var\",     column_spanners = list(       \"**2009**\" = c(3, 4),       \"**2015**\" = c(5, 6),       \"**2022**\" = c(7, 8),       \"**Differenz 2015-2009**\" = c(10, 13)     ),     columns_table_se = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"se_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", NULL),     headers = list(\"**Land**\", \" \", \"*M*\", \"*SD*\", \"*M*\", \"*SD*\", \"*M*\", \"*SD*\", \"\", \"*M<sub>2015<\/sub>-<br>M<sub>2009<\/sub>* \", \"*(SE)*\", \"*d*\", \" \"),     columns_table = c(\"state_var\", \"subgroup_var\", \"est_mean_comp_none_2009\", \"est_sd_comp_none_2009\", \"est_mean_comp_none_2015\", \"est_sd_comp_none_2015\", \"est_mean_comp_none_2022\", \"est_sd_comp_none_2022\", \"empty\", \"est_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", \"se_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", \"es_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\"),     columns_table_sig_bold = list(       NULL, NULL, \"sig_mean_comp_none_2009\",       NULL, \"sig_mean_comp_none_2015\", NULL, \"sig_mean_comp_none_2022\", NULL, NULL, \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", NULL, \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\"     ),     columns_table_sig_superscript = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"sig_mean_comp_trend_crossDiff_totalFacet_sameSubgroup_2009_2015\", NULL, NULL),     y_axis = \"y_axis\",     columns_round = c(rep(0, 11), 2),     plot_settings = plotsettings_tablebarplot(       axis_x_lims = c(-70, 70),       bar_pattern_spacing = 0.016,       columns_alignment = c(0, 0, rep(2, 10)),       columns_width = column_widths_stand$p1, ## This is the column-width object we set above       columns_table_sig_superscript_letter = \"a\",       columns_table_sig_superscript_letter_nudge_x = 5.5,       columns_nudge_y = c(-0.5, rep(0, 11)),       headers_alignment = c(0, 0, rep(0.5, 7), 0, 0.5, 0.5, 0),       headers_row_height = 1.75,       headers_nudge_x = c(rep(0, 9), 2, rep(0, 3)),       default_list = abb_6.6     )   )      p_2 <- plot_tablebarplot(     dat = dat_prepped,     bar_est = \"est_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",     bar_label = NULL,     bar_sig = \"sig_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",     bar_fill = \"subgroup_var\",     column_spanners = list(       \"**Differenz 2022-2015**\" = c(1, 4)     ),     headers = list(       \"*M<sub>2022<\/sub>-<br>M<sub>2015<\/sub>* \",       \"*(SE)*\",       \"*d*\",       \" \"     ),     columns_table = c(       \"est_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",       \"se_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",       \"es_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\"     ),     columns_table_se = list(NULL, \"se_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\", NULL),     columns_table_sig_bold = list(\"sig_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\", NULL, \"sig_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\"),     columns_table_sig_superscript = list(\"sig_mean_comp_trend_crossDiff_totalFacet_sameSubgroup_2015_2022\", NULL, NULL),     y_axis = \"y_axis\",     columns_round = c(0, 0, 2),     plot_settings = plotsettings_tablebarplot(       axis_x_lims = c(-70, 72),       bar_pattern_spacing = 0.034,        columns_alignment = c(2, 2, 2),       columns_width = column_widths_stand$p2, ## This is the column-width object we set above       columns_table_sig_superscript_letter = \"a\",       columns_table_sig_superscript_letter_nudge_x = 5.5,       headers_nudge_x = c(2, 0, 0, 0),       headers_alignment = c(0, 0.5, 0.5, 0),       headers_row_height = 1.75,       default_list = abb_6.6     )   )    tableplot_6.6 <- combine_plots(list(p_1, p_2))    save_plot(tableplot_6.6,     filename = paste0(       \"C:/Users/hafiznij/Downloads/abb_6.6_\",       unique(dat_prepped$kb),       \".pdf\"     ),     width = 235,     height = 130,     scaling = 1   )    return(tableplot_6.6) } prepped_hoeren <- prepare_6.6_data(kap_06$hoeren) plot_hoeren <- plot_6.6(prepped_hoeren)"},{"path":"https://nickhaf.github.io/eatPlot/articles/loop_example.html","id":"looping-over-the-competence-areas","dir":"Articles","previous_headings":"","what":"4. Looping over the competence areas","title":"Mehrere Kompetenzbereiche: Schleifen","text":"Now can use function looping competence areas lapply():","code":"list_prepped <- lapply(dispar, prepare_6.6_data) list_plots <- lapply(list_prepped, plot_6.6) list_plots$read list_plots$listen"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/tableplots.html","id":"abbildung-6-5","dir":"Articles","previous_headings":"Geschlechterkapitel","what":"Abbildung 6.5","title":"Tableplots","text":"First prepare data: Now, want plot comparison male vs. female. direction always , can look plain data, therefore doesn’t matter one filter: tables need work, need connected barplot, half rows. Therefore need build separate variables table part, respective rows domain plotted table half set empty strings. want plot competence areas next , minor data wrangling first: Now can plot table like usual, one exception: can nudge table contents bit downwards, also fill empty row. Finally can save plot:","code":"gender_prepped <- do.call(rbind, lapply(trend_gender, prep_tablebarplot, subgroup_var = \"Kgender\")) gender_prepped_sub <- subset(gender_prepped, subgroup_var == \"male\") gender_prepped <- gender_prepped_sub[order(gender_prepped_sub$state_var), ] gender_prepped$y_axis <- 1:nrow(gender_prepped)  gender_prepped$state_var <- process_bundesland(gender_prepped$state_var, linebreak = FALSE) gender_prepped_lesen <- gender_prepped gender_prepped_lesen[gender_prepped_lesen$kb == \"hoeren\", !colnames(gender_prepped) %in% c(\"y_axis\", \"kb\")] <- NA  gender_prepped_hoeren <- gender_prepped gender_prepped_hoeren[gender_prepped_hoeren$kb == \"lesen\", !colnames(gender_prepped) %in% c(\"y_axis\", \"kb\")] <- NA  gender_prepped_lh <- merge(gender_prepped_lesen, gender_prepped_hoeren, by = c(\"y_axis\", \"kb\"), suffixes = c(\"_lesen\", \"_hören\")) gender_prepped_lh_final <- merge(   gender_prepped_lh,   gender_prepped[, c(     \"y_axis\",     \"est_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\",     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\"   )] )   gender_prepped_lh_final <- gender_prepped_lh_final[order(gender_prepped_lh_final$y_axis), ] tableplot_6.5 <- plot_tablebarplot(   dat = gender_prepped_lh_final,   bar_est = \"est_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\",   bar_fill = \"kb\",   bar_sig = \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\",   columns_table = list(     \"state_var_lesen\",     \"est_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_lesen\",     \"se_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_lesen\",     \"es_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_lesen\",     \"est_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_hören\",     \"se_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_hören\",     \"es_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_hören\"   ),   columns_table_sig_bold = list(     NULL,     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_lesen\",     NULL,     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_lesen\",     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_hören\",     NULL,     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_hören\"   ),   columns_table_sig_superscript = list(     NULL,     \"sig_mean_comp_crossDiff_of_groupDiff_totalFacet_femaleSubgroup_2022_lesen\",     NULL,     \"sig_mean_comp_crossDiff_of_groupDiff_totalFacet_femaleSubgroup_2022_lesen\",     \"sig_mean_comp_crossDiff_of_groupDiff_totalFacet_femaleSubgroup_2022_hören\",     NULL,     \"sig_mean_comp_crossDiff_of_groupDiff_totalFacet_femaleSubgroup_2022_hören\"   ),   columns_round = list(NULL, 0, 1, 2, 0, 1, 2),   columns_table_se = list(     NULL,     NULL,     \"se_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_lesen\",     NULL,     NULL,     \"se_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022_hören\",     NULL   ),   headers = list(     \"**Land**\",     \"*M*<sub>M<\/sub>-*M*<sub>J<\/sub>\",     \"(*SE*)\",     \"*d*\",     \"*M*<sub>M<\/sub>-*M*<sub>J<\/sub>\",     \"(*SE*)\",     \"*d*\",     \"**Vorsprung zugunsten der<br>Mädchen**\"   ),   column_spanners = list(\"**Leseverstehen**\" = c(2, 4), \"**Hörverstehen**\" = c(5, 7)),   y_axis = \"y_axis\",   plot_settings = plotsettings_tablebarplot(     default_list = abb_6.5   ) ) save_plot(tableplot_6.5, filename = \"C:/Users/hafiznij/Downloads/abb6.5.pdf\", width = 160, height = 90) tableplot_6.5"},{"path":"https://nickhaf.github.io/eatPlot/articles/tableplots.html","id":"abbildung-6-6","dir":"Articles","previous_headings":"Geschlechterkapitel","what":"Abbildung 6.6","title":"Tableplots","text":"First data prepared: Afterwards, bring format want plot : plot multiple plots combine . , set column widths, identical different plots: can just use object plot-settings adjust column widths. values set plot-settings . Now can combine plots: save result:","code":"gender_prepped_mean_sd <- lapply(trend_gender,   prep_tablebarplot,   subgroup_var = \"Kgender\",   parameter = c(\"mean\", \"sd\") )  ## Let's focus on:  gender_lesen <- gender_prepped_mean_sd[[1]] gender_lesen <- subset(gender_lesen, subgroup_var %in% c(\"male\", \"female\"))  ## females should be the first row always: gender_lesen <- gender_lesen[order(gender_lesen$subgroup_var), ] gender_lesen <- gender_lesen[order(gender_lesen$state_var), ]   gender_lesen$state_var <- process_bundesland(gender_lesen$state_var, linebreak = TRUE) ## Depending on whether a column has a linebreak, they have to be nudged down. I define the according vector here already, because it might get confusing furhter down: nudge_col1_y <- ifelse(grepl(\"<br>\", gender_lesen$state_var), -0.25, -0.5)   gender_lesen$state_var[duplicated(gender_lesen$state_var)] <- \" \" gender_lesen$subgroup_var <- gsub(\"^male\", \"Jungen\", gender_lesen$subgroup_var) gender_lesen$subgroup_var <- gsub(\"female\", \"Mädchen\", gender_lesen$subgroup_var) gender_lesen$empty <- \"\" column_widths_stand <- standardize_column_width(   column_widths = list(     p1 = c(0.085, 0.05, rep(0.035, 6), 0.015, rep(0.035, 3), NA),     p2 = c(rep(0.035, 3), NA)   ),   plot_ranges = c(142, 142) # Ranges of the x-axes of both plots set in 'axis_x_lims'. ) p_1 <- plot_tablebarplot(   dat = gender_lesen,   bar_est = \"est_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",   bar_label = NULL,   bar_sig = \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",   bar_fill = \"subgroup_var\",   column_spanners = list(     \"**2009**\" = c(3, 4),     \"**2015**\" = c(5, 6),     \"**2022**\" = c(7, 8),     \"**Differenz 2015-2009**\" = c(10, 13)   ),   columns_table_se = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"se_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\", NULL),   headers = list(\"**Land**\", \" \", \"*M*\", \"*SD*\", \"*M*\", \"*SD*\", \"*M*\", \"*SD*\", \"\", \"*M*<sub>2015<\/sub>-<br>*M*<sub>2009<\/sub> \", \"(*SE*)\", \"*d*\", \" \"),   columns_table = c(     \"state_var\",     \"subgroup_var\",     \"est_mean_comp_none_2009\",     \"est_sd_comp_none_2009\",     \"est_mean_comp_none_2015\",     \"est_sd_comp_none_2015\",     \"est_mean_comp_none_2022\",     \"est_sd_comp_none_2022\",     \"empty\",     \"est_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",     \"se_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",     \"es_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\"   ),   columns_table_sig_bold = list(     NULL,     NULL,     \"sig_mean_comp_crossDiff_totalFacet_sameSubgroup_2009\",     NULL,     \"sig_mean_comp_crossDiff_totalFacet_sameSubgroup_2015\",     NULL,     \"sig_mean_comp_crossDiff_totalFacet_sameSubgroup_2022\",     NULL,     NULL,     \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\",     NULL,     \"sig_mean_comp_trend_sameFacet_sameSubgroup_2009_2015\"   ),   columns_table_sig_superscript = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"sig_mean_comp_trend_crossDiff_totalFacet_sameSubgroup_2009_2015\", NULL, NULL),   y_axis = \"y_axis\",   columns_round = c(rep(0, 10), 1, 2),   plot_settings = plotsettings_tablebarplot(     bar_pattern_spacing = 0.01, ## Try out what look good. For own plots, take the template ones as orientation     columns_alignment = c(0, 0, rep(2, 10)),     columns_width = column_widths_stand$p1, ## This is the column-width object we set above     columns_nudge_x = c(rep(0, 9), -1.5, 0, 0),     columns_nudge_y = c(list(nudge_col1_y), rep(list(0), 11)),     headers_alignment = c(0, 0, rep(0.5, 7), 0, 0.5, 0.5, 0),     headers_nudge_x = c(rep(0, 9), 2, rep(0, 3)),     default_list = abb_6.6   ) )  p_2 <- plot_tablebarplot(   dat = gender_lesen,   bar_est = \"est_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",   bar_label = NULL,   bar_sig = \"sig_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",   bar_fill = \"subgroup_var\",   column_spanners = list(     \"**Differenz 2022-2015**\" = c(1, 4)   ),   headers = list(     \"*M*<sub>2022<\/sub>-<br>*M*<sub>2015<\/sub> \",     \"(*SE*)\",     \"*d*\",     \" \"   ),   columns_table = c(     \"est_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",     \"se_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",     \"es_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\"   ),   columns_table_se = list(NULL, \"se_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\", NULL),   columns_table_sig_bold = list(     \"sig_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\",     NULL,     \"sig_mean_comp_trend_sameFacet_sameSubgroup_2015_2022\"   ),   columns_table_sig_superscript = list(\"sig_mean_comp_trend_crossDiff_totalFacet_sameSubgroup_2015_2022\", NULL, NULL),   y_axis = \"y_axis\",   columns_round = c(0, 1, 2),   plot_settings = plotsettings_tablebarplot(     bar_pattern_spacing = 0.017,     columns_alignment = c(2, 2, 2),     columns_width = column_widths_stand$p2, ## This is the column-width object we set above     headers_nudge_x = c(2, 0, 0, 0),     headers_alignment = c(0, 0.5, 0.5, 0),     default_list = abb_6.6   ) ) tableplot_6.6 <- combine_plots(list(p_1, p_2)) save_plot(tableplot_6.6, filename = \"C:/Users/hafiznij/Downloads/abb_6.6.pdf\", width = 235, height = 130)"},{"path":"https://nickhaf.github.io/eatPlot/articles/tableplots.html","id":"zuwanderungskapitel","dir":"Articles","previous_headings":"","what":"Zuwanderungskapitel","title":"Tableplots","text":"Currently use gender_trend data demonstration purposes, subgroups course named differently actual chapter.","code":"gender_prepped_2 <- gender_prepped[gender_prepped$kb == \"lesen\", ] gender_prepped_2$empty <- \"\" ## Needes as a empty space between column spanners gender_prepped_2$state_var <- process_bundesland(gender_prepped_2$state_var, linebreak = FALSE) column_widths_stand <- standardize_column_width(   column_widths = list(     p1 = c(0.16, rep(0.045, 5), NA),     p2 = c(0.015, 0.07, 0.045, NA),     p3 = c(0.07, 0.045, NA)   ),   plot_ranges = c(60, 60, 65) # Range of the x-axes of both plots set in 'axis_x_lims'. ) p_1 <- plot_tablebarplot(   dat = gender_prepped_2,   bar_est = \"est_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\",   bar_sig = \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\",   column_spanners = list(     \"**2009**\" = c(2),     \"**2015**\" = c(3),     \"**2022**\" = c(4, 7)   ),   column_spanners_2 = list(     \"**Differenz Schüler:innen mit - Schüler:innen ohne <br> Zuwanderungshintergrund**\" = c(2, 7)   ),   columns_table_se = list(NULL, NULL, NULL, NULL, \"se_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\", NULL),   headers = list(     \"bold(Land)\",     \"Delta * italic(M)\",     \"Delta * italic(M)\",     \"Delta * italic(M)\",     \"(italic(SE))\",     \"italic(d)\",     \" \"   ),   columns_table = c(     \"state_var\",     \"est_mean_comp_groupDiff_sameFacet_femaleSubgroup_2009\",     \"est_mean_comp_groupDiff_sameFacet_femaleSubgroup_2015\",     \"est_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\",     \"se_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\",     \"es_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\"   ),   columns_table_sig_bold = list(     NULL,     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2009\",     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2015\",     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\",     NULL,     \"sig_mean_comp_groupDiff_sameFacet_femaleSubgroup_2022\"   ),   columns_round = c(rep(0, 4), 1, 2),   y_axis = \"y_axis\",   plot_settings = plotsettings_tablebarplot(     bar_pattern_spacing = 0.0274,     columns_alignment = c(0, 0.5, 0.5, 0.5, 0.5, 0.5),     columns_width = column_widths_stand$p1,     default_list = abb_8.4   ) ) p_2 <- plot_tablebarplot(   dat = gender_prepped_2,   bar_est = \"est_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2009_2015\",   bar_sig = \"sig_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2009_2015\",   column_spanners = list(     \"**2015-2009**\" = c(2, 4)   ),   column_spanners_2 = list(     \"**Veränderung der Differenz<br>**\" = c(2, 4)   ),   columns_table_se = list(NULL, NULL, \"se_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2009_2015\"),   headers = list(     \" \",     list(       \"paste(Delta * italic(M[2015]), '-')\",       \"Delta * italic(M[2009])\"     ),     \"(italic(SE))\",     \" \"   ),   columns_table = c(     \"empty\",     \"est_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2009_2015\",     \"se_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2009_2015\"   ),   columns_table_sig_bold = list(     NULL, \"sig_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2009_2015\", NULL   ),   columns_round = c(0, 0, 1),   y_axis = \"y_axis\",   plot_settings =     plotsettings_tablebarplot(       bar_pattern_spacing = 0.0334,       columns_alignment = c(2, 2, 2),       headers_alignment = c(0, 0, 0.5, 0),       headers_nudge_x = c(0, 10, -2, 0),       columns_width = column_widths_stand$p2,       default_list = abb_8.4     ) ) p_3 <- plot_tablebarplot(   dat = gender_prepped_2,   bar_est = \"est_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2015_2022\",   bar_sig = \"sig_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2015_2022\",   column_spanners = list(     \"**2022-2015**\" = c(1, 3)   ),   column_spanners_2 = list(     \"**Veränderung der Differenz<br>**\" = c(1, 3)   ),   columns_table_se = list(NULL, \"se_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2015_2022\"),   headers = list(     list(       \"paste(Delta * italic(M[2022]), '-')\",       \"Delta * italic(M[2015])\"     ),     \"(italic(SE))\",     \" \"   ),   columns_table = c(     \"est_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2015_2022\",     \"se_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2015_2022\"   ),   columns_table_sig_bold = list(     \"sig_mean_comp_trend_groupDiff_sameFacet_femaleSubgroup_2015_2022\", NULL   ),   columns_round = c(0, 1),   y_axis = \"y_axis\",   plot_settings = plotsettings_tablebarplot(     bar_pattern_spacing = 0.0392,     axis_x_lims = c(-20, 45),     columns_alignment = c(2, 2),     headers_alignment = c(0, 0.5, 0),     headers_nudge_x = c(10, -3, 0),     columns_width = column_widths_stand$p3,     default_list = abb_8.4   ) ) tableplot_8.4 <- combine_plots(list(p_1, p_2, p_3)) save_plot(tableplot_8.4,   filename = \"C:/Users/hafiznij/Downloads/abb_8.4.pdf\",   width = 160, height = 100 ) tableplot_8.4"},{"path":"https://nickhaf.github.io/eatPlot/articles/tableplots.html","id":"stacked-barplot-abbildung-9-1","dir":"Articles","previous_headings":"","what":"Stacked Barplot (Abbildung 9.1)","title":"Tableplots","text":"data preperation stacked barplots bit complicated. likely, run least analyses eatRep, one percentages, one means. prepare analyses seperately merge : Now extra data prep data looks whished: next part necessary example data contain enough subgroups dependent variable actual plot, copy paste onto data. can ignore next chunk. However, multiple eatRep-datasets different dependent variables, might need rbind() together put together one plot. copied data. Now can plot stacked bars: Now can prepare second part plot, showing means. use prepped means separate analysis. need prepare data example plot. can ignore next chunk. Now can merge mean data data used stacked bars. ensures every row receives correct values. Now data correct format, can plot means:","code":"dat_prepped <- prep_tablebarplot(anteile,   subgroup_var = \"Kgender\",   parameter = NULL,   parameter_to_colname = FALSE ) ## This is important, because our parameter column contains the levels of the dependent Variable. They need to stay in the long format for this one!  dat_prepped_means <- prep_tablebarplot(means,   subgroup_var = \"Kgender\",   parameter = c(\"mean\", \"sd\"),   parameter_to_colname = TRUE ) ## Here we don't need the long format for the parameters, so we pivot them wider and create parameter specific columns for each comparison! ## Recode subgroup columns dat_prepped$subgroup_var <- gsub(\"weiblich\", \"Mädchen\", dat_prepped$subgroup_var) dat_prepped$subgroup_var <- gsub(\"maennlich\", \"Jungen\", dat_prepped$subgroup_var) dat_prepped$subgroup_var <- gsub(\"total\", \"Gesamt\", dat_prepped$subgroup_var)  ## Don't Plot Ncases dat_prepped <- subset(dat_prepped, parameter != \"Ncases\")  ## Make parameter an ordered factor to steer the order of the stacked bars dat_prepped$parameter <- factor(dat_prepped$parameter, levels = c(\"niedrig\", \"mittel\", \"hoch\"), ordered = TRUE)  ## Sort data dat_prepped <- dat_prepped[order(dat_prepped$subgroup_var), ]  ## Build bar labels dat_prepped$label <- paste0(round(dat_prepped$est_NA_comp_none * 100, 0), \"%\")  ## Only plot results for the whole of germany dat_prepped <- dat_prepped[dat_prepped$state_var == \"total\", ]   ## Multiply with 100 to show the perercentages dat_prepped$est_NA_comp_none <- dat_prepped$est_NA_comp_none * 100 ## Add additonal subgroups to the data: dat_prepped_other_groups <- subset(dat_prepped[-1, ], subgroup_var != \"Gesamt\") dat_prepped_other_groups$subgroup_var <- gsub(\"Jungen\", \"maximal 100 Bücher\", dat_prepped_other_groups$subgroup_var) dat_prepped_other_groups$subgroup_var <- gsub(\"Mädchen\", \"mehr als 100 Bücher\", dat_prepped_other_groups$subgroup_var) dat_prepped_other_groups2 <- subset(dat_prepped[-1, ], subgroup_var != \"Gesamt\") dat_prepped_other_groups2$subgroup_var <- gsub(\"Jungen\", \"mit Zuwanderungshintergrund\", dat_prepped_other_groups2$subgroup_var) dat_prepped_other_groups2$subgroup_var <- gsub(\"Mädchen\", \"ohne Zuwanderungshintergrund\", dat_prepped_other_groups2$subgroup_var)  ## Because the subgroups are also written into the colnames, I manually rename the columns. ## Not needed if you actually have different groups in your data.  colnames(dat_prepped_other_groups) <- gsub(\"maennlich\", \"max100books\", colnames(dat_prepped_other_groups)) colnames(dat_prepped_other_groups) <- gsub(\"weiblich\", \"more100books\", colnames(dat_prepped_other_groups))  colnames(dat_prepped_other_groups2) <- gsub(\"maennlich\", \"ZWH\", colnames(dat_prepped_other_groups2)) colnames(dat_prepped_other_groups2) <- gsub(\"weiblich\", \"noZWH\", colnames(dat_prepped_other_groups2))  dat_prepped_3 <- dplyr::bind_rows(dat_prepped, dat_prepped_other_groups, dat_prepped_other_groups2)    ## Sort data. Make subgroup_var into an ordered Factor for that dat_prepped_3$subgroup_var <- factor(dat_prepped_3$subgroup_var, levels = c(\"Gesamt\", \"Mädchen\", \"Jungen\", \"mehr als 100 Bücher\", \"maximal 100 Bücher\", \"mit Zuwanderungshintergrund\", \"ohne Zuwanderungshintergrund\"), ordered = TRUE) dat_prepped_3 <- dat_prepped_3[order(dat_prepped_3$subgroup_var), ]  ## Fill in the subheader into that empty row. Set to NA for all but the first! ## Add an empty row on top na_row <- as.data.frame(matrix(NA, nrow = 1, ncol = ncol(dat_prepped_3))) colnames(na_row) <- colnames(dat_prepped_3) dat_prepped_3 <- rbind(na_row, dat_prepped_3)  dat_prepped_3$var <- NA dat_prepped_3[1, \"var\"] <- \"**Allgemeine Schulzufriedenheit**\"   ## Also add values for the y-axis. In tis case it is important that all values, that should be plotted into one row also receive the same values: dat_prepped_3$y_axis <- c(8, rep(1, 3), rep(2, 3), rep(3, 3), rep(4, 3), rep(5, 3), rep(6, 3), rep(7, 3))   ## Now I can copy this data to simulate other dependent variables dat_var2 <- dat_prepped_3 dat_var2[1, \"var\"] <- \"**Soziale Eingebundenheit**\" dat_var2$depVar <- \"sozEingeb\" dat_var2$y_axis <- c(16, rep(9, 3), rep(10, 3), rep(11, 3), rep(12, 3), rep(13, 3), rep(14, 3), rep(15, 3))   dat_var3 <- dat_var2 dat_var3[1, \"var\"] <- \"**Emotionale Probleme**\" dat_var3$depVar <- \"emoProb\" dat_var3$y_axis <- c(24, rep(17, 3), rep(18, 3), rep(19, 3), rep(20, 3), rep(21, 3), rep(22, 3), rep(23, 3))  dat_var4 <- dat_var3 dat_var4[1, \"var\"] <- \"**Hyperaktivität**\" dat_var4$depVar <- \"hyperAkt\" dat_var4$y_axis <- c(32, rep(25, 3), rep(26, 3), rep(27, 3), rep(28, 3), rep(29, 3), rep(30, 3), rep(31, 3))  dat <- rbind(dat_prepped_3, dat_var2, dat_var3, dat_var4) ## Nudging all the rows into the correct position is a bit more complicated here, so I define a vector for it that can be used multiple times: nudge_rows <- rep(c(0, rep(0, 3), rep(-0.125, 3), rep(0.125, 3), rep(-0.125, 3), rep(0.125, 3), rep(-0.125, 3), rep(0.125, 3)), 4)  p_stacked <- plot_tablebarplot(dat,   bar_est = \"est_NA_comp_none\",   bar_label = \"label\",   bar_fill = \"parameter\",   columns_table = c(\"var\", \"subgroup_var\"),   headers = c(\"**Merkmal**\", \"\", \"\"),   y_axis = \"y_axis\",   plot_settings = plotsettings_tablebarplot(     bar_fill_colour = c(\"niedrig\" = \"#20D479\", \"mittel\" = \"#8DEBBC\", \"hoch\" = \"#EBFDF3\"),     bar_label_colour = c(\"niedrig\" = \"white\", \"mittel\" = \"black\", \"hoch\" = \"black\"),     columns_alignment = c(0, 0),     columns_width = c(0.025, 0.3, 0.675),     bar_label_nudge_x = rep(0.5, nrow(dat)),     bar_label_nudge_y = nudge_rows,     bar_nudge_y = nudge_rows,     columns_nudge_y = c(list(0), list(nudge_rows)),     default_list = abb_9.1   ) ) ## It is important that the resulting table has the same number of rows as the stacked one.  ## First, filter and recode the data as needed dat_prepped_means <- subset(dat_prepped_means, state_var == \"total\") dat_prepped_means$subgroup_var <- gsub(\"weiblich\", \"Mädchen\", dat_prepped_means$subgroup_var) dat_prepped_means$subgroup_var <- gsub(\"maennlich\", \"Jungen\", dat_prepped_means$subgroup_var) dat_prepped_means$subgroup_var <- gsub(\"total\", \"Gesamt\", dat_prepped_means$subgroup_var) dat_prepped_means$subgroup_var <- factor(dat_prepped_means$subgroup_var, levels = c(\"Gesamt\", \"Mädchen\", \"Jungen\"), ordered = TRUE) ## Again, copy the data to simulate other subgroups, that were not actually in the data! dat_table_2 <- subset(dat_prepped_means, subgroup_var != \"Gesamt\") dat_table_2$subgroup_var <- gsub(\"Jungen\", \"mit Zuwanderungshintergrund\", dat_table_2$subgroup_var) dat_table_2$subgroup_var <- gsub(\"Mädchen\", \"ohne Zuwanderungshintergrund\", dat_table_2$subgroup_var)  dat_table_3 <- subset(dat_prepped_means, subgroup_var != \"Gesamt\") dat_table_3$subgroup_var <- gsub(\"Jungen\", \"maximal 100 Bücher\", dat_table_3$subgroup_var) dat_table_3$subgroup_var <- gsub(\"Mädchen\", \"mehr als 100 Bücher\", dat_table_3$subgroup_var)  ## Because the subgroups are also written into the colnames, I manually rename the columns. ## Not needed if you actually have different groups in your data. dat_table_2$est_mean_comp_groupDiff_sameFacet_more100booksSubgroup_NA ## NULL colnames(dat_table_2) <- gsub(\"maennlich\", \"max100books\", colnames(dat_table_2)) colnames(dat_table_2) <- gsub(\"weiblich\", \"more100books\", colnames(dat_table_2))  ## Manually give them other values, not needed if you have actually different groups dat_table_2$est_mean_comp_groupDiff_sameFacet_more100booksSubgroup_NA <- ifelse(!is.na(dat_table_2$est_mean_comp_groupDiff_sameFacet_more100booksSubgroup_NA), -0.201, NA)  dat_table_2$se_mean_comp_groupDiff_sameFacet_more100booksSubgroup_NA <- ifelse(!is.na(dat_table_2$se_mean_comp_groupDiff_sameFacet_more100booksSubgroup_NA), 0.02, NA)  dat_table_2$es_mean_comp_groupDiff_sameFacet_more100booksSubgroup_NA <- ifelse(!is.na(dat_table_2$es_mean_comp_groupDiff_sameFacet_more100booksSubgroup_NA), -0.25, NA)  dat_table_2$est_mean_comp_groupDiff_sameFacet_max100booksSubgroup_NA <- ifelse(!is.na(dat_table_2$est_mean_comp_groupDiff_sameFacet_max100booksSubgroup_NA), -0.201, NA)  dat_table_2$se_mean_comp_groupDiff_sameFacet_max100booksSubgroup_NA <- ifelse(!is.na(dat_table_2$se_mean_comp_groupDiff_sameFacet_max100booksSubgroup_NA), 0.02, NA)  dat_table_2$es_mean_comp_groupDiff_sameFacet_max100booksSubgroup_NA <- ifelse(!is.na(dat_table_2$es_mean_comp_groupDiff_sameFacet_max100booksSubgroup_NA), -0.25, NA)   ## Same for the other two subgroups colnames(dat_table_3) <- gsub(\"maennlich\", \"ZWH\", colnames(dat_table_3)) colnames(dat_table_3) <- gsub(\"weiblich\", \"noZWH\", colnames(dat_table_3))  dat_table_3$est_mean_comp_groupDiff_sameFacet_noZWHSubgroup_NA <- ifelse(!is.na(dat_table_3$est_mean_comp_groupDiff_sameFacet_noZWHSubgroup_NA), -0.523, NA)  dat_table_3$se_mean_comp_groupDiff_sameFacet_noZWHSubgroup_NA <- ifelse(!is.na(dat_table_3$se_mean_comp_groupDiff_sameFacet_noZWHSubgroup_NA), 0.03, NA)  dat_table_3$es_mean_comp_groupDiff_sameFacet_noZWHSubgroup_NA <- ifelse(!is.na(dat_table_3$es_mean_comp_groupDiff_sameFacet_noZWHSubgroup_NA), -0.256, NA)  dat_table_3$est_mean_comp_groupDiff_sameFacet_ZWHSubgroup_NA <- ifelse(!is.na(dat_table_3$est_mean_comp_groupDiff_sameFacet_ZWHSubgroup_NA), -0.523, NA)  dat_table_3$se_mean_comp_groupDiff_sameFacet_ZWHSubgroup_NA <- ifelse(!is.na(dat_table_3$se_mean_comp_groupDiff_sameFacet_ZWHSubgroup_NA), 0.03, NA)  dat_table_3$es_mean_comp_groupDiff_sameFacet_ZWHSubgroup_NA <- ifelse(!is.na(dat_table_3$es_mean_comp_groupDiff_sameFacet_ZWHSubgroup_NA), -0.256, NA)   dat2 <- dplyr::bind_rows(dat_prepped_means, dat_table_2, dat_table_3)  ## Recode the dependent variable to have the same name as in the other data set. Needed for merging. dat2$depVar <- \"Sfskde_kurz_imp_kat\"  ## I copy the data now to simulate the other dependent variables. dat2_var2 <- dat2 dat2_var2$depVar <- \"sozEingeb\"  dat2_var3 <- dat2_var2 dat2_var3$depVar <- \"emoProb\"  dat2_var4 <- dat2 dat2_var4$depVar <- \"hyperAkt\"   dat_means <- rbind(dat2, dat2_var2, dat2_var3, dat2_var4) ## The significances and estimates I want to plot are distributed over multiple columns, because they were group-Diffs. ## I therefore have to pull them together into the same column : dat_means$est_groupDiff <- merge_cols(dat_means, \"est\", \"groupDiff\") dat_means$sig_groupDiff <- merge_cols(dat_means, \"sig\", \"groupDiff\") dat_means$es_groupDiff <- merge_cols(dat_means, \"es\", \"groupDiff\") dat_means$se_groupDiff <- merge_cols(dat_means, \"se\", \"groupDiff\")   ## Now we can merge the data with the data that we used in the stacked barplot. ## By doing this, we can guarantee easily that the position of the values matches the correct rows in the stacked barplot. ## Using left_join to preserve the order! BaseR merge doesn't deal with the NAs in the best way here. dat_table <- dat |>   dplyr::left_join(dat_means[, c(\"depVar\", \"subgroup_var\", \"state_var\", \"est_mean_comp_none_NA\", \"est_sd_comp_none_NA\", \"est_groupDiff\", \"se_groupDiff\", \"es_groupDiff\", \"sig_groupDiff\")]) ## Joining with `by = join_by(depVar, subgroup_var, state_var)` ## Now we can reduce the data set, because we can be sure every row receives a value, due to the y-axis column! dat_table_u <- unique(dat_table[, c(\"depVar\", \"subgroup_var\", \"state_var\", \"est_mean_comp_none_NA\", \"est_sd_comp_none_NA\", \"est_groupDiff\", \"se_groupDiff\", \"es_groupDiff\", \"sig_groupDiff\", \"y_axis\")])  library(dplyr) ##  ## Attaching package: 'dplyr' ##  ## The following objects are masked from 'package:stats': ##  ##     filter, lag ##  ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union dat_table_u <- dat_table_u %>%   dplyr::group_by(depVar) %>%   dplyr::mutate(dplyr::across(dplyr::contains(\"groupDiff\"), ~ ifelse(duplicated(.), NA, .))) %>%   dplyr::ungroup() nudge_rows_short <- rep(c(0, 0, -0.125, 0.125, -0.125, 0.125, -0.125, 0.125), 4)  p_table <- plot_tablebarplot(   dat_table_u,   columns_table = c(\"est_mean_comp_none_NA\", \"est_sd_comp_none_NA\", \"est_groupDiff\", \"se_groupDiff\", \"es_groupDiff\"),   headers = c(\"bolditalic(M)\", \"bolditalic(SD)\", \"Delta * bolditalic(M)\", \"bolditalic((SE))\", \"bolditalic(d)\"),   columns_round = c(2, 2, 2, 2, 2),   columns_table_se = list(NULL, NULL, NULL, \"se_groupDiff\", NULL),   y_axis = \"y_axis\",   columns_table_sig_bold = list(NULL, NULL, \"sig_groupDiff\", NULL, \"sig_groupDiff\"),   plot_settings = plotsettings_tablebarplot(     columns_alignment = c(0.5, 0.5, 0.5, 0.5, 0.5),     columns_width = rep(0.2, 5),     columns_nudge_y = c(list(nudge_rows_short), list(nudge_rows_short), list(-0.5), list(-0.5), list(-0.5)),     headers_ggtext = FALSE,     default_list = abb_9.1   ) )  p_stacked_combined <- combine_plots(list(p_stacked, p_table), plot_widths = c(0.75, 0.25)) ## Warning: Careful! You have provided plot_widths. Please be beware that the ## x-axes might be distorted, if your plot_widths don't account for different ## x-axis ranges. save_plot(p_stacked_combined, \"C:/Users/hafiznij/Downloads/stacked.pdf\", height = 140, width = 160) p_stacked_combined ## Warning: Removed 56 rows containing missing values or values outside the scale range ## (`geom_tile()`). ## Warning: Removed 4 rows containing missing values or values outside the scale range ## (`geom_rect()`). ## Warning: Removed 4 rows containing missing values or values outside the scale range ## (`geom_rich_text()`). ## Warning: Removed 56 rows containing missing values or values outside the scale range ## (`geom_rich_text()`). ## Removed 56 rows containing missing values or values outside the scale range ## (`geom_rich_text()`)."},{"path":"https://nickhaf.github.io/eatPlot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicklas Hafiz. Author, maintainer. Philipp Franikowski. Contributor.","code":""},{"path":"https://nickhaf.github.io/eatPlot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hafiz N (2025). eatPlot: Plot eatRep output. R package version 1.1.1.9001, https://nickhaf.github.io/eatPlot/.","code":"@Manual{,   title = {eatPlot: Plot eatRep output},   author = {Nicklas Hafiz},   year = {2025},   note = {R package version 1.1.1.9001},   url = {https://nickhaf.github.io/eatPlot/}, }"},{"path":"https://nickhaf.github.io/eatPlot/index.html","id":"eatplot-","dir":"","previous_headings":"","what":"Plot eatRep output","title":"Plot eatRep output","text":"goal eatPlot easily plot results stemming eatRep package.","code":""},{"path":"https://nickhaf.github.io/eatPlot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Plot eatRep output","text":"can install development version eatPlot GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"nickhaf/eatPlot\")"},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_6.5.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 default plot settings. — abb_6.5","title":"BT24 default plot settings. — abb_6.5","text":"Default plot settings Abbildung 6.5 BT22.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_6.5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 default plot settings. — abb_6.5","text":"","code":"abb_6.5"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_6.5.html","id":"abb-","dir":"Reference","previous_headings":"","what":"abb_6.5","title":"BT24 default plot settings. — abb_6.5","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_6.6.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 default plot settings. — abb_6.6","title":"BT24 default plot settings. — abb_6.6","text":"Default plot settings Abbildung 6.6 BT22.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_6.6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 default plot settings. — abb_6.6","text":"","code":"abb_6.6"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_6.6.html","id":"abb-","dir":"Reference","previous_headings":"","what":"abb_6.6","title":"BT24 default plot settings. — abb_6.6","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_8.4.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 default plot settings. — abb_8.4","title":"BT24 default plot settings. — abb_8.4","text":"Default plot settings Abbildung 8.4 BT22.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_8.4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 default plot settings. — abb_8.4","text":"","code":"abb_8.4"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_8.4.html","id":"abb-","dir":"Reference","previous_headings":"","what":"abb_8.4","title":"BT24 default plot settings. — abb_8.4","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_9.1.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 default plot settings. — abb_9.1","title":"BT24 default plot settings. — abb_9.1","text":"Default plot settings Abbildung 9.1 BT22 (stacked barplot).","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_9.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 default plot settings. — abb_9.1","text":"","code":"abb_9.1"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/abb_9.1.html","id":"abb-","dir":"Reference","previous_headings":"","what":"abb_9.1","title":"BT24 default plot settings. — abb_9.1","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/anteile.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — anteile","title":"BT24 example data. — anteile","text":"Example data stacked bar charts.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/anteile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — anteile","text":"","code":"anteile"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/anteile.html","id":"anteile","dir":"Reference","previous_headings":"","what":"anteile","title":"BT24 example data. — anteile","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_table_plot_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"BT22 default plot settings. — barplot_table_plot_pattern","title":"BT22 default plot settings. — barplot_table_plot_pattern","text":"Default plot settings Mindest Standards trend. Default plot settings Mindest Standards trend.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_table_plot_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT22 default plot settings. — barplot_table_plot_pattern","text":"","code":"barplot_table_plot_pattern  barplot_table_plot_pattern"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_table_plot_pattern.html","id":"barplot-table-plot-pattern","dir":"Reference","previous_headings":"","what":"barplot_table_plot_pattern","title":"BT22 default plot settings. — barplot_table_plot_pattern","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_table_plot_pattern.html","id":"barplot-table-plot-pattern-1","dir":"Reference","previous_headings":"","what":"barplot_table_plot_pattern","title":"BT22 default plot settings. — barplot_table_plot_pattern","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":null,"dir":"Reference","previous_headings":"","what":"Set colours as cmyk values. — cmyk","title":"Set colours as cmyk values. — cmyk","text":"Set colours cmyk values.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set colours as cmyk values. — cmyk","text":"","code":"cmyk(C, M, Y, K)"},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set colours as cmyk values. — cmyk","text":"C Numeric cyan value. M Numeric magenta value. Y Numeric yellow value. K Numeric key (black) value.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set colours as cmyk values. — cmyk","text":"RGB colour value.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set colours as cmyk values. — cmyk","text":"","code":"cmyk(0, 0, 0, 1) #> [1] \"#FDFDFD\""},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine different ggplots — combine_plots","title":"Combine different ggplots — combine_plots","text":"Combine different ggplots","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine different ggplots — combine_plots","text":"","code":"combine_plots(plot_list, plot_widths = NULL)"},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine different ggplots — combine_plots","text":"plot_list List plots combined. plot_widths Set widths plots manually. Defaults NULL, case width calculated x axis scales metric.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine different ggplots — combine_plots","text":"Patchwork plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine different ggplots — combine_plots","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"Calculate significance descriptions 'Mindeststandards'","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"","code":"construct_directional_sig(dat_bar, est_column, sig_column)"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"dat_bar Data prepared prep_lineplot(). est_column Column contains estimates. sig_column Column contains significances.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"Dataframe added column name ends _directional_sig.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct labels — construct_label","title":"Construct labels — construct_label","text":"function creates new column label, merging estimates standard errors significant estimates represented bold superscript (via brace_label_est), standard errors brackets, needed (via brace_label_se). NAs converted empty strings. Main usage plotting tables brace labels.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct labels — construct_label","text":"","code":"construct_label(   dat,   column_est = NULL,   column_se = NULL,   column_sig_bold = NULL,   column_sig_superscript = NULL,   sig_superscript_letter = NULL,   round_est = 0,   round_se = 1,   plot_settings = plotsettings_tablebarplot() )"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct labels — construct_label","text":"dat Data frame columns merged labels. column_est Character string column estimates. column_se Character string column standard errors. column_sig_bold Character string column significant estimates determine bold printing. column_sig_superscript Character string column significant estimates determine superscript. sig_superscript_letter Character string letter used superscript. round_est Rounding brace_label_est. round_se Rounding brace_label_se. plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct labels — construct_label","text":"data frame added column constructed label.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct labels — construct_label","text":"","code":"# example data frame dat <- data.frame(   names = c(\"Berlin\", \"Hamburg\", \"Hessen\", \"Niedersachsen\", \"Saarland\"),   estimate = c(400, 650, 380, 500, 600),   se = c(0.1, 0.45, 1, 0.27, 0.9),   p_estimate = c(FALSE, FALSE, TRUE, TRUE, FALSE) )"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct labels — construct_label_2","title":"Construct labels — construct_label_2","text":"function creates new column label, merging estimates standard errors significant estimates represented bold superscript (via label_est), standard errors brackets, needed (via label_se). NAs converted empty strings. Main usage plotting tables brace labels.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct labels — construct_label_2","text":"","code":"construct_label_2(   dat,   new_name = \"label\",   label_est = NULL,   label_se = NULL,   label_sig_bold = NULL,   label_sig_superscript = NULL,   label_sig_superscript_extra_column = FALSE,   round_est = 0,   round_se = 1,   plot_settings = plotsettings_tablebarplot() )"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct labels — construct_label_2","text":"dat Data frame columns merged labels. new_name Character string new column added dat. Defaults 'label'. label_est Character string column estimates. label_se Character string column standard errors. label_sig_bold Character string column significant estimates determine bold printing. label_sig_superscript Character string column significant estimates determine superscript. label_sig_superscript_extra_column Logical, set 'FALSE' superscript significant values added directly label (necessary line plots), set 'TRUE' superscript significant values written extra column ending '_sig_superscript' (necessary tables). round_est Rounding label_est. round_se Rounding label_se. plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct labels — construct_label_2","text":"data frame added column constructed label.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct labels — construct_label_2","text":"","code":"# example data frame dat <- data.frame(   names = c(\"Berlin\", \"Hamburg\", \"Hessen\", \"Niedersachsen\", \"Saarland\"),   estimate = c(400, 650, 380, 500, 600),   se = c(0.1, 0.45, 1, 0.27, 0.9),   p_estimate = c(FALSE, FALSE, TRUE, TRUE, FALSE) )"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply Values in Columns by 100 to build percentages. — construct_percent","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"Multiply Values Columns 100 build percentages.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"","code":"construct_percent(df, columns)"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"df Input data.frame. columns Character vector column names columns want multiply 100.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"input data.frame new columns multiplied 100. New columns suffix \"_percent\" name.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"","code":"df <- data.frame(col_1 = c(1, 2), col_2 = c(3, 4), col_3 = c(\"a\", \"b\")) construct_percent(df, columns = c(\"col_1\", \"col_2\")) #>   col_1 col_2 col_3 col_1_percent col_2_percent #> 1     1     3     a           100           300 #> 2     2     4     b           200           400"},{"path":"https://nickhaf.github.io/eatPlot/reference/dispar.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — dispar","title":"BT24 example data. — dispar","text":"Example data multiple competence areas.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/dispar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — dispar","text":"","code":"dispar"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/dispar.html","id":"dispar","dir":"Reference","previous_headings":"","what":"dispar","title":"BT24 example data. — dispar","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/eatPlot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eatPlot: Plot eatRep output — eatPlot-package","title":"eatPlot: Plot eatRep output — eatPlot-package","text":"Functions plotting eatModel output.","code":""},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/eatPlot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"eatPlot: Plot eatRep output — eatPlot-package","text":"Maintainer: Nicklas Hafiz hafiznij@hu-berlin.de contributors: Philipp Franikowski [contributor]","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter specified rows from plot_dat objects. — filter_plot_dat","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"Filter specified rows plot_dat objects.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"","code":"filter_plot_dat(   plot_dat,   filter_statement,   list_elements = c(\"plot_lines\", \"plot_points\", \"plot_background_lines\", \"plot_braces\") )"},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"plot_dat list data.frames prepared prep_lineplot(). filter_statement Character string containing logical expression filtering specific rows data.frames list possible. Write dat$column_name specify wanted columns. list_elements Character vector names list objects want filter . Defaults c(\"plot_lines\", \"plot_points\", \"plot_background_lines\", \"plot_braces\").","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"plot_dat list rows filtered specified.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or remove rows from prepared data. — filter_rows","title":"Extract or remove rows from prepared data. — filter_rows","text":"Extract remove rows prepared data.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or remove rows from prepared data. — filter_rows","text":"","code":"filter_rows(   plot_dat,   column_name,   subsetter,   list_elements = c(\"plot_points\", \"plot_lines\", \"plot_braces\"),   remove = FALSE,   remove_na = FALSE )"},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or remove rows from prepared data. — filter_rows","text":"plot_dat List data.frames, output prep_lineplot. column_name Column subsetter searched . subsetter Character string state want extract remove. list_elements Character vector names list objects want filter . Defaults c(\"plot_lines\", \"plot_points\", \"plot_background_lines\", \"plot_braces\"). remove Logical. TRUE, state defined state removed. Defaults FALSE. remove_na Logical. TRUE, rows NAs column_name removed.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or remove rows from prepared data. — filter_rows","text":"List data.frames.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract or remove rows from prepared data. — filter_rows","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"gsub() for lists and data.frames. — gsub_plot_dat","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"gsub() lists data.frames.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"","code":"gsub_plot_dat(   plot_dat,   search_for = \"wholeGroup\",   replace_with = \"Deutschland\" )"},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"plot_dat List data.frame, mainly usage intention plot_dat - objects prep_lineplot(). search_for Character string replaced. replace_with Character string replacement.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"Depending input data.frame list subbed character strings.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"","code":"plot_dat <- list(   dat_1 = data.frame(     col_1 = c(\"wholeGroup\", \"notwholeGroup\"),     col_2 = c(\"wholeGroup\", NA),     col_3 = c(1, 2)   ),   dat_2 = data.frame(     col_1 = c(\"wholeGroup\", \"notwholeGroup\"),     col_2 = c(\"wholeGroup\", NA),     col_3 = c(TRUE, FALSE)   ) ) gsub_plot_dat(plot_dat) #> $dat_1 #>            col_1       col_2 col_3 #> 1    Deutschland Deutschland     1 #> 2 notDeutschland        <NA>     2 #>  #> $dat_2 #>            col_1       col_2 col_3 #> 1    Deutschland Deutschland  TRUE #> 2 notDeutschland        <NA> FALSE #>"},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 default plot settings. — lineplot_4x4","title":"BT24 default plot settings. — lineplot_4x4","text":"Default plot settings lineplots BT_22 chapter 4.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 default plot settings. — lineplot_4x4","text":"","code":"lineplot_4x4"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4.html","id":"lineplot-x-","dir":"Reference","previous_headings":"","what":"lineplot_4x4","title":"BT24 default plot settings. — lineplot_4x4","text":"list two elements. n_cols Four columns smaller plots used final lineplot. axis_x_label_centralize x-axis labels nudged center 0.155 npc's. split_plot  y_axis","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_germany.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 default plot settings. — lineplot_germany","title":"BT24 default plot settings. — lineplot_germany","text":"Default plot settings lineplots whole germany BT_22 chapter 4.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_germany.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 default plot settings. — lineplot_germany","text":"","code":"lineplot_germany"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_germany.html","id":"lineplot-germany","dir":"Reference","previous_headings":"","what":"lineplot_germany","title":"BT24 default plot settings. — lineplot_germany","text":"list two elements. point_shapes Point shapes triangles significant values.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/means.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — means","title":"BT24 example data. — means","text":"Example data goes anteile data, calculates means.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — means","text":"","code":"means"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/means.html","id":"means","dir":"Reference","previous_headings":"","what":"means","title":"BT24 example data. — means","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/merge_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Coalesce together multiple columns into one. — merge_cols","title":"Coalesce together multiple columns into one. — merge_cols","text":"Columns contain unique values per row can combined one. Main usage multiple different subgroup variables plotted column plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/merge_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coalesce together multiple columns into one. — merge_cols","text":"","code":"merge_cols(dat, type, comparison, facet = \"sameFacet\")"},{"path":"https://nickhaf.github.io/eatPlot/reference/merge_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coalesce together multiple columns into one. — merge_cols","text":"dat data frame prepared prep_tablebarplot containing columns merged. type string indicating column type merged (e.g., \"est\", \"se\", \"sig\" ...) comparison string indicating comparison merged (e.g., \"groupDiff\"). facet string indicating facet merged (\"sameFacet\", \"totalFacet\").","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/merge_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coalesce together multiple columns into one. — merge_cols","text":"vector consisting merged columns.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/merge_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coalesce together multiple columns into one. — merge_cols","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a lineplot. — plot_lineplot","title":"Plot a lineplot. — plot_lineplot","text":"Plot lineplot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a lineplot. — plot_lineplot","text":"","code":"plot_lineplot(   eatPlot_dat,   facet_var = \"state_var\",   point_est = \"est_mean_comp_none\",   point_sig = \"sig_mean_comp_crossDiff_totalFacet_sameSubgroup\",   line_sig = \"sig_mean_comp_trend_sameFacet_sameSubgroup\",   line_se = \"se_mean_comp_none\",   brace_label_est = \"est_mean_comp_trend_sameFacet_sameSubgroup\",   brace_label_se = \"se_mean_comp_trend_sameFacet_sameSubgroup\",   brace_label_sig_superscript = \"sig_mean_comp_trend_crossDiff_totalFacet_sameSubgroup\",   brace_label_sig_bold = \"sig_mean_comp_trend_sameFacet_sameSubgroup\",   years_lines = list(),   years_braces = list(),   background_facet = NULL,   background_subgroup = NULL,   box_facet = NULL,   title_superscripts = NULL,   plot_settings = plotsettings_lineplot() )"},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a lineplot. — plot_lineplot","text":"eatPlot_dat Input list prepared prep_lineplot(). facet_var Character string column name eatPlot_dat containing variable split multiple facets. Defaults NULL. point_est Character string column name eatPlot_dat containing y-values plotted points. Defaults NULL. point_sig Character string column name containing significance values point_values. Defaults NULL. line_sig Character string column name containing significance values line_values. Defaults \"sig_Trend_noComp\", show significance difference two time points. line_se Character vector column name containing standard errors plotted lines. Defaults NULL, case deducted line values. brace_label_est Character string column name containing brace labels. brace_label_se Character string column name containing standard errors label_est. put bracktes behind label_est. brace_label_sig_superscript Character string column name containing significance values label_est. Significant values marked raised ''. Normally, comparison trend vs. trend whole Germany, can found trendDiff_cross parameter. Defaults NULL, parameter always provided. brace_label_sig_bold Character string column name containing significance values label_est. Significant values marked bold. Defaults \"sig_Trend_noComp\". years_lines List numeric vectors containing start end year, trend line plotted. Per default, lines drawn every year next consecutive year. years_braces List numeric vectors containing start end year, brace plotted. Per default, braces drawn last year every year included data. background_facet Character string facet_var column assigned total group. plotted extra facet, background line. Defaults \"Deutschland\". background_subgroup Character string subgroup_var column assigned total group. plotted extra facet, background line. Defaults NULL, kept want plot one group (without total group). box_facet Character vector, containing strings seperate_plot_var-column, get box drawn around . title_superscripts Named list superscripts plot_titles. name list element equal title, value list element superscript. Defaults NULL. plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a lineplot. — plot_lineplot","text":"ggplot2 object.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a lineplot. — plot_lineplot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a table and/or a barchart. — plot_tablebarplot","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"Plot table /barchart.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"","code":"plot_tablebarplot(   dat,   y_axis = NULL,   bar_est = NULL,   bar_label = NULL,   bar_sig = NULL,   bar_label_sig = NULL,   bar_fill = NULL,   columns_table = NULL,   columns_table_sig_bold = NULL,   columns_table_sig_superscript = NULL,   columns_table_se = NULL,   headers = NULL,   column_spanners = NULL,   column_spanners_2 = NULL,   columns_round = 0,   plot_settings = plotsettings_tablebarplot() )"},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"dat Data prepared prep_tablebarplot(). y_axis Character string columnname used y-axis. contain unique values. bar_est Character string column contains values bar chart. NULL, bar chart plotted. bar_label Character string column used bar labels top bars. NULL, labels printed. Defaults NULL. bar_sig Character string column used marking bars significant. bar_label_sig Character string column used marking bar labels significant. bar_fill Character string column groups bar filling colours different groups. columns_table List character strings columns plotted table columns plot. columns_table_sig_bold List character strings columns contain significances plotting significant values bold. columns_table_sig_superscript List character strings columns contain significances plotting significant values raised . columns_table_se List character strings columns contain standard errors, plotted brackets rounded 1. headers Character vector containing headers ploted table columns, including bar table. column_spanners Named list. name element column header. list element numeric vector indicating columns column spanner span. column_spanners_2 Named list. second dimension column spanners. name element column header. list element numeric vector indicating columns column spanner span. columns_round Numeric vector rounding column values. Insert NULL 0 rounding/character columns. plot_settings Named list constructed plotsettings_tablebarplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_tablebarplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"ggplot2 object.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parameters for the lineplots. — plotsettings_lineplot","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"Set parameters lineplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"","code":"plotsettings_lineplot(   axis_x_background_colour = NULL,   axis_x_background_width_x = NULL,   axis_x_background_width_y = NULL,   axis_x_label_centralize = NULL,   axis_x_label_nudge_y = NULL,   axis_x_label_size = NULL,   axis_y = NULL,   axis_y_tick_distance = NULL,   axis_y_lims = NULL,   background_facet_remove = NULL,   background_subgroup_remove = NULL,   background_lines = NULL,   background_line_colour = NULL,   box_facet_linewidth = NULL,   brace_label_gap_y = NULL,   brace_label_nudge_x = NULL,   brace_label_size = NULL,   brace_label_nudge_y = NULL,   brace_line_width = NULL,   brace_span_y = NULL,   equal_trend_line_length = NULL,   line_type = NULL,   line_width = NULL,   margin_below_y_axis = NULL,   margin_above_y_axis = NULL,   margin_bottom = NULL,   margin_left = NULL,   margin_right = NULL,   margin_top = NULL,   n_cols = NULL,   point_label_nudge = NULL,   point_shapes = NULL,   point_label_size = NULL,   point_label_nudge_direction = NULL,   point_label_nudge_x = NULL,   point_label_nudge_y = NULL,   point_size = NULL,   split_plot = NULL,   split_plot_gap_width = NULL,   subgroup_colours = NULL,   default_list = NULL )"},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"axis_x_background_colour Colour value x-axis background. axis_x_background_width_x, axis_x_background_width_y Numeric. background space increased x- y-direction, parameter increased. axis_x_label_centralize Numeric. x-axis labels nudged center amount, plot split lineplot. axis_x_label_nudge_y Numeric shifting x-axis labels vertically. Increase lower x-axis labels. axis_x_label_size Numeric font size x-axis labels. axis_y Logical, indicating whether y-axis plotted left row . axis_y_tick_distance Numeric, distance lie tick marks. first tick start lower end axis_y_lims calculated automatically. following ticks added distances defined axis_y_tick_distance. Defaults 20. axis_y_lims Numeric y-axis limits. Defaults NULL, case limits set automatically. background_facet_remove Logical, indicating whether background_facet removed. , plotted extra facet additionally background line. Defaults TRUE. background_subgroup_remove Logical, indicating whether background_subgroup removed. , plotted extra facet additionally background line. Defaults TRUE. background_lines Logical, indicating whether whole group trend plotted background. Defaults TRUE. background_line_colour Colour background line. box_facet_linewidth Numeric linewidth box around chosen seperate_plot-vars (e.g., states). brace_label_gap_y Numeric size vertical gap brace labels. brace_label_nudge_x Numeric. brace labels shifted along x-axis amount. Increase shift labels right. brace_label_size Numeric fontsize bracelabels. brace_label_nudge_y Numeric. brace labels shifted along y-axis amount. Increase let labels start . brace_line_width Numeric thickness brace. brace_span_y Numeric width brace y-axis. equal_trend_line_length Logical. true, trend lines length, even actual distance year differently. E.g., distance years trends 2010 - 2011 2011 - 2020 equal, even though first trend takes 1 year, second one 9 years. Please use care, distort x-axis results misleading line lengths. Defaults FALSE. line_type Named vector containing linetypes plots. names must either \"TRUE\" \"FALSE\", linetpyes represent significances. See ggplot2::scale_linetype. line_width Numeric thicknes plotted lines. margin_below_y_axis, margin_above_y_axis Numeric scale area y-axis braces/x-axis-header. margin_bottom, margin_left, margin_right, margin_top Numeric area around plot. See ggplot2::theme(). n_cols Numeric, indicating many columns smaller plots final lineplot . point_label_nudge Logical. TRUE, point labels nudged automatically ggrepel::geom_text_repel try avoid overlapping lines /points. Might interfere point-label settings, use risk. Alternatively, try use point_label_nudge_direction get controll point labels. point_shapes Named numeric vector shape points. vectornames must refer levels point_sig column. See ggplot2::scale_shape. point_label_size Numeric fontsize pointlabels. point_label_nudge_direction Named list contents either \"+\" \"-\". names factorlevels grouping_var. \"+\" point lables printed point, \"-\" . NULL provided, labels printed points lowest group, points others. point_label_nudge_x, point_label_nudge_y Numeric amount pointlabel nudged x- y-direction. point_size Numeric size plotted points. split_plot Logical, indicating whether different trends split . split_plot_gap_width Numeric width gap split plot npc. subgroup_colours Named vector colours different grouping_var groups. names vector equivalent factorlevels grouping_var. default_list Named list predefined settings. Defaults list settings set 0.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"named list settings lineplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"","code":"plotsettings_lineplot(n_cols = 2, axis_x_label_centralize = 0.1) #> $axis_x_background_colour #> [1] \"lightgrey\" #>  #> $axis_x_background_width_x #> [1] 0 #>  #> $axis_x_background_width_y #> [1] 0.04 #>  #> $axis_x_label_centralize #> [1] 0.1 #>  #> $axis_x_label_nudge_y #> [1] 0 #>  #> $axis_x_label_size #> [1] 2 #>  #> $axis_y #> [1] FALSE #>  #> $axis_y_tick_distance #> [1] 20 #>  #> $axis_y_lims #> NULL #>  #> $background_facet_remove #> [1] TRUE #>  #> $background_subgroup_remove #> [1] TRUE #>  #> $background_lines #> [1] TRUE #>  #> $background_line_colour #> [1] \"black\" #>  #> $brace_label_gap_y #> [1] 0.08 #>  #> $brace_label_nudge_x #> [1] 0 #>  #> $brace_label_nudge_y #> [1] 0.05 #>  #> $brace_label_size #> [1] 2 #>  #> $brace_line_width #> [1] 0.5 #>  #> $brace_span_y #> [1] 0.1 #>  #> $equal_trend_line_length #> [1] FALSE #>  #> $subgroup_colours #> NULL #>  #> $line_type #> NULL #>  #> $line_width #> [1] 1 #>  #> $margin_below_y_axis #> [1] 0.1 #>  #> $margin_above_y_axis #> [1] 0.1 #>  #> $margin_bottom #> [1] 0 #>  #> $margin_left #> [1] 0 #>  #> $margin_right #> [1] 0 #>  #> $margin_top #> [1] 0 #>  #> $n_cols #> [1] 2 #>  #> $point_label_nudge #> [1] FALSE #>  #> $point_label_nudge_direction #> NULL #>  #> $point_label_nudge_x #> [1] 0 #>  #> $point_label_nudge_y #> [1] 0 #>  #> $point_label_size #> [1] 2 #>  #> $point_shapes #> NULL #>  #> $point_size #> [1] 1 #>  #> $box_facet_linewidth #> [1] 0.5 #>  #> $split_plot #> [1] FALSE #>  #> $split_plot_gap_width #> [1] 0 #>"},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parameters for the barplots. — plotsettings_tablebarplot","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"Set parameters barplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"","code":"plotsettings_tablebarplot(   axis_x = NULL,   axis_x_label_size = NULL,   axis_x_lims = NULL,   background_stripes_border = NULL,   background_stripes_colour = NULL,   bar_background_lines = NULL,   bar_background_lines_linetype = NULL,   bar_background_lines_colour = NULL,   bar_background_0line_linetype = NULL,   bar_background_0line_colour = NULL,   bar_background_lines_spanners = NULL,   bar_fill_colour = NULL,   bar_frame_linetype = NULL,   bar_label_colour = NULL,   bar_label_nudge_x = NULL,   bar_label_nudge_y = NULL,   bar_label_size = NULL,   bar_line_width = NULL,   bar_nudge_y = NULL,   bar_pattern_fill_colour = NULL,   bar_pattern_spacing = NULL,   bar_pattern_type = NULL,   bar_pattern_width = NULL,   bar_type = NULL,   bar_width = NULL,   column_spanners_nudge_y = NULL,   column_spanners_row_height = NULL,   column_spanners_2_nudge_y = NULL,   column_spanners_2_row_height = NULL,   columns_alignment = NULL,   columns_nudge_x = NULL,   columns_nudge_y = NULL,   columns_table_sig_superscript_letter = NULL,   columns_table_sig_superscript_letter_nudge_x = NULL,   columns_width = NULL,   headers_alignment = NULL,   headers_background_colour = NULL,   headers_font_size = NULL,   headers_ggtext = NULL,   headers_nudge_x = NULL,   headers_nudge_y = NULL,   headers_row_height = NULL,   font_size = NULL,   space_right = NULL,   default_list = NULL )"},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"axis_x Logical indicating whether x-axis drawn. Defaults TRUE. axis_x_label_size Numeric size x axis labels. Defaults 5. axis_x_lims Numeric vector length 2 x-axis limits. set automatically, NULL (default). background_stripes_border Character string either c(\"Inf\", \"background_line_both\", \"background_line_left\", \"background_line_right\", \"background_line_table\"). background stripes either drawn whole plot (\"Inf\"), outer left background_line outer right background_line (\"background_line_both\"), outer left background line right plot (\"background_line_left\"), outer right background line left plot (\"background_line_right), table-part plot (background_line_table\"). background_stripes_colour Character vector containing background colour row. Defaults NULL. bar_background_lines Character string either c(\"borders\", \"scale_breaks\", \"none\"), indicating whether barplot receive dotted lines borders, every scale break none . bar_background_lines_linetype Character string indicating linetype background lines barplot. bar_background_lines_colour Character string indicating colour background lines barplot. bar_background_0line_linetype Character string indicating linetype background line barplot zero. bar_background_0line_colour Character string indicating colour background line barplot zero. bar_background_lines_spanners List containing numeric vectors two elements indicating rows background_lines barplot span. vector contains start end row background line. Defaults NULL, case background_lines drawn top bottom. bar_fill_colour Colour bar filling. Can either one colour bars, (named) vector names groups specified bar_fill. names provided vector, order factor levels bar_fill used determining colour assignment. bar_frame_linetype Named vector bar frame linetypes. Names found column defined bar_sig-argument ofplot_tablebarplot(). Defaults solid. bar_label_colour Colour bar labels. Can either single colour, named vector contains colour group defined bar_fill. Defaults \"black\". bar_label_nudge_x Numeric nudging bar labels x direction. bar_label_nudge_y Numeric nudging bar labels y direction. bar_label_size Numeric font size bar labels. bar_line_width Numeric line-size around bar. bar_nudge_y Numeric vector nudging bar y direction. Either length data, nudge bar sepearatly, length 1 nudge bars . Defaults 0. bar_pattern_fill_colour Named vector filling colours bar pattern. Names vector must found column specified bar_pattern_fill. Defaults white. bar_pattern_spacing Numeric gap patterns. bar_pattern_type Named vector pattern types barpattern. bar_pattern_width Numeric width pattern stripes. Note default pattern whit stripes, increase bar_pattern_width parameter increase thickness white stripes. bar_type Character string defining bar type. \"default\", pattern fill (\"pattern\"), \"frame\" \"stacked\" barplot. bar_width Numeric 0 1 specifying width bar. Defaults 0.4. column_spanners_nudge_y Numeric vector increase decrease space column spanners text line. Can either length 1, provide nudging parameter column spanner. Defaults -0.2. column_spanners_row_height Numeric row height row first level column spanners written . Defaults 1. column_spanners_2_nudge_y Numeric vector increase decrease space column spanners level 2 text line. Can either length 1, provide nudging parameter column spanner. Defaults -0.2. column_spanners_2_row_height Numeric row height row second level column spanners written . Defaults 1 columns_alignment Numeric vector one element column, determining text adjustement within column. Can 0 (left-aligned), 0.5 (central-aligned), 1 (right-aligned), 2 (right-aligned, middle column). Defaults 0.5. columns_nudge_x Numeric vector nudge column text x direction. Negativ nudge left, positive nudge right. Defaults 0. columns_nudge_y Either numeric vector list numeric vectors length columns table (including bar chart).  Nudges column texts y direction, either rows column amount (vector), row column specifically (list). Negative values nudge , positive values nudge . Defaults 0. columns_table_sig_superscript_letter Character, added significant values defined columns_table_sig_superscript. columns_table_sig_superscript_letter_nudge_x Numeric nudging superscript towards away number. columns_width Numeric vector relative column widths. equal number columns (including bar chart, bar chart plotted) plotted table. Defaults NULL, case collumns get width. headers_alignment Numeric vector one element column, determining text adjustement headers. Can 0 (left-aligned), 0.5 (central-aligned), 1 (right-aligned). Defaults NULL, case alignment columns adopted. headers_background_colour Colour background headers. headers_font_size Numeric font size used headers column_spanners. Defaults 2.5. headers_ggtext Logical indicating whether headers drawn ggtext::geom_richtext(). Defaults TRUE. set FALSE want plot greek letters headers save plot cmyk color format afterwards. set FALSE,grDevices::plotmath() used plotting special characters, refer documentation grDevices::plotmath()-function syntax. headers_nudge_x Numeric nudge column_headers x direction. Defaults 0. headers_nudge_y Numeric nudge column_headers y direction. Defaults 0. headers_row_height Numeric row height row headers written . Defaults 1. font_size Numeric vector many elements columns font sizes columns. Defaults 2.5. space_right Numeric width white space added right plotting pane. scale data. Defaults 0. default_list Named list predefined settings. Defaults list settings set 0.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"named list settings table/barplot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"","code":"## Calling the function without any arguments will result in the default settings-list. plotsettings_tablebarplot() #> $axis_x #> [1] TRUE #>  #> $axis_x_label_size #> [1] 5 #>  #> $axis_x_lims #> NULL #>  #> $background_stripes_border #> [1] \"Inf\" #>  #> $background_stripes_colour #> [1] \"white\" #>  #> $bar_background_lines #> [1] \"none\" #>  #> $bar_background_lines_linetype #> [1] \"dotted\" #>  #> $bar_background_lines_colour #> [1] \"darkgrey\" #>  #> $bar_background_0line_linetype #> [1] \"solid\" #>  #> $bar_background_0line_colour #> [1] \"black\" #>  #> $bar_background_lines_spanners #> NULL #>  #> $bar_fill_colour #> [1] \"white\" #>  #> $bar_frame_linetype #> [1] \"solid\" #>  #> $bar_label_colour #> [1] \"black\" #>  #> $bar_label_size #> [1] 2 #>  #> $bar_label_nudge_x #> [1] 0 #>  #> $bar_label_nudge_y #> [1] 0 #>  #> $bar_line_width #> [1] 0.5 #>  #> $bar_nudge_y #> [1] 0 #>  #> $bar_pattern_fill_colour #> [1] \"white\" #>  #> $bar_pattern_type #> [1] \"none\" #>  #> $bar_type #> [1] \"default\" #>  #> $bar_width #> [1] 0.4 #>  #> $column_spanners_nudge_y #> [1] -0.2 #>  #> $column_spanners_row_height #> [1] 1 #>  #> $column_spanners_2_nudge_y #> [1] -0.2 #>  #> $column_spanners_2_row_height #> [1] 1 #>  #> $columns_alignment #> [1] 0.5 #>  #> $columns_nudge_x #> [1] 0 #>  #> $columns_nudge_y #> [1] 0 #>  #> $columns_table_sig_superscript_letter #> [1] \"a\" #>  #> $columns_table_sig_superscript_letter_nudge_x #> [1] 0 #>  #> $columns_width #> NULL #>  #> $headers_alignment #> NULL #>  #> $headers_background_colour #> [1] \"white\" #>  #> $headers_font_size #> [1] 2.5 #>  #> $headers_ggtext #> [1] TRUE #>  #> $headers_nudge_x #> [1] 0 #>  #> $headers_nudge_y #> [1] 0 #>  #> $headers_row_height #> [1] 1 #>  #> $bar_pattern_spacing #> [1] 0.1 #>  #> $bar_pattern_width #> [1] 0.5 #>  #> $font_size #> [1] 2.5 #>  #> $space_right #> [1] 0 #>   ## Arguments will overvrite the respective list element: plot_settings <- plotsettings_tablebarplot(font_size = 2.5) plot_settings$font_size #> [1] 2.5  ## Colours can be defined like so: plotsettings_tablebarplot(   bar_fill_colour = c(     \"blue\",     grDevices::rgb(10, 13, 82, maxColorValue = 255)   ) ) #> $axis_x #> [1] TRUE #>  #> $axis_x_label_size #> [1] 5 #>  #> $axis_x_lims #> NULL #>  #> $background_stripes_border #> [1] \"Inf\" #>  #> $background_stripes_colour #> [1] \"white\" #>  #> $bar_background_lines #> [1] \"none\" #>  #> $bar_background_lines_linetype #> [1] \"dotted\" #>  #> $bar_background_lines_colour #> [1] \"darkgrey\" #>  #> $bar_background_0line_linetype #> [1] \"solid\" #>  #> $bar_background_0line_colour #> [1] \"black\" #>  #> $bar_background_lines_spanners #> NULL #>  #> $bar_fill_colour #> [1] \"blue\"    \"#0A0D52\" #>  #> $bar_frame_linetype #> [1] \"solid\" #>  #> $bar_label_colour #> [1] \"black\" #>  #> $bar_label_size #> [1] 2 #>  #> $bar_label_nudge_x #> [1] 0 #>  #> $bar_label_nudge_y #> [1] 0 #>  #> $bar_line_width #> [1] 0.5 #>  #> $bar_nudge_y #> [1] 0 #>  #> $bar_pattern_fill_colour #> [1] \"white\" #>  #> $bar_pattern_type #> [1] \"none\" #>  #> $bar_type #> [1] \"default\" #>  #> $bar_width #> [1] 0.4 #>  #> $column_spanners_nudge_y #> [1] -0.2 #>  #> $column_spanners_row_height #> [1] 1 #>  #> $column_spanners_2_nudge_y #> [1] -0.2 #>  #> $column_spanners_2_row_height #> [1] 1 #>  #> $columns_alignment #> [1] 0.5 #>  #> $columns_nudge_x #> [1] 0 #>  #> $columns_nudge_y #> [1] 0 #>  #> $columns_table_sig_superscript_letter #> [1] \"a\" #>  #> $columns_table_sig_superscript_letter_nudge_x #> [1] 0 #>  #> $columns_width #> NULL #>  #> $headers_alignment #> NULL #>  #> $headers_background_colour #> [1] \"white\" #>  #> $headers_font_size #> [1] 2.5 #>  #> $headers_ggtext #> [1] TRUE #>  #> $headers_nudge_x #> [1] 0 #>  #> $headers_nudge_y #> [1] 0 #>  #> $headers_row_height #> [1] 1 #>  #> $bar_pattern_spacing #> [1] 0.1 #>  #> $bar_pattern_width #> [1] 0.5 #>  #> $font_size #> [1] 2.5 #>  #> $space_right #> [1] 0 #>   ## Or, to get better control over the colour assignment ## we can also directly name the colours with the different groups ## defined in the bar_sig-argument of plot_tablebarplot() ## (as these groups are used to distinguish between different bar colours): plotsettings_tablebarplot(   bar_fill_colour = c(     fill_group_1 = \"blue\",     fill_group_2 = grDevices::rgb(       10, 13, 82,       maxColorValue = 255     )   ) ) #> $axis_x #> [1] TRUE #>  #> $axis_x_label_size #> [1] 5 #>  #> $axis_x_lims #> NULL #>  #> $background_stripes_border #> [1] \"Inf\" #>  #> $background_stripes_colour #> [1] \"white\" #>  #> $bar_background_lines #> [1] \"none\" #>  #> $bar_background_lines_linetype #> [1] \"dotted\" #>  #> $bar_background_lines_colour #> [1] \"darkgrey\" #>  #> $bar_background_0line_linetype #> [1] \"solid\" #>  #> $bar_background_0line_colour #> [1] \"black\" #>  #> $bar_background_lines_spanners #> NULL #>  #> $bar_fill_colour #> fill_group_1 fill_group_2  #>       \"blue\"    \"#0A0D52\"  #>  #> $bar_frame_linetype #> [1] \"solid\" #>  #> $bar_label_colour #> [1] \"black\" #>  #> $bar_label_size #> [1] 2 #>  #> $bar_label_nudge_x #> [1] 0 #>  #> $bar_label_nudge_y #> [1] 0 #>  #> $bar_line_width #> [1] 0.5 #>  #> $bar_nudge_y #> [1] 0 #>  #> $bar_pattern_fill_colour #> [1] \"white\" #>  #> $bar_pattern_type #> [1] \"none\" #>  #> $bar_type #> [1] \"default\" #>  #> $bar_width #> [1] 0.4 #>  #> $column_spanners_nudge_y #> [1] -0.2 #>  #> $column_spanners_row_height #> [1] 1 #>  #> $column_spanners_2_nudge_y #> [1] -0.2 #>  #> $column_spanners_2_row_height #> [1] 1 #>  #> $columns_alignment #> [1] 0.5 #>  #> $columns_nudge_x #> [1] 0 #>  #> $columns_nudge_y #> [1] 0 #>  #> $columns_table_sig_superscript_letter #> [1] \"a\" #>  #> $columns_table_sig_superscript_letter_nudge_x #> [1] 0 #>  #> $columns_width #> NULL #>  #> $headers_alignment #> NULL #>  #> $headers_background_colour #> [1] \"white\" #>  #> $headers_font_size #> [1] 2.5 #>  #> $headers_ggtext #> [1] TRUE #>  #> $headers_nudge_x #> [1] 0 #>  #> $headers_nudge_y #> [1] 0 #>  #> $headers_row_height #> [1] 1 #>  #> $bar_pattern_spacing #> [1] 0.1 #>  #> $bar_pattern_width #> [1] 0.5 #>  #> $font_size #> [1] 2.5 #>  #> $space_right #> [1] 0 #>"},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare lineplot data. — prep_lineplot","title":"Prepare lineplot data. — prep_lineplot","text":"Prepare lineplot data.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare lineplot data. — prep_lineplot","text":"","code":"prep_lineplot(   eatRep_dat,   subgroup_var = NULL,   total_subgroup = \"total\",   facet_var = \"TR_BUNDESLAND\",   total_facet = \"total\",   parameter = \"mean\",   sig_niveau = 0.05 )"},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare lineplot data. — prep_lineplot","text":"eatRep_dat Object returned eatRep. subgroup_var Character string column eatPlot_dat$group eatPlot_dat$plain containing subgroup mapping. supgroup receive line. subgroups within data, needs set, otherwise data preparation might fail.  Defaults NULL. total_subgroup Character string indicating subgroup containing groups subgroup_var. Defaults \"total\". facet_var Character string name variable used faceting plot. Defaults \"TR_BUNDESLAND\". total_facet Character string name total groups containing groups facet var. Defaults \"total\". parameter Character string. Contains value column parameter used plotting lines.  Defaults \"mean\". sig_niveau Numeric indicating border p-values considered significant. Defaults 0.05.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare lineplot data. — prep_lineplot","text":"Data prepared plotting BT-lineplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare lineplot data. — prep_lineplot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare tableplot data. — prep_tablebarplot","title":"Prepare tableplot data. — prep_tablebarplot","text":"Prepare tableplot data.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare tableplot data. — prep_tablebarplot","text":"","code":"prep_tablebarplot(   eatRep_dat,   subgroup_var = NULL,   parameter = \"mean\",   facet_var = \"TR_BUNDESLAND\",   total_facet = \"total\",   sig_niveau = 0.05,   total_subgroup = \"total\",   parameter_to_colname = TRUE )"},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare tableplot data. — prep_tablebarplot","text":"eatRep_dat Object returned eatRep. subgroup_var Character string column eatPlot_dat$group eatPlot_dat$plain containing subgroup mapping. supgroup receive line. subgroups within data, needs set, otherwise data preparation might fail.  Defaults NULL. parameter Character string. Contains value column parameter used plotting lines.  Defaults \"mean\". facet_var Character string variable containing information groups comparisons made . needed decosntruct comparisons like crossDiff crossDiff crossDiffTotal (crossDiff comparison total group). Name might bit confusing, prep_lineplot. Defaults TR_BUNDESLAND. total_facet Character string name total groups containing groups facet var. Defaults \"total\". sig_niveau Numeric indicating border p-values considered significant. Defaults 0.05. total_subgroup Character string indicating subgroup containing groups subgroup_var. Defaults \"total\". parameter_to_colname Logical indicates whether parameter also pivoted wide format, parameter column kept long format. Mainly set FALSE stacked barplots. Defaults TRUE.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare tableplot data. — prep_tablebarplot","text":"Data prepared plotting BT-lineplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare tableplot data. — prep_tablebarplot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the data in the Bundesland column. — process_bundesland","title":"Process the data in the Bundesland column. — process_bundesland","text":"changes ue ü adds - bundesländer consisting two words.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the data in the Bundesland column. — process_bundesland","text":"","code":"process_bundesland(vec, linebreak = FALSE, total_group = \"total\")"},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the data in the Bundesland column. — process_bundesland","text":"vec Character vector contains Bunesländer processed. linebreak Logical. TRUE, linebreak added '-'. Defaults FALSE. total_group Character string replaced Deutschland. Defaults \"total\".","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the data in the Bundesland column. — process_bundesland","text":"eatPlot_data data.frame bundesländer column processed.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the data in the Bundesland column. — process_bundesland","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for grDevices::pdf(). — save_plot","title":"Wrapper for grDevices::pdf(). — save_plot","text":"Wrapper grDevices::pdf().","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for grDevices::pdf(). — save_plot","text":"","code":"save_plot(   p,   filename,   width = 160,   height = 185,   colormodel = \"cmyk\",   scaling = 1,   ... )"},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for grDevices::pdf(). — save_plot","text":"p Plot saved. filename Filepath -name new plot file. width Width new plot file mm. Defaults 160. height Height new plot file mm. Defaults 185 colormodel Colormodel saving plot. See grDevices::pdf() information. Defaults \"cmyk\". scaling Scaling parameter changing height widht relationally. Defaults 1. ... arguments passed grDevices::pdf().","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for grDevices::pdf(). — save_plot","text":"PDF file.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for grDevices::pdf(). — save_plot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"Set colours, pointshapes linetypes lineplot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"","code":"set_scales(plot_settings = plotsettings_lineplot())"},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"ggplot2 plot settings","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"multiple tables/barplots combined, column widths might distorted, plots need scaled x-axes barplots. Therefore, standardize_column_width() can used calculate column_widths entered plotsettings_tablebarplot() defining plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"","code":"standardize_column_width(column_widths, plot_ranges = c(0, 0))"},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"column_widths List numeric vectors proportional column widths final, combined plot. end, proportions sum 1. However, want set width barplots automatically, can provide NA column containing barplot. case, width calculated automatically, proportions stay . plot_ranges Numeric vector containing ranges x-axis alle barplots. Defaults c(0, 0).","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"Returns list numeric vectors containing relative column widths set single plots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"","code":"## The first column of the left plot will cover 10 % of the plot width, the second 20 % and so on: standardize_column_width(   column_widths = list(     p1 = c(0.1, 0.2),     p2 = c(0.5, 0.2)   ),   plot_ranges = c(10, 30) ) #> $p1 #> [1] 0.3333333 0.6666667 #>  #> $p2 #> [1] 0.7142857 0.2857143 #>   ## NAs will be interpreted as barplots, in wich case the width of the barplots will be ## calclulated automatically, so the x-axes are on the same scale. standardize_column_width(   column_widths = list(     p1 = c(0.1, NA),     p2 = c(0.5, NA)   ),   plot_ranges = c(10, 30) ) #> $p1 #> [1] 0.5 0.5 #>  #> $p2 #> [1] 0.625 0.375 #>"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for lineplot. — theme_line","title":"Theme for lineplot. — theme_line","text":"Theme lineplot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for lineplot. — theme_line","text":"","code":"theme_line(plot_settings = plotsettings_lineplot())"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for lineplot. — theme_line","text":"plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for lineplot. — theme_line","text":"ggplot2 theme","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for lineplot. — theme_line","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for table plotted with ggplot2. — theme_table","title":"Theme for table plotted with ggplot2. — theme_table","text":"Theme table plotted ggplot2.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for table plotted with ggplot2. — theme_table","text":"","code":"theme_table(plot_settings)"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for table plotted with ggplot2. — theme_table","text":"plot_settings Named list constructed plotsettings_tablebarplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_tablebarplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for table plotted with ggplot2. — theme_table","text":"ggplot2 theme.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for table plotted with ggplot2. — theme_table","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for a table column. — theme_table_col","title":"Theme for a table column. — theme_table_col","text":"Theme table column.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for a table column. — theme_table_col","text":"","code":"theme_table_col()"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for a table column. — theme_table_col","text":"ggplot2 theme, can used plotted table column.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for a table column. — theme_table_col","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for a y-axis plot. — theme_y_axis","title":"Theme for a y-axis plot. — theme_y_axis","text":"Theme y-axis plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for a y-axis plot. — theme_y_axis","text":"","code":"theme_y_axis(plot_settings = plotsettings_lineplot())"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for a y-axis plot. — theme_y_axis","text":"plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for a y-axis plot. — theme_y_axis","text":"ggplot2 theme, can used plotted y-axis.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for a y-axis plot. — theme_y_axis","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_2.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — trend_2","title":"BT24 example data. — trend_2","text":"Default plot settings mean-barplot without trend. Default plot settings mean-barplot without trend.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — trend_2","text":"","code":"trend_2  trend_2"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_2.html","id":"trend-","dir":"Reference","previous_headings":"","what":"trend_2","title":"BT24 example data. — trend_2","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_2.html","id":"trend--1","dir":"Reference","previous_headings":"","what":"trend_2","title":"BT24 example data. — trend_2","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_gender.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — trend_gender","title":"BT24 example data. — trend_gender","text":"Example data grouping var multiple levels.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_gender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — trend_gender","text":"","code":"trend_gender"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_gender.html","id":"trend-gender","dir":"Reference","previous_headings":"","what":"trend_gender","title":"BT24 example data. — trend_gender","text":"list four elements.","code":""},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-111","dir":"Changelog","previous_headings":"","what":"eatPlot 1.1.1","title":"eatPlot 1.1.1","text":"Bugfix prep_tableplot(): groups didn’t comparison removed prepping process, changed now. Implemented stacked barplots. columns_nudge_y plotsettings_tablebarplot() now works rowwise well. Improved rendering greek letters linebreak, using lists instead ´atop()´. Implemented modular options plotting lines different years different facets plot_lineplot(). Removed standardize_pattern_spacing(), work expected. Try around pattern spacing instead, take template plots orientation.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-110","dir":"Changelog","previous_headings":"","what":"eatPlot 1.1.0","title":"eatPlot 1.1.0","text":"Internally changed data preperation workflow. Prepared plot default lists BT24.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-101","dir":"Changelog","previous_headings":"","what":"eatPlot 1.0.1","title":"eatPlot 1.0.1","text":"Renamed grouping_var argument plotsettings_lineplot() subgroup_var.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-100-major-update","dir":"Changelog","previous_headings":"","what":"eatPlot 1.0.0 “Major Update”","title":"eatPlot 1.0.0 “Major Update”","text":"Breaking Changes: package completely restructured encompass changes made output format eatRep. Mainly, data preparation changed internally. user end, changes visible changed output format prepared data, changed column names prepared data. function arguments changed consistency. prep_plot() split prep_plot_lineplot() prep_plot_tablebarplot(), different arguments output formats.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-better-braces-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9029 “Better Braces”","title":"eatPlot 1.0.0 “Major Update”","text":"Updated algorithm calculating brace position indention, longer trend always gets longer brace. braces get indented automatically, depending position plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-x-axis-label-size-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9028 “x axis label size”","title":"eatPlot 1.0.0 “Major Update”","text":"Implemented argument axis_x_label_size plotsettings_tablebarplot() setting fontsize x axis labels barplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-bar-nudge-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9027 “bar nudge”","title":"eatPlot 1.0.0 “Major Update”","text":"Using argument bar_nudge_y plotsettings_tablebarplot() now possible nudge bars y direction.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-complex-group-comparisons-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9026 “complex group comparisons”","title":"eatPlot 1.0.0 “Major Update”","text":"Comparisons type group_1.vs.group_2.VS.wholeGroup-group_1.vs.group_2 always compare group comparison states vs wholeGroup. Therefore, naming respective columns adapted, output complexity reduced.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-white-spaces-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9025 “white spaces”","title":"eatPlot 1.0.0 “Major Update”","text":"Implemented possiblity plot white spaces next plots, can sperated white space. Use space_right plotsettings_tablebarplot() set width, controll background_stripes borders background_stripes_border.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-better-headers-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9024 “better headers”","title":"eatPlot 1.0.0 “Major Update”","text":"Implemented column_spanners_2 argument [plotsettings_tablebarplot()]. provides second dimension column spanners. Implemented headers_row_height, column_spanners_row_height column_spanners_2_row_height arguments [plotsettings_tablebarplot()]. makes possible set width row headers column_spanners written . Implemented headers_nudge_y, column_spanners_nudge_y columns_spanners_2_nudge_y arguments [plotsettings_tablebarplot()] nudge individual headers column_spanners along y-axis. Removed headers_background_widht_y argument [plotsettings_tablebarplot()]. Implemented headers_font_size argument [plotsettings_tablebarplot()].","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9023","title":"eatPlot 1.0.0 “Major Update”","text":"Fixed NA-handling [filter_rows()].","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-1","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9022","title":"eatPlot 1.0.0 “Major Update”","text":"Implemented vs.Vs.vs. comparisons, crossDiff_of_groupDiffs can plotted now.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-2","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9021","title":"eatPlot 1.0.0 “Major Update”","text":"Moved background_lines argument [plot_lineplot()] [plotsettings_lineplot()].","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-3","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9020","title":"eatPlot 1.0.0 “Major Update”","text":"Removed white space around final plots. lineplots, still needed drawing box around. Adjusted distance single lineplot-tiles. now possible set y-axis lineplots manually using argument axis_y_lims axis_y_tick_distance [plotsettings_lineplot()]. Renamed y_axis [plotsettings_lineplot()] axis_y. Tweaked scales lineplots, white spaces highest point year-banner reduced.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-4","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9019","title":"eatPlot 1.0.0 “Major Update”","text":"New function [gsub_plot_dat()] replacing character strings prepared data. Mainly intended replacing “wholeGroup” “Deutschland”, use cases possible well. now possible draw box around tiles [plot_lineplot()] defining wanted tiles seperate_plot_var_box-Argument. Improved y-axis plotting [plot_lineplot()]. Changed underlying architechture lineplot-scales.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-5","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9018","title":"eatPlot 1.0.0 “Major Update”","text":"Trend lines differing year ranges can now plotted equal length (split non-split plots). Use equal_trend_line_length-argument [plotsettings_lineplot()] care, distances timepoints might distorted approach (however, necessary BT22).","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-6","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9017","title":"eatPlot 1.0.0 “Major Update”","text":"Changed defaults y position column headers.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-7","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9016","title":"eatPlot 1.0.0 “Major Update”","text":"Column header lines now consistent width.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-8","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9015","title":"eatPlot 1.0.0 “Major Update”","text":"Limits y-axis lineplots can set manually using argument axis_y_lims [plotsettings_lineplot()]. New [cmyk()] function setting colour values using cmyk colour coding. Set default cmyk-colours chapter 3.3 (Frz). New defaul-settings list mean-barplots without trend.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-9","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9014","title":"eatPlot 1.0.0 “Major Update”","text":"Added function [standardize_column_widths] can used calculate relative column width plots combined later. way, columns width can easily set width. calcualtion columns_table_sig_high_letter_nudge_x argument [plotsettings_tablebarplot()] adjusted slightly behaves consistent. Added argument specifying background line colour lineplots. Changed default colours default plotting lists, go ahead cmyk colours needed publisher. Barplots patterns now small black frame.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-10","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9013","title":"eatPlot 1.0.0 “Major Update”","text":"Changed color encoding CMYK default save_plot(). , dashes represented UTF8 Encoding. done automatically plot-functions. result, dashes represented correctly look plot directly R, correct PDF.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-11","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9012","title":"eatPlot 1.0.0 “Major Update”","text":"plot_lineplot() kann die seperate_plot_var jetzt als factor übergeben werden, damit die Reihenfolge der Linienplots der Reihenfolge der factorlevels entspricht.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-12","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9011","title":"eatPlot 1.0.0 “Major Update”","text":"bar header argument merged columns_headers argument plot_tablebarplot, now named headers. bar header now behaves like column headers, can aligned headers_alignment - Argument plotsettings_tablebarplot().","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-13","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9010","title":"eatPlot 1.0.0 “Major Update”","text":"argument columns_table_se can now used specifying columns plotted (SE) (brackets). now example Chapter 4 plots without trend. now possible define different types background lines plotsettings_tablebarplot(), using argument bar_background_lines. now possible let background lines span rows specified bar_background_lines_spanners argument plotsettings_tablebarplot() function. Added border line top bar plots. Added templates chapter 3 - french chapter 4 - noTrend analyses. Use ggsave() save_plot(), correct dashes displayed pdf.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-14","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9009","title":"eatPlot 1.0.0 “Major Update”","text":"grouping_vars - argument prep_plot() now takes two grouping_vars. Renamed arguments prep_plot(): grouping_var grouping_var_groups grouping_vars grouping_vars_groups. Comparison columns now named differently. New comparisons prepared: : c(“crossDiff”, “groupDiff”, “crossDiffofgroupDiff”, “trendDiffgroup”, “trendDiffcross”). Nested comparisons type ‘group_a.vs.group_b.VS.group_b.vs.group_c’ currently included. Removed default setting label_sig_high argument plot_lineplot(). Added argument title_superscript plot_lineplot() specifying superscripts plot titles. Added argument comparisons plot_lineplot() specifying wanted comparisons. Standardized column names plot_data$plot_tablebarplot, _noTrend always written Comp.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-15","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9008","title":"eatPlot 1.0.0 “Major Update”","text":"Added argument plotsettings_tablebarplot(bar_background_lines = TRUE) striped border lines barplots. Added alignent option 2 tablebars. right align columns middle column, usefull numeric columns. Columns linebreaks adjusted automatically now, don’t flow upper line borders .","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-16","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9007","title":"eatPlot 1.0.0 “Major Update”","text":"Tables/Barplots now take sorting data.frame input.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-17","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9006","title":"eatPlot 1.0.0 “Major Update”","text":"Columns can now aligned decimal point (possible alignment = 1).","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-18","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9005","title":"eatPlot 1.0.0 “Major Update”","text":"default setting patterned bars now reversed, pattern shown non-significant bars. now possible specify letter used superscript significance.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-19","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9004","title":"eatPlot 1.0.0 “Major Update”","text":"plot_lineplot() tries plot background lines whole group trend confidence intervall, derived values whole Group theire standard errors. prep_plot() now distinguishes columns crossDiff groupDiff. prep_plot() makes less assumptions groups want plot. makes flexible. grouping_var_groups argument, can now filter groups want plot data preperation. Multiple bugfixes prep_plot().","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-20","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9003","title":"eatPlot 1.0.0 “Major Update”","text":"prep_plot()$plot_tablebarplot now returns data.frame wide format.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-21","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9002","title":"eatPlot 1.0.0 “Major Update”","text":"Added checks prep_plot() reduce error messages.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-22","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9001","title":"eatPlot 1.0.0 “Major Update”","text":"Fixed Bug prep_plot() threw error, comparison-column empty.","code":""}]
