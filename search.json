[{"path":"https://nickhaf.github.io/eatPlot/articles/lineplots.html","id":"lineplot-for-one-group","dir":"Articles","previous_headings":"","what":"Lineplot for one group","title":"Lineplots","text":"Let’s take example data trend_mw example dataset. first step workflow always data preparation. needed bring eatRep data correct format plotting. might necessary slight manual data preparation: can already plot:","code":"dat_lineplot_1 <- prep_lineplot(   trend_mw,   subgroup_var = \"geschlecht\" ## Leave this argument if you have only one subgroup ) ## Don't do that if you only have one group in your data, or want to plot all groups dat_lineplot_1 <- subset(dat_lineplot_1, subgroup_var == \"total\")  ## For correctly displaying the state names: dat_lineplot_1 <- process_bundesland(dat_lineplot_1) lineplot_1 <- plot_lineplot(dat_lineplot_1,   years_lines = list(c(2009, 2015), c(2015, 2022)),   years_braces = list(c(2009, 2015), c(2015, 2022)),   plot_settings = plotsettings_lineplot(default_list = lineplot_4x4) ) ## You haven't set a background_subgroup. This might lead to unexpected behaviour, if actually one group should be plotted in the background. Most times this will be the 'total' group. save_plot(lineplot_1, filename = \"C:/Users/hafiznij/Downloads/lineplot_1_group.pdf\")"},{"path":"https://nickhaf.github.io/eatPlot/articles/lineplots.html","id":"lineplot-for-two-groups","dir":"Articles","previous_headings":"","what":"Lineplot for two groups","title":"Lineplots","text":"","code":"dat_lineplot_2 <- prep_lineplot(   trend_mw,   subgroup_var = \"geschlecht\" ) dat_lineplot_2 <- process_bundesland(dat_lineplot_2)  lineplot_2 <- plot_lineplot(   dat_lineplot_2,   years_lines = list(c(2009, 2015), c(2015, 2022)),   years_braces = list(c(2009, 2015), c(2015, 2022)),   background_subgroup = \"total\",   plot_settings = plotsettings_lineplot(default_list = lineplot_4x4) ) save_plot(lineplot_2, filename = \"C:/Users/hafiznij/Downloads/lineplot_2_groups.pdf\") lineplot_2"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/plot_settings.html","id":"barplots","dir":"Articles","previous_headings":"List of predefined plotsettings-objects","what":"Barplots","title":"Plot settings","text":"?barplot_plot_frame ?barplot_table_plot_pattern","code":""},{"path":"https://nickhaf.github.io/eatPlot/articles/plot_settings.html","id":"lineplots","dir":"Articles","previous_headings":"List of predefined plotsettings-objects","what":"Lineplots","title":"Plot settings","text":"?lineplot_4x4 ?lineplot_2x3","code":""},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/articles/tableplots.html","id":"abbildung-6-5","dir":"Articles","previous_headings":"Geschlechterkapitel","what":"Abbildung 6.5","title":"Tableplots","text":"First prepare data: makes live lot easier set comparions argument column. dramatically reduces output, relevant columns prepared. see comparisons actually need, can take look plain data.frame: Now, plot want build special requirements demand preparation data. First , example data contains one domain, add second one manually. course don’t , just demonstration purposes. Now can easily plot barplot, sorting data.frame adding y-axis: tables need work, need connected barplot, half rows. Therefore need build separate variables table part, respective rows domain plotted table half set empty strings. Now can plot table like usual, one exception: can nudge table contents bit downwards, also fill empty row. Finally can save plot:","code":"mw_prepped <- prep_tablebarplot(trend_mw,   subgroup_var = \"geschlecht\",   comparisons = c(\"groupDiff\", \"crossDiff_of_groupDiff\") ) View(trend_mw$plain) mw_prepped_lesen <- mw_prepped mw_prepped_lesen$domain <- \"Leseverstehen\"  mw_prepped_hören <- mw_prepped mw_prepped_hören$domain <- \"Hörverstehen\"  mw_prepped <- rbind(mw_prepped_lesen, mw_prepped_hören) mw_prepped <- mw_prepped[order(mw_prepped$TR_BUNDESLAND), ] mw_prepped$y_axis <- 1:nrow(mw_prepped)  ## Rename \"total\" to \"Deutschland\" mw_prepped$TR_BUNDESLAND <- gsub(\"total\", \"Deutschland\", mw_prepped$TR_BUNDESLAND) mw_prepped$TR_BUNDESLAND <- gsub(\"ue\", \"ü\", mw_prepped$TR_BUNDESLAND) mw_prepped_lesen <- mw_prepped mw_prepped_lesen[mw_prepped_lesen$domain == \"Hörverstehen\", colnames(mw_prepped) != \"y_axis\"] <- NA  mw_prepped_hören <- mw_prepped mw_prepped_hören[mw_prepped_hören$domain == \"Leseverstehen\", colnames(mw_prepped) != \"y_axis\"] <- NA   mw_preped_lh <- merge(mw_prepped_lesen, mw_prepped_hören, by = c(\"y_axis\"), suffixes = c(\"_lesen\", \"_hören\")) mw_prepped_final <- merge(mw_prepped, mw_preped_lh, by = c(\"y_axis\")) tableplot_6.5 <- plot_tablebarplot(   dat = mw_prepped_final,   bar_est = \"est_2022_groupDiff_mean\",   bar_fill = \"domain\",   bar_sig = \"sig_2022_groupDiff_mean\",   columns_table = list(     \"TR_BUNDESLAND_lesen\", \"est_2022_groupDiff_mean_lesen\", \"se_2022_groupDiff_mean_lesen\", \"es_2022_groupDiff_mean_lesen\", \"est_2022_groupDiff_mean_hören\", \"se_2022_groupDiff_mean_hören\", \"es_2022_groupDiff_mean_hören\"   ),   columns_table_sig_bold = list(NULL, \"sig_2022_groupDiff_mean_lesen\", NULL, \"sig_2022_groupDiff_mean_lesen\", \"sig_2022_groupDiff_mean_hören\", NULL, \"sig_2022_groupDiff_mean_hören\"),   columns_table_sig_superscript = list(NULL, \"sig_2022_crossDiff_of_groupDiffTotal_mean_lesen\", NULL, \"sig_2022_crossDiff_of_groupDiffTotal_mean_lesen\", \"sig_2022_crossDiff_of_groupDiffTotal_mean_hören\", NULL, \"est_2022_crossDiff_of_groupDiffTotal_mean_hören\"),   columns_round = list(NULL, 0, 1, 2, 0, 1, 2),   columns_table_se = list(NULL, NULL, \"se_2022_groupDiff_mean_lesen\", NULL, NULL, \"se_2022_groupDiff_mean_hören\", NULL),   headers = list(\"\", \"*M<sub>Jungen<\/sub> - M<sub>Mädchen<\/sub>*\", \"(*SE*)\", \"*d*\", \"*M<sub>Jungen<\/sub> - M<sub>Mädchen<\/sub>*\", \"(*SE*)\", \"*d*\", \"**Vorsprung zugunsten der<br>Mädchen**\"),   column_spanners = list(\"**Leseverstehen**\" = c(2, 4), \"**Höhrverstehen**\" = c(5, 7)),   y_axis = \"y_axis\",   plot_settings = plotsettings_tablebarplot(     axis_x_lims = c(-5, 70),     columns_alignment = c(0, rep(2, 6), NULL), # NULL evtl. nicht optimal, oder in die Message mit rein.     headers_alignment = c(rep(0.5, 2), 2, rep(0.5, 2), 2, 0.5, 0.5),     headers_nudge_y = c(rep(0, 7), 0.5),     columns_nudge_y = c(rep(-0.5, 4), rep(0.5, 3)),     columns_width = c(0.15, rep(0.1, 6), 0.25),     bar_nudge_y = rep(c(-0.1, 0.1), nrow(mw_prepped_lesen) / 2),     background_stripes_colour = c(rep(c(\"white\", \"white\", \"#EBFDF3\", \"#EBFDF3\"), 8), \"grey\", \"grey\"),     background_stripes_border = \"background_line_table\",     bar_fill_colour = c(\"#20D479\", \"#8DEBBC\"),     bar_background_lines = \"scale_breaks\",     bar_background_lines_linetype = \"solid\",     default_list = barplot_table_plot_pattern   ) ) save_plot(tableplot_6.5, filename = \"C:/Users/hafiznij/Downloads/abb6.5.pdf\")"},{"path":"https://nickhaf.github.io/eatPlot/articles/tableplots.html","id":"abbildung-6-6","dir":"Articles","previous_headings":"Geschlechterkapitel","what":"Abbildung 6.6","title":"Tableplots","text":"First data prepared: Afterwards, bring format want plot : plot multiple plots combine . , set column widths, identical different plots: can just use object plot-settings adjust column widths. might necessary standardize pattern spacing plots: values set plot-settings . Now can combine plots: save result:","code":"dat_6.6 <- prep_tablebarplot(   trend_mw,   subgroup_var = \"geschlecht\",   par = c(\"mean\", \"sd\"), ## We need both mean and sd for the plot   comparisons = c(\"none\", \"trend\", \"trend_crossDiff\") ## Set for smaller output-table ) dat_6.6 <- subset(dat_6.6, geschlecht %in% c(\"m\", \"w\")) dat_6.6$geschlecht <- gsub(\"m\", \"Jungen\", dat_6.6$geschlecht) dat_6.6$geschlecht <- gsub(\"w\", \"Mädchen\", dat_6.6$geschlecht)  dat_6.6_a <- dat_6.6[order(dat_6.6$TR_BUNDESLAND), ]  dat_6.6_a$TR_BUNDESLAND[duplicated(dat_6.6_a$TR_BUNDESLAND)] <- \" \" dat_6.6_a$TR_BUNDESLAND <- gsub(\"total\", \"Deutschland\", dat_6.6_a$TR_BUNDESLAND) dat_6.6_a <- process_bundesland(dat_6.6_a) column_widths_stand <- standardize_column_width(   column_widths = list(     p1 = c(0.1, rep(0.04, 7), 0.05, rep(0.04, 2), NA),     p2 = c(0.05, rep(0.04, 2), NA)   ),   plot_ranges = c(75, 75) # Range of the x-axes of both plots set in 'axis_x_lims'. ) p_1 <- plot_tablebarplot(   dat = dat_6.6_a,   bar_est = \"est_2015 - 2009_trend_mean\",   bar_label = NULL,   bar_sig = \"sig_2015 - 2009_trend_mean\",   bar_fill = \"geschlecht\",   column_spanners = list(     \"**2009**<sup>a<\/sup>\" = c(3, 4),     \"**2015**<sup>a<\/sup>\" = c(5, 6),     \"**2022**<sup>a<\/sup>\" = c(7, 8),     \"**Differenz 2015-2009<sup>a<\/sup>**\" = c(9, 12)   ),   columns_table_se = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"se_2015 - 2009_trend_mean\", NULL),   headers = list(\"**Land**\", \" \", \"*M*\", \"*SD*\", \"*M*\", \"*SD*\", \"*M*\", \"*SD*\", \"*M<sub>2015<\/sub> - M<sub>2009<\/sub>*\", \"*(SE)*\", \"*d*\", \" \"),   columns_table = c(\"TR_BUNDESLAND\", \"geschlecht\", \"est_2009_none_mean\", \"est_2009_none_sd\", \"est_2015_none_mean\", \"est_2015_none_sd\", \"est_2022_none_mean\", \"est_2022_none_sd\", \"est_2015 - 2009_trend_mean\", \"se_2015 - 2009_trend_mean\", \"es_2015 - 2009_trend_mean\"),   columns_table_sig_bold = list(NULL, NULL, \"sig_2009_none_mean\",     NULL, \"sig_2015_none_mean\", NULL, \"sig_2022_none_mean\", NULL, \"sig_2015 - 2009_trend_mean\", NULL, \"sig_2015 - 2009_trend_mean\"),   columns_table_sig_superscript = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \"sig_2015 - 2009_trend_crossDiffTotal_mean\", NULL,NULL),   y_axis = \"y_axis\",   columns_round = c(rep(0, 10), 2),   plot_settings = plotsettings_tablebarplot(     axis_x_lims = c(-5, 70),     bar_pattern_spacing = 0.0154, ## We calculated this below in standardize_pattern_spacing()     background_stripes_colour = c(rep(c(\"white\", \"white\", \"#EBFDF3\", \"#EBFDF3\"), 8), \"grey\", \"grey\"),     bar_fill_colour = c(\"#20D479\", \"#8DEBBC\"),     columns_alignment = c(0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2),     columns_width = column_widths_stand$p1, ## This is the column-width object we set above     headers_alignment = c(0, 0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0),     default_list = barplot_table_plot_pattern   ) )  p_2 <- plot_tablebarplot(   dat = dat_6.6_a,   bar_est = \"est_2022 - 2015_trend_mean\",   bar_label = NULL,   bar_sig = \"sig_2022 - 2015_trend_mean\",   bar_fill = \"geschlecht\",   column_spanners = list(     \"**Differenz 2022-2015**\" = c(1, 4)   ),   headers = list(     \"*M<sub>2022<\/sub> - M<sub>2015<\/sub>*\",     \"*(SE)*\",     \"*d*\",     \" \"   ),   columns_table = c(     \"est_2022 - 2015_trend_mean\",     \"se_2022 - 2015_trend_mean\",     \"es_2022 - 2015_trend_mean\"   ),   columns_table_se = list(NULL, \"se_2022 - 2015_trend_mean\", NULL),   columns_table_sig_bold = list(\"sig_2022 - 2015_trend_mean\", NULL, \"sig_2022 - 2015_trend_mean\"),   columns_table_sig_superscript = list(\"sig_2022 - 2015_trend_crossDiffTotal_mean\", NULL, NULL),   y_axis = \"y_axis\",   columns_round = c(0, 0, 2),   plot_settings = plotsettings_tablebarplot(     axis_x_lims = c(-5, 70),     bar_pattern_spacing = 0.0346, ## We calculated this below in standardize_pattern_spacing()     background_stripes_colour = c(rep(c(\"white\", \"white\", \"#EBFDF3\", \"#EBFDF3\"), 8), \"grey\", \"grey\"),     bar_fill_colour = c(\"#20D479\", \"#8DEBBC\"),        columns_alignment = c(rep(0.5, 2), 2),     columns_width = column_widths_stand$p2, ## This is the column-width object we set above     headers_alignment = c(0.5, 0.5, 0.5, 0),     default_list = barplot_table_plot_pattern   ) ) bar_pattern_spacing_stand <- standardize_pattern_spacing(list(p_1, p_2), pattern_spacing = 0.05) ## Next Step: Update the bar_pattern_spacing values in your respective plots with the output values. bar_pattern_spacing_stand ## [1] 0.0154 0.0346 tableplot_6.6 <- combine_plots(list(p_1, p_2)) save_plot(tableplot_6.6, filename = \"C:/Users/hafiznij/Downloads/abb_6.6.pdf\", width = 320)"},{"path":"https://nickhaf.github.io/eatPlot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicklas Hafiz. Author, maintainer. Philipp Franikowski. Contributor.","code":""},{"path":"https://nickhaf.github.io/eatPlot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hafiz N (2025). eatPlot: Plot eatRep output. R package version 1.0.0, https://nickhaf.github.io/eatPlot/.","code":"@Manual{,   title = {eatPlot: Plot eatRep output},   author = {Nicklas Hafiz},   year = {2025},   note = {R package version 1.0.0},   url = {https://nickhaf.github.io/eatPlot/}, }"},{"path":"https://nickhaf.github.io/eatPlot/index.html","id":"eatplot-","dir":"","previous_headings":"","what":"Plot eatRep output","title":"Plot eatRep output","text":"goal eatPlot easily plot results stemming eatRep package.","code":""},{"path":"https://nickhaf.github.io/eatPlot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Plot eatRep output","text":"can install development version eatPlot GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"nickhaf/eatPlot\")"},{"path":"https://nickhaf.github.io/eatPlot/reference/adjusted_means.html","id":null,"dir":"Reference","previous_headings":"","what":"BT21 adusted means — adjusted_means","title":"BT21 adusted means — adjusted_means","text":"BT21 data set contains results adjusted means chapter.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/adjusted_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT21 adusted means — adjusted_means","text":"","code":"adjusted_means"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/adjusted_means.html","id":"adjusted-means","dir":"Reference","previous_headings":"","what":"adjusted_means","title":"BT21 adusted means — adjusted_means","text":"data frame 264 rows 12 columns: est Estimated value. p p-value","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/adjusted_means.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"BT21 adusted means — adjusted_means","text":"<\"Q:/BT2021/BT/60_Bericht/04_Mittelwerte/adjustierte Mittelwerte/Ergebnisse/01_ohneTrend_z_standard.xlsx\">","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_noTrend.html","id":null,"dir":"Reference","previous_headings":"","what":"BT22 default plot settings. — barplot_noTrend","title":"BT22 default plot settings. — barplot_noTrend","text":"Default plot settings mean-barplot without trend.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_noTrend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT22 default plot settings. — barplot_noTrend","text":"","code":"barplot_noTrend"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_noTrend.html","id":"barplot-notrend","dir":"Reference","previous_headings":"","what":"barplot_noTrend","title":"BT22 default plot settings. — barplot_noTrend","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_plot_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"BT22 default plot settings. — barplot_plot_frame","title":"BT22 default plot settings. — barplot_plot_frame","text":"Default plot settings Mindest Standard.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_plot_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT22 default plot settings. — barplot_plot_frame","text":"","code":"barplot_plot_frame"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_plot_frame.html","id":"barplot-plot-frame","dir":"Reference","previous_headings":"","what":"barplot_plot_frame","title":"BT22 default plot settings. — barplot_plot_frame","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_plot_frz.html","id":null,"dir":"Reference","previous_headings":"","what":"BT22 default plot settings. — barplot_plot_frz","title":"BT22 default plot settings. — barplot_plot_frz","text":"Default plot settings Mindest Standard Französisch.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_plot_frz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT22 default plot settings. — barplot_plot_frz","text":"","code":"barplot_plot_frz"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_plot_frz.html","id":"barplot-plot-frz","dir":"Reference","previous_headings":"","what":"barplot_plot_frz","title":"BT22 default plot settings. — barplot_plot_frz","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_table_plot_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"BT22 default plot settings. — barplot_table_plot_pattern","title":"BT22 default plot settings. — barplot_table_plot_pattern","text":"Default plot settings Mindest Standards trend. Default plot settings Mindest Standards trend.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_table_plot_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT22 default plot settings. — barplot_table_plot_pattern","text":"","code":"barplot_table_plot_pattern  barplot_table_plot_pattern"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_table_plot_pattern.html","id":"barplot-table-plot-pattern","dir":"Reference","previous_headings":"","what":"barplot_table_plot_pattern","title":"BT22 default plot settings. — barplot_table_plot_pattern","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/barplot_table_plot_pattern.html","id":"barplot-table-plot-pattern-1","dir":"Reference","previous_headings":"","what":"barplot_table_plot_pattern","title":"BT22 default plot settings. — barplot_table_plot_pattern","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":null,"dir":"Reference","previous_headings":"","what":"Set colours as cmyk values. — cmyk","title":"Set colours as cmyk values. — cmyk","text":"Set colours cmyk values.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set colours as cmyk values. — cmyk","text":"","code":"cmyk(C, M, Y, K)"},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set colours as cmyk values. — cmyk","text":"C Numeric cyan value. M Numeric magenta value. Y Numeric yellow value. K Numeric key (black) value.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set colours as cmyk values. — cmyk","text":"RGB colour value.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/cmyk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set colours as cmyk values. — cmyk","text":"","code":"cmyk(0, 0, 0, 1) #> [1] \"#FDFDFD\""},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine different ggplots — combine_plots","title":"Combine different ggplots — combine_plots","text":"Combine different ggplots","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine different ggplots — combine_plots","text":"","code":"combine_plots(plot_list, plot_widths = NULL)"},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine different ggplots — combine_plots","text":"plot_list List plots combined. plot_widths Set widths plots manually. Defaults NULL, case width calculated x axis scales metric.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine different ggplots — combine_plots","text":"Patchwork plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/combine_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine different ggplots — combine_plots","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"Calculate significance descriptions 'Mindeststandards'","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"","code":"construct_directional_sig(dat_bar, est_column, sig_column)"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"dat_bar Data prepared prep_lineplot(). est_column Column contains estimates. sig_column Column contains significances.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"Dataframe added column name ends _directional_sig.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_directional_sig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the significance descriptions for the 'Mindeststandards' — construct_directional_sig","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct labels — construct_label","title":"Construct labels — construct_label","text":"function creates new column label, merging estimates standard errors significant estimates represented bold superscript (via brace_label_est), standard errors brackets, needed (via brace_label_se). NAs converted empty strings. Main usage plotting tables brace labels.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct labels — construct_label","text":"","code":"construct_label(   dat,   column_est = NULL,   column_se = NULL,   column_sig_bold = NULL,   column_sig_superscript = NULL,   sig_superscript_letter = NULL,   round_est = 0,   round_se = 1,   plot_settings = plotsettings_tablebarplot() )"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct labels — construct_label","text":"dat Data frame columns merged labels. column_est Character string column estimates. column_se Character string column standard errors. column_sig_bold Character string column significant estimates determine bold printing. column_sig_superscript Character string column significant estimates determine superscript. sig_superscript_letter Character string letter used superscript. round_est Rounding brace_label_est. round_se Rounding brace_label_se. plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct labels — construct_label","text":"data frame added column constructed label.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct labels — construct_label","text":"","code":"# example data frame dat <- data.frame(   names = c(\"Berlin\", \"Hamburg\", \"Hessen\", \"Niedersachsen\", \"Saarland\"),   estimate = c(400, 650, 380, 500, 600),   se = c(0.1, 0.45, 1, 0.27, 0.9),   p_estimate = c(FALSE, FALSE, TRUE, TRUE, FALSE) )"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct labels — construct_label_2","title":"Construct labels — construct_label_2","text":"function creates new column label, merging estimates standard errors significant estimates represented bold superscript (via label_est), standard errors brackets, needed (via label_se). NAs converted empty strings. Main usage plotting tables brace labels.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct labels — construct_label_2","text":"","code":"construct_label_2(   dat,   new_name = \"label\",   label_est = NULL,   label_se = NULL,   label_sig_bold = NULL,   label_sig_superscript = NULL,   label_sig_superscript_extra_column = FALSE,   round_est = 0,   round_se = 1,   plot_settings = plotsettings_tablebarplot() )"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct labels — construct_label_2","text":"dat Data frame columns merged labels. new_name Character string new column added dat. Defaults 'label'. label_est Character string column estimates. label_se Character string column standard errors. label_sig_bold Character string column significant estimates determine bold printing. label_sig_superscript Character string column significant estimates determine superscript. label_sig_superscript_extra_column Logical, set 'FALSE' superscript significant values added directly label (necessary line plots), set 'TRUE' superscript significant values written extra column ending '_sig_superscript' (necessary tables). round_est Rounding label_est. round_se Rounding label_se. plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct labels — construct_label_2","text":"data frame added column constructed label.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_label_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct labels — construct_label_2","text":"","code":"# example data frame dat <- data.frame(   names = c(\"Berlin\", \"Hamburg\", \"Hessen\", \"Niedersachsen\", \"Saarland\"),   estimate = c(400, 650, 380, 500, 600),   se = c(0.1, 0.45, 1, 0.27, 0.9),   p_estimate = c(FALSE, FALSE, TRUE, TRUE, FALSE) )"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply Values in Columns by 100 to build percentages. — construct_percent","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"Multiply Values Columns 100 build percentages.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"","code":"construct_percent(df, columns)"},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"df Input data.frame. columns Character vector column names columns want multiply 100.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"input data.frame new columns multiplied 100. New columns suffix \"_percent\" name.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/construct_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiply Values in Columns by 100 to build percentages. — construct_percent","text":"","code":"df <- data.frame(col_1 = c(1, 2), col_2 = c(3, 4), col_3 = c(\"a\", \"b\")) construct_percent(df, columns = c(\"col_1\", \"col_2\")) #>   col_1 col_2 col_3 col_1_percent col_2_percent #> 1     1     3     a           100           300 #> 2     2     4     b           200           400"},{"path":"https://nickhaf.github.io/eatPlot/reference/eatPlot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eatPlot: Plot eatRep output — eatPlot-package","title":"eatPlot: Plot eatRep output — eatPlot-package","text":"Functions plotting eatModel output.","code":""},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/eatPlot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"eatPlot: Plot eatRep output — eatPlot-package","text":"Maintainer: Nicklas Hafiz hafiznij@hu-berlin.de contributors: Philipp Franikowski [contributor]","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter specified rows from plot_dat objects. — filter_plot_dat","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"Filter specified rows plot_dat objects.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"","code":"filter_plot_dat(   plot_dat,   filter_statement,   list_elements = c(\"plot_lines\", \"plot_points\", \"plot_background_lines\", \"plot_braces\") )"},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"plot_dat list data.frames prepared prep_lineplot(). filter_statement Character string containing logical expression filtering specific rows data.frames list possible. Write dat$column_name specify wanted columns. list_elements Character vector names list objects want filter . Defaults c(\"plot_lines\", \"plot_points\", \"plot_background_lines\", \"plot_braces\").","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"plot_dat list rows filtered specified.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_plot_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter specified rows from plot_dat objects. — filter_plot_dat","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or remove rows from prepared data. — filter_rows","title":"Extract or remove rows from prepared data. — filter_rows","text":"Extract remove rows prepared data.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or remove rows from prepared data. — filter_rows","text":"","code":"filter_rows(   plot_dat,   column_name,   subsetter,   list_elements = c(\"plot_points\", \"plot_lines\", \"plot_braces\"),   remove = FALSE,   remove_na = FALSE )"},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or remove rows from prepared data. — filter_rows","text":"plot_dat List data.frames, output prep_lineplot. column_name Column subsetter searched . subsetter Character string state want extract remove. list_elements Character vector names list objects want filter . Defaults c(\"plot_lines\", \"plot_points\", \"plot_background_lines\", \"plot_braces\"). remove Logical. TRUE, state defined state removed. Defaults FALSE. remove_na Logical. TRUE, rows NAs column_name removed.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or remove rows from prepared data. — filter_rows","text":"List data.frames.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/filter_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract or remove rows from prepared data. — filter_rows","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"gsub() for lists and data.frames. — gsub_plot_dat","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"gsub() lists data.frames.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"","code":"gsub_plot_dat(   plot_dat,   search_for = \"wholeGroup\",   replace_with = \"Deutschland\" )"},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"plot_dat List data.frame, mainly usage intention plot_dat - objects prep_lineplot(). search_for Character string replaced. replace_with Character string replacement.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"Depending input data.frame list subbed character strings.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/gsub_plot_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gsub() for lists and data.frames. — gsub_plot_dat","text":"","code":"plot_dat <- list(   dat_1 = data.frame(     col_1 = c(\"wholeGroup\", \"notwholeGroup\"),     col_2 = c(\"wholeGroup\", NA),     col_3 = c(1, 2)   ),   dat_2 = data.frame(     col_1 = c(\"wholeGroup\", \"notwholeGroup\"),     col_2 = c(\"wholeGroup\", NA),     col_3 = c(TRUE, FALSE)   ) ) gsub_plot_dat(plot_dat) #> $dat_1 #>            col_1       col_2 col_3 #> 1    Deutschland Deutschland     1 #> 2 notDeutschland        <NA>     2 #>  #> $dat_2 #>            col_1       col_2 col_3 #> 1    Deutschland Deutschland  TRUE #> 2 notDeutschland        <NA> FALSE #>"},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_2x3.html","id":null,"dir":"Reference","previous_headings":"","what":"BT22 default plot settings. — lineplot_2x3","title":"BT22 default plot settings. — lineplot_2x3","text":"Default plot settings lineplots different competences total germany BT_22 chapter 4.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_2x3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT22 default plot settings. — lineplot_2x3","text":"","code":"lineplot_2x3"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_2x3.html","id":"lineplot-x-","dir":"Reference","previous_headings":"","what":"lineplot_2x3","title":"BT22 default plot settings. — lineplot_2x3","text":"list two elements. n_cols Four columns smaller plots used final lineplot. axis_x_label_centralize x-axis labels nudged center 0.155 npc's. split_plot  y_axis","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4.html","id":null,"dir":"Reference","previous_headings":"","what":"BT22 default plot settings. — lineplot_4x4","title":"BT22 default plot settings. — lineplot_4x4","text":"Default plot settings lineplots BT_22 chapter 4.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT22 default plot settings. — lineplot_4x4","text":"","code":"lineplot_4x4"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4.html","id":"lineplot-x-","dir":"Reference","previous_headings":"","what":"lineplot_4x4","title":"BT22 default plot settings. — lineplot_4x4","text":"list two elements. n_cols Four columns smaller plots used final lineplot. axis_x_label_centralize x-axis labels nudged center 0.155 npc's. split_plot  y_axis","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4_3groups.html","id":null,"dir":"Reference","previous_headings":"","what":"BT22 default plot settings. — lineplot_4x4_3groups","title":"BT22 default plot settings. — lineplot_4x4_3groups","text":"Default plot settings lineplots three groups.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4_3groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT22 default plot settings. — lineplot_4x4_3groups","text":"","code":"lineplot_4x4_3groups"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/lineplot_4x4_3groups.html","id":"lineplot-x-groups","dir":"Reference","previous_headings":"","what":"lineplot_4x4_3groups","title":"BT22 default plot settings. — lineplot_4x4_3groups","text":"list two elements. background_stripes_colour Colour background stripes.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/min_stand.html","id":null,"dir":"Reference","previous_headings":"","what":"BT21 minimum standards. — min_stand","title":"BT21 minimum standards. — min_stand","text":"BT21 data set contains data mindest-standards.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/min_stand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT21 minimum standards. — min_stand","text":"","code":"min_stand"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/min_stand.html","id":"min-stand","dir":"Reference","previous_headings":"","what":"min_stand","title":"BT21 minimum standards. — min_stand","text":"data frame ... rows ... columns: kb Competence","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/min_stand.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"BT21 minimum standards. — min_stand","text":"<\"Q:/BT2022/BT/60_Bericht/_Probegrafiken/2023-01-26 Vorlagen Balken und Linien/BT2021_Abb3.9.xlsx\">","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a lineplot. — plot_lineplot","title":"Plot a lineplot. — plot_lineplot","text":"Plot lineplot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a lineplot. — plot_lineplot","text":"","code":"plot_lineplot(   eatPlot_dat,   facet_var = \"TR_BUNDESLAND\",   point_est = \"est_comparison_none\",   point_sig = \"sig_comparison_crossDiffTotal\",   line_sig = \"sig_comparison_trend\",   line_se = \"se_comparison_none\",   brace_label_est = \"est_comparison_trend\",   brace_label_se = \"se_comparison_trend\",   brace_label_sig_superscript = NULL,   brace_label_sig_bold = \"sig_comparison_trend\",   years_lines = list(),   years_braces = list(),   background_facet = \"total\",   background_subgroup = NULL,   box_facet = NULL,   title_superscripts = NULL,   plot_settings = plotsettings_lineplot() )"},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a lineplot. — plot_lineplot","text":"eatPlot_dat Input list prepared prep_lineplot(). facet_var Character string column name eatPlot_dat containing variable split multiple facets. Defaults NULL. point_est Character string column name eatPlot_dat containing y-values plotted points. Defaults NULL. point_sig Character string column name containing significance values point_values. Defaults NULL. line_sig Character string column name containing significance values line_values. Defaults \"sig_Trend_noComp\", show significance difference two time points. line_se Character vector column name containing standard errors plotted lines. Defaults NULL, case deducted line values. brace_label_est Character string column name containing brace labels. brace_label_se Character string column name containing standard errors label_est. put bracktes behind label_est. brace_label_sig_superscript Character string column name containing significance values label_est. Significant values marked raised ''. Normally, comparison trend vs. trend whole Germany, can found trendDiff_cross parameter. Defaults NULL, parameter always provided. brace_label_sig_bold Character string column name containing significance values label_est. Significant values marked bold. Defaults \"sig_Trend_noComp\". years_lines List numeric vectors containing start end year, trend line plotted. Per default, lines drawn every year next consecutive year. years_braces List numeric vectors containing start end year, brace plotted. Per default, braces drawn last year every year included data. background_facet Character string facet_var column assigned whole group. plotted extra facet, background line. Defaults \"Deutschland\". background_subgroup Character string subgroup_var column assigned whole group. plotted extra facet, background line. Defaults NULL. box_facet Character vector, containing strings seperate_plot_var-column, get box drawn around . title_superscripts Named list superscripts plot_titles. name list element equal title, value list element superscript. Defaults NULL. plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a lineplot. — plot_lineplot","text":"ggplot2 object.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a lineplot. — plot_lineplot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a table and/or a barchart. — plot_tablebarplot","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"Plot table /barchart.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"","code":"plot_tablebarplot(   dat,   y_axis = NULL,   bar_est = NULL,   bar_label = NULL,   bar_sig = NULL,   bar_label_sig = NULL,   bar_fill = NULL,   columns_table = NULL,   columns_table_sig_bold = NULL,   columns_table_sig_superscript = NULL,   columns_table_se = NULL,   headers = NULL,   column_spanners = NULL,   column_spanners_2 = NULL,   columns_round = 0,   plot_settings = plotsettings_tablebarplot() )"},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"dat Data prepared prep_lineplot(). y_axis Character string columnname used y-axis. contain unique values. bar_est Character string column contains values bar chart. NULL, bar chart plotted. bar_label Character string column used bar labels top bars. NULL, labels printed. Defaults NULL. bar_sig Character string column used marking bars significant. bar_label_sig Character string column used marking bar labels significant. bar_fill Character string column groups bar filling colours different groups. columns_table List character strings columns plotted table columns plot. columns_table_sig_bold List character strings columns contain significances plotting significant values bold. columns_table_sig_superscript List character strings columns contain significances plotting significant values raised . columns_table_se List character strings columns contain standard errors, plotted brackets rounded 1. headers Character vector containing headers ploted table columns, including bar table. column_spanners Named list. name element column header. list element numeric vector indicating columns column spanner span. column_spanners_2 Named list. second dimension column spanners. name element column header. list element numeric vector indicating columns column spanner span. columns_round Numeric vector rounding column values. Insert NULL 0 rounding/character columns. plot_settings Named list constructed plotsettings_tablebarplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_tablebarplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"ggplot2 object.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plot_tablebarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a table and/or a barchart. — plot_tablebarplot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parameters for the lineplots. — plotsettings_lineplot","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"Set parameters lineplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"","code":"plotsettings_lineplot(   axis_x_background_colour = NULL,   axis_x_background_width_x = NULL,   axis_x_background_width_y = NULL,   axis_x_label_centralize = NULL,   axis_x_label_nudge_y = NULL,   axis_x_label_size = NULL,   axis_y = NULL,   axis_y_tick_distance = NULL,   axis_y_lims = NULL,   background_lines = NULL,   background_line_colour = NULL,   brace_label_gap_y = NULL,   brace_label_nudge_x = NULL,   brace_label_size = NULL,   brace_label_nudge_y = NULL,   brace_line_width = NULL,   brace_span_y = NULL,   equal_trend_line_length = NULL,   grouping_colours = NULL,   line_type = NULL,   line_width = NULL,   margin_bottom = NULL,   margin_left = NULL,   margin_right = NULL,   margin_top = NULL,   n_cols = NULL,   point_label_nudge = NULL,   point_shapes = NULL,   point_label_size = NULL,   point_label_nudge_direction = NULL,   point_label_nudge_x = NULL,   point_label_nudge_y = NULL,   point_size = NULL,   box_facet_linewidth = NULL,   split_plot = NULL,   split_plot_gap_width = NULL,   default_list = NULL )"},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"axis_x_background_colour Colour value x-axis background. axis_x_background_width_x, axis_x_background_width_y Numeric. background space increased x- y-direction, parameter increased. axis_x_label_centralize Numeric. x-axis labels nudged center amount, plot split lineplot. axis_x_label_nudge_y Numeric shifting x-axis labels vertically. Increase lower x-axis labels. axis_x_label_size Numeric font size x-axis labels. axis_y Logical, indicating whether y-axis plotted left row . axis_y_tick_distance Numeric, distance lie tick marks. first tick start lower end axis_y_lims calculated automatically. following ticks added distances defined axis_y_tick_distance. Defaults 20. axis_y_lims Numeric y-axis limits. Defaults NULL, case limits set automatically. background_lines Logical, indicating whether whole group trend plotted background. Defaults TRUE. background_line_colour Colour background line. brace_label_gap_y Numeric size vertical gap brace labels. brace_label_nudge_x Numeric. brace labels shifted along x-axis amount. Increase shift labels right. brace_label_size Numeric fontsize bracelabels. brace_label_nudge_y Numeric. brace labels shifted along y-axis amount. Increase let labels start . brace_line_width Numeric thickness brace. brace_span_y Numeric width brace y-axis. equal_trend_line_length Logical. true, trend lines length, even actual distance year differently. E.g., distance years trends 2010 - 2011 2011 - 2020 equal, even though first trend takes 1 year, second one 9 years. Please use care, distort x-axis results misleading line lengths. Defaults FALSE. grouping_colours Named vector colours different grouping_var groups. names vector equivalent factorlevels grouping_var. line_type Named vector containing linetypes plots. names must either \"TRUE\" \"FALSE\", linetpyes represent significances. See ggplot2::scale_linetype. line_width Numeric thicknes plotted lines. margin_bottom, margin_left, margin_right, margin_top Numeric area around plot. See ggplot2::theme(). n_cols Numeric, indicating many columns smaller plots final lineplot . point_label_nudge Logical. TRUE, point labels nudged automatically ggrepel::geom_text_repel try avoid overlapping lines /points. Might interfere point-label settings, use risk. Alternatively, try use point_label_nudge_direction get controll point labels. point_shapes Named numeric vector shape points. vectornames must either \"TRUE\" \"FALSE\", point-shapes refer significances. See ggplot2::scale_shape. point_label_size Numeric fontsize pointlabels. point_label_nudge_direction Named list contents either \"+\" \"-\". names factorlevels grouping_var. \"+\" point lables printed point, \"-\" . NULL provided, labels printed points lowest group, points others. point_label_nudge_x, point_label_nudge_y Numeric amount pointlabel nudged x- y-direction. point_size Numeric size plotted points. box_facet_linewidth Numeric linewidth box around chosen seperate_plot-vars (e.g., states). split_plot Logical, indicating whether different trends split . split_plot_gap_width Numeric width gap split plot npc. default_list Named list predefined settings. Defaults list settings set 0.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"named list settings lineplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parameters for the lineplots. — plotsettings_lineplot","text":"","code":"plotsettings_lineplot(n_cols = 2, axis_x_label_centralize = 0.1) #> $axis_x_background_colour #> [1] \"lightgrey\" #>  #> $axis_x_background_width_x #> [1] 0 #>  #> $axis_x_background_width_y #> [1] 0.04 #>  #> $axis_x_label_centralize #> [1] 0.1 #>  #> $axis_x_label_nudge_y #> NULL #>  #> $axis_x_label_size #> [1] 2 #>  #> $axis_y #> [1] FALSE #>  #> $axis_y_tick_distance #> [1] 20 #>  #> $axis_y_lims #> NULL #>  #> $background_lines #> [1] TRUE #>  #> $background_line_colour #> [1] \"black\" #>  #> $brace_label_gap_y #> [1] 0.08 #>  #> $brace_label_nudge_x #> [1] 0 #>  #> $brace_label_nudge_y #> [1] 0.05 #>  #> $brace_label_size #> [1] 2 #>  #> $brace_line_width #> [1] 0.5 #>  #> $brace_span_y #> [1] 0.1 #>  #> $equal_trend_line_length #> [1] FALSE #>  #> $grouping_colours #> NULL #>  #> $line_type #> NULL #>  #> $line_width #> [1] 1 #>  #> $margin_bottom #> [1] 0 #>  #> $margin_left #> [1] 0 #>  #> $margin_right #> [1] 0 #>  #> $margin_top #> [1] 0 #>  #> $n_cols #> [1] 2 #>  #> $point_label_nudge #> [1] FALSE #>  #> $point_label_nudge_direction #> NULL #>  #> $point_label_nudge_x #> [1] 0 #>  #> $point_label_nudge_y #> [1] 0 #>  #> $point_label_size #> [1] 2 #>  #> $point_shapes #> NULL #>  #> $point_size #> [1] 1 #>  #> $box_facet_linewidth #> [1] 0.5 #>  #> $split_plot #> [1] FALSE #>  #> $split_plot_gap_width #> [1] 0 #>"},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parameters for the barplots. — plotsettings_tablebarplot","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"Set parameters barplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"","code":"plotsettings_tablebarplot(   axis_x_label_size = NULL,   axis_x_lims = NULL,   background_stripes_border = NULL,   background_stripes_colour = NULL,   bar_background_lines = NULL,   bar_background_lines_linetype = NULL,   bar_background_lines_colour = NULL,   bar_background_0line_linetype = NULL,   bar_background_0line_colour = NULL,   bar_background_lines_spanners = NULL,   bar_fill_colour = NULL,   bar_frame_linetype = NULL,   bar_label_nudge_x = NULL,   bar_label_size = NULL,   bar_line_width = NULL,   bar_nudge_y = NULL,   bar_pattern_fill_colour = NULL,   bar_pattern_spacing = NULL,   bar_pattern_type = NULL,   bar_pattern_width = NULL,   bar_sig_type = NULL,   bar_width = NULL,   column_spanners_nudge_y = NULL,   column_spanners_row_height = NULL,   column_spanners_2_nudge_y = NULL,   column_spanners_2_row_height = NULL,   columns_alignment = NULL,   columns_nudge_x = NULL,   columns_nudge_y = NULL,   columns_table_sig_superscript_letter = NULL,   columns_table_sig_superscript_letter_nudge_x = NULL,   columns_width = NULL,   headers_alignment = NULL,   headers_background_colour = NULL,   headers_font_size = NULL,   headers_nudge_x = NULL,   headers_nudge_y = NULL,   headers_row_height = NULL,   font_size = NULL,   space_right = NULL,   default_list = NULL )"},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"axis_x_label_size Numeric size x axis labels. Defaults 5. axis_x_lims Numeric vector length 2 x-axis limits. set automatically, NULL (default). background_stripes_border Character string either c(\"Inf\", \"background_line_both\", \"background_line_left\", \"background_line_right\", \"background_line_table\"). background stripes either drawn whole plot (\"Inf\"), outer left background_line outer right background_line (\"background_line_both\"), outer left background line right plot (\"background_line_left\"), outer right background line left plot (\"background_line_right), table-part plot (background_line_table\"). background_stripes_colour Character vector containing background colour row. Defaults NULL. bar_background_lines Character string either c(\"borders\", \"scale_breaks\", \"none\"), indicating whether barplot receive dotted lines borders, every scale break none . bar_background_lines_linetype Character string indicating linetype background lines barplot. bar_background_lines_colour Character string indicating colour background lines barplot. bar_background_0line_linetype Character string indicating linetype background line barplot zero. bar_background_0line_colour Character string indicating colour background line barplot zero. bar_background_lines_spanners List containing numeric vectors two elements indicating rows background_lines barplot span. vector contains start end row background line. Defaults NULL, case background_lines drawn top bottom. bar_fill_colour Colour bar filling. Can either one colour bars, (named) vector names groups specified bar_fill. names provided vector, order factor levels bar_fill used determining colour assignment. bar_frame_linetype Named vector bar frame linetypes. Names found column defined bar_sig-argument ofplot_tablebarplot(). Defaults solid. bar_label_nudge_x Numeric nudging bar labels x direction. bar_label_size Numeric font size bar labels. bar_line_width Numeric line-size around bar. bar_nudge_y Numeric vector nudging bar y direction. Either length data, nudge bar sepearatly, length 1 nudge bars . Defaults 0. bar_pattern_fill_colour Named vector filling colours bar pattern. Names vector must found column specified bar_pattern_fill. Defaults white. bar_pattern_spacing Numeric gap patterns. bar_pattern_type Named vector pattern types barpattern. bar_pattern_width Numeric width pattern stripes. Note default pattern whit stripes, increase bar_pattern_width parameter increase thickness white stripes. bar_sig_type Character string indicating whether levels grouping variable visualized pattern fill (\"pattern\") line type (\"frame\"). bar_width Numeric 0 1 specifying width bar. Defaults 0.4. column_spanners_nudge_y Numeric vector increase decrease space column spanners text line. Can either length 1, provide nudging parameter column spanner. Defaults -0.2. column_spanners_row_height Numeric row height row first level column spanners written . Defaults 1. column_spanners_2_nudge_y Numeric vector increase decrease space column spanners level 2 text line. Can either length 1, provide nudging parameter column spanner. Defaults -0.2. column_spanners_2_row_height Numeric row height row second level column spanners written . Defaults 1 columns_alignment Numeric vector one element column, determining text adjustement within column. Can 0 (left-aligned), 0.5 (central-aligned), 1 (right-aligned). Defaults 0.5. columns_nudge_x Numeric vector nudge column text x direction. Defaults 0. columns_nudge_y Numeric vector nudge column texts y direction. Defaults 0. columns_table_sig_superscript_letter Character, added significant values defined columns_table_sig_superscript. columns_table_sig_superscript_letter_nudge_x Numeric nudging superscript towards away number. columns_width Numeric vector relative column widths. equal number columns (including bar chart, bar chart plotted) plotted table. Defaults NULL, case collumns get width. headers_alignment Numeric vector one element column, determining text adjustement headers. Can 0 (left-aligned), 0.5 (central-aligned), 1 (right-aligned). Defaults NULL, case alignment columns adopted. headers_background_colour Colour background headers. headers_font_size Numeric font size used headers column_spanners. Defaults 2.5. headers_nudge_x Numeric nudge column_headers x direction. Defaults 0. headers_nudge_y Numeric nudge column_headers y direction. Defaults 0. headers_row_height Numeric row height row headers written . Defaults 1. font_size Numeric vector many elements columns font sizes columns. Defaults 2.5. space_right Numeric width white space added right plotting pane. scale data. Defaults 0. default_list Named list predefined settings. Defaults list settings set 0.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"named list settings table/barplot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/plotsettings_tablebarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parameters for the barplots. — plotsettings_tablebarplot","text":"","code":"## Calling the function without any arguments will result in the default settings-list. plotsettings_tablebarplot() #> $axis_x_label_size #> [1] 5 #>  #> $axis_x_lims #> NULL #>  #> $background_stripes_border #> [1] \"Inf\" #>  #> $background_stripes_colour #> [1] \"white\" #>  #> $bar_background_lines #> [1] \"none\" #>  #> $bar_background_lines_linetype #> [1] \"dotted\" #>  #> $bar_background_lines_colour #> [1] \"darkgrey\" #>  #> $bar_background_0line_linetype #> [1] \"solid\" #>  #> $bar_background_0line_colour #> [1] \"black\" #>  #> $bar_background_lines_spanners #> NULL #>  #> $bar_fill_colour #> [1] \"white\" #>  #> $bar_frame_linetype #> [1] \"solid\" #>  #> $bar_label_size #> [1] 2 #>  #> $bar_label_nudge_x #> [1] 0 #>  #> $bar_line_width #> [1] 0.5 #>  #> $bar_nudge_y #> [1] 0 #>  #> $bar_pattern_fill_colour #> [1] \"white\" #>  #> $bar_pattern_type #> [1] \"none\" #>  #> $bar_sig_type #> [1] \"frame\" #>  #> $bar_width #> [1] 0.4 #>  #> $column_spanners_nudge_y #> [1] -0.2 #>  #> $column_spanners_row_height #> [1] 1 #>  #> $column_spanners_2_nudge_y #> [1] -0.2 #>  #> $column_spanners_2_row_height #> [1] 1 #>  #> $columns_alignment #> [1] 0.5 #>  #> $columns_nudge_x #> [1] 0 #>  #> $columns_nudge_y #> [1] 0 #>  #> $columns_table_sig_superscript_letter #> [1] \"a\" #>  #> $columns_table_sig_superscript_letter_nudge_x #> [1] 0 #>  #> $columns_width #> NULL #>  #> $headers_alignment #> NULL #>  #> $headers_background_colour #> [1] \"white\" #>  #> $headers_font_size #> [1] 2.5 #>  #> $headers_nudge_x #> [1] 0 #>  #> $headers_nudge_y #> [1] 0 #>  #> $headers_row_height #> [1] 1 #>  #> $bar_pattern_spacing #> [1] 0.1 #>  #> $bar_pattern_width #> [1] 0.5 #>  #> $font_size #> [1] 2.5 #>  #> $space_right #> [1] 0 #>   ## Arguments will overvrite the respective list element: plot_settings <- plotsettings_tablebarplot(font_size = 2.5) plot_settings$font_size #> [1] 2.5  ## Colours can be defined like so: plotsettings_tablebarplot(   bar_fill_colour = c(     \"blue\",     grDevices::rgb(10, 13, 82, maxColorValue = 255)   ) ) #> $axis_x_label_size #> [1] 5 #>  #> $axis_x_lims #> NULL #>  #> $background_stripes_border #> [1] \"Inf\" #>  #> $background_stripes_colour #> [1] \"white\" #>  #> $bar_background_lines #> [1] \"none\" #>  #> $bar_background_lines_linetype #> [1] \"dotted\" #>  #> $bar_background_lines_colour #> [1] \"darkgrey\" #>  #> $bar_background_0line_linetype #> [1] \"solid\" #>  #> $bar_background_0line_colour #> [1] \"black\" #>  #> $bar_background_lines_spanners #> NULL #>  #> $bar_fill_colour #> [1] \"blue\"    \"#0A0D52\" #>  #> $bar_frame_linetype #> [1] \"solid\" #>  #> $bar_label_size #> [1] 2 #>  #> $bar_label_nudge_x #> [1] 0 #>  #> $bar_line_width #> [1] 0.5 #>  #> $bar_nudge_y #> [1] 0 #>  #> $bar_pattern_fill_colour #> [1] \"white\" #>  #> $bar_pattern_type #> [1] \"none\" #>  #> $bar_sig_type #> [1] \"frame\" #>  #> $bar_width #> [1] 0.4 #>  #> $column_spanners_nudge_y #> [1] -0.2 #>  #> $column_spanners_row_height #> [1] 1 #>  #> $column_spanners_2_nudge_y #> [1] -0.2 #>  #> $column_spanners_2_row_height #> [1] 1 #>  #> $columns_alignment #> [1] 0.5 #>  #> $columns_nudge_x #> [1] 0 #>  #> $columns_nudge_y #> [1] 0 #>  #> $columns_table_sig_superscript_letter #> [1] \"a\" #>  #> $columns_table_sig_superscript_letter_nudge_x #> [1] 0 #>  #> $columns_width #> NULL #>  #> $headers_alignment #> NULL #>  #> $headers_background_colour #> [1] \"white\" #>  #> $headers_font_size #> [1] 2.5 #>  #> $headers_nudge_x #> [1] 0 #>  #> $headers_nudge_y #> [1] 0 #>  #> $headers_row_height #> [1] 1 #>  #> $bar_pattern_spacing #> [1] 0.1 #>  #> $bar_pattern_width #> [1] 0.5 #>  #> $font_size #> [1] 2.5 #>  #> $space_right #> [1] 0 #>   ## Or, to get better control over the colour assignment ## we can also directly name the colours with the different groups ## defined in the bar_sig-argument of plot_tablebarplot() ## (as these groups are used to distinguish between different bar colours): plotsettings_tablebarplot(   bar_fill_colour = c(     fill_group_1 = \"blue\",     fill_group_2 = grDevices::rgb(       10, 13, 82,       maxColorValue = 255     )   ) ) #> $axis_x_label_size #> [1] 5 #>  #> $axis_x_lims #> NULL #>  #> $background_stripes_border #> [1] \"Inf\" #>  #> $background_stripes_colour #> [1] \"white\" #>  #> $bar_background_lines #> [1] \"none\" #>  #> $bar_background_lines_linetype #> [1] \"dotted\" #>  #> $bar_background_lines_colour #> [1] \"darkgrey\" #>  #> $bar_background_0line_linetype #> [1] \"solid\" #>  #> $bar_background_0line_colour #> [1] \"black\" #>  #> $bar_background_lines_spanners #> NULL #>  #> $bar_fill_colour #> fill_group_1 fill_group_2  #>       \"blue\"    \"#0A0D52\"  #>  #> $bar_frame_linetype #> [1] \"solid\" #>  #> $bar_label_size #> [1] 2 #>  #> $bar_label_nudge_x #> [1] 0 #>  #> $bar_line_width #> [1] 0.5 #>  #> $bar_nudge_y #> [1] 0 #>  #> $bar_pattern_fill_colour #> [1] \"white\" #>  #> $bar_pattern_type #> [1] \"none\" #>  #> $bar_sig_type #> [1] \"frame\" #>  #> $bar_width #> [1] 0.4 #>  #> $column_spanners_nudge_y #> [1] -0.2 #>  #> $column_spanners_row_height #> [1] 1 #>  #> $column_spanners_2_nudge_y #> [1] -0.2 #>  #> $column_spanners_2_row_height #> [1] 1 #>  #> $columns_alignment #> [1] 0.5 #>  #> $columns_nudge_x #> [1] 0 #>  #> $columns_nudge_y #> [1] 0 #>  #> $columns_table_sig_superscript_letter #> [1] \"a\" #>  #> $columns_table_sig_superscript_letter_nudge_x #> [1] 0 #>  #> $columns_width #> NULL #>  #> $headers_alignment #> NULL #>  #> $headers_background_colour #> [1] \"white\" #>  #> $headers_font_size #> [1] 2.5 #>  #> $headers_nudge_x #> [1] 0 #>  #> $headers_nudge_y #> [1] 0 #>  #> $headers_row_height #> [1] 1 #>  #> $bar_pattern_spacing #> [1] 0.1 #>  #> $bar_pattern_width #> [1] 0.5 #>  #> $font_size #> [1] 2.5 #>  #> $space_right #> [1] 0 #>"},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare lineplot data. — prep_lineplot","title":"Prepare lineplot data. — prep_lineplot","text":"Prepare lineplot data.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare lineplot data. — prep_lineplot","text":"","code":"prep_lineplot(   eatRep_dat,   subgroup_var = NULL,   total_subgroup = \"total\",   facet_var = \"TR_BUNDESLAND\",   total_facet = \"total\",   parameter = \"mean\",   sig_niveau = 0.05,   comparisons = c(\"none\", \"crossDiff\", \"trend\", \"trend_crossDiff\") )"},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare lineplot data. — prep_lineplot","text":"eatRep_dat Object returned eatRep. subgroup_var Character string column eatPlot_dat$group eatPlot_dat$plain containing subgroup mapping. supgroup receive line. subgroups within data, needs set, otherwise data preparation might fail.  Defaults NULL. total_subgroup Character string indicating subgroup containing groups subgroup_var. Defaults \"total\". facet_var Character string name variable used faceting plot. Defaults \"TR_BUNDESLAND\". total_facet Character string name total groups containing groups facet var. Defaults \"total\". parameter Character string. Contains value column parameter used plotting lines.  Defaults \"mean\". sig_niveau Numeric indicating border p-values considered significant. Defaults 0.05. comparisons Character string can used filter needed comparions. can drastically reduce output prepared data. Defaults c(\"none\", \"crossDiff\", \"trend\", \"trend_crossDiff\").","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare lineplot data. — prep_lineplot","text":"Data prepared plotting BT-lineplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare lineplot data. — prep_lineplot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare lineplot data. — prep_tablebarplot","title":"Prepare lineplot data. — prep_tablebarplot","text":"Prepare lineplot data.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare lineplot data. — prep_tablebarplot","text":"","code":"prep_tablebarplot(   eatRep_dat,   subgroup_var = NULL,   names_from = c(\"year\", \"comparison\", \"parameter\"),   par = \"mean\",   facet_var = \"TR_BUNDESLAND\",   total_facet = \"total\",   comparisons = NULL,   sig_niveau = 0.05 )"},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare lineplot data. — prep_tablebarplot","text":"eatRep_dat Object returned eatRep. subgroup_var Character string column eatPlot_dat$group eatPlot_dat$plain containing subgroup mapping. supgroup receive line. subgroups within data, needs set, otherwise data preparation might fail.  Defaults NULL. names_from Character vector variables used create wide format. Defaults c(\"year\", \"comparison\", \"parameter\"). par Character vector parameters used data preperation. Defaults mean. facet_var Character string variable containing information groups comparisons made . needed decosntruct comparisons like crossDiff crossDiff crossDiffTotal (crossDiff comparison total group). Name might bit confusing, prep_lineplot. Defaults TR_BUNDESLAND. total_facet Character string name total groups containing groups facet var. Defaults \"total\". comparisons Character string can used filter needed comparions. can drastically reduce output prepared data. Defaults c(\"none\", \"crossDiff\", \"trend\", \"trend_crossDiff\"). sig_niveau Numeric indicating border p-values considered significant. Defaults 0.05.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare lineplot data. — prep_tablebarplot","text":"Data prepared plotting BT-lineplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/prep_tablebarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare lineplot data. — prep_tablebarplot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the data in the Bundesland column. — process_bundesland","title":"Process the data in the Bundesland column. — process_bundesland","text":"changes ue ü adds - bundesländer consisting two words.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the data in the Bundesland column. — process_bundesland","text":"","code":"process_bundesland(eatPlot_dat, column = \"TR_BUNDESLAND\")"},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the data in the Bundesland column. — process_bundesland","text":"eatPlot_dat Data.frame coming prep_lineplot() prep_tablebarplot(). column Character string column containing bundesländer. Defaults TR_BUNDESLAND.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the data in the Bundesland column. — process_bundesland","text":"eatPlot_data data.frame bundesländer column processed.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/process_bundesland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the data in the Bundesland column. — process_bundesland","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for grDevices::pdf(). — save_plot","title":"Wrapper for grDevices::pdf(). — save_plot","text":"Wrapper grDevices::pdf().","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for grDevices::pdf(). — save_plot","text":"","code":"save_plot(   p,   filename,   width = 160,   height = 226.2,   colormodel = \"cmyk\",   scaling = 1,   ... )"},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for grDevices::pdf(). — save_plot","text":"p Plot saved. filename Filepath -name new plot file. width Width new plot file mm. Defaults 160. height Height new plot file mm. Defaults 226.2 colormodel Colormodel saving plot. See grDevices::pdf() information. Defaults \"cmyk\". scaling Scaling parameter changing height widht relationally. ... arguments passed grDevices::pdf().","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for grDevices::pdf(). — save_plot","text":"PDF file.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/save_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for grDevices::pdf(). — save_plot","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"Set colours, pointshapes linetypes lineplot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"","code":"set_scales(plot_settings = plotsettings_lineplot())"},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"ggplot2 plot settings","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/set_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the colours, pointshapes and linetypes for lineplot. — set_scales","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"multiple tables/barplots combined, column widths might distorted, plots need scaled x-axes barplots. Therefore, standardize_column_width() can used calculate column_widths entered plotsettings_tablebarplot() defining plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"","code":"standardize_column_width(column_widths, plot_ranges = c(0, 0))"},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"column_widths List numeric vectors proportional column widths final, combined plot. end, proportions sum 1. However, want set width barplots automatically, can provide NA column containing barplot. case, width calculated automatically, proportions stay . plot_ranges Numeric vector containing ranges x-axis alle barplots. Defaults c(0, 0).","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"Returns list numeric vectors containing relative column widths set single plots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_column_width.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the column widths for plots that should be later combined with combine_plots(). — standardize_column_width","text":"","code":"## The first column of the left plot will cover 10 % of the plot width, the second 20 % and so on: standardize_column_width(   column_widths = list(     p1 = c(0.1, 0.2),     p2 = c(0.5, 0.2)   ),   plot_ranges = c(10, 30) ) #> $p1 #> [1] 0.3333333 0.6666667 #>  #> $p2 #> [1] 0.7142857 0.2857143 #>   ## NAs will be interpreted as barplots, in wich case the width of the barplots will be ## calclulated automatically, so the x-axes are on the same scale. standardize_column_width(   column_widths = list(     p1 = c(0.1, NA),     p2 = c(0.5, NA)   ),   plot_ranges = c(10, 30) ) #> $p1 #> [1] 0.5 0.5 #>  #> $p2 #> [1] 0.625 0.375 #>"},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_pattern_spacing.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the pattern spacing, so it is equal within a plot. Currently works only for two combined plots! — standardize_pattern_spacing","title":"Calculate the pattern spacing, so it is equal within a plot. Currently works only for two combined plots! — standardize_pattern_spacing","text":"function takes pattern spacing, example used single plots, calculates relative pattern_spacings needed combined plots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_pattern_spacing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the pattern spacing, so it is equal within a plot. Currently works only for two combined plots! — standardize_pattern_spacing","text":"","code":"standardize_pattern_spacing(plot_list, pattern_spacing = 0.015)"},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_pattern_spacing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the pattern spacing, so it is equal within a plot. Currently works only for two combined plots! — standardize_pattern_spacing","text":"plot_list List plots combined combine_plots(). pattern_spacing Pattern spacing taken default whole plot. Defaults 0.015.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_pattern_spacing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the pattern spacing, so it is equal within a plot. Currently works only for two combined plots! — standardize_pattern_spacing","text":"Returns numeric vector containing pattern spacings plots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/standardize_pattern_spacing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the pattern spacing, so it is equal within a plot. Currently works only for two combined plots! — standardize_pattern_spacing","text":"","code":"# 1) Build the plots p1, p2. # 2) standardize_pattern_spacing(list(p1, p2)) # 3) Build p1 and p2 new, but with the pattern spacings calculated in step 2."},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for lineplot. — theme_line","title":"Theme for lineplot. — theme_line","text":"Theme lineplot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for lineplot. — theme_line","text":"","code":"theme_line(plot_settings = plotsettings_lineplot())"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for lineplot. — theme_line","text":"plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for lineplot. — theme_line","text":"ggplot2 theme","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for lineplot. — theme_line","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for table plotted with ggplot2. — theme_table","title":"Theme for table plotted with ggplot2. — theme_table","text":"Theme table plotted ggplot2.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for table plotted with ggplot2. — theme_table","text":"","code":"theme_table(plot_settings)"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for table plotted with ggplot2. — theme_table","text":"plot_settings Named list constructed plotsettings_tablebarplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_tablebarplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for table plotted with ggplot2. — theme_table","text":"ggplot2 theme.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for table plotted with ggplot2. — theme_table","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for a table column. — theme_table_col","title":"Theme for a table column. — theme_table_col","text":"Theme table column.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for a table column. — theme_table_col","text":"","code":"theme_table_col()"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for a table column. — theme_table_col","text":"ggplot2 theme, can used plotted table column.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_table_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for a table column. — theme_table_col","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for a y-axis plot. — theme_y_axis","title":"Theme for a y-axis plot. — theme_y_axis","text":"Theme y-axis plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for a y-axis plot. — theme_y_axis","text":"","code":"theme_y_axis(plot_settings = plotsettings_lineplot())"},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for a y-axis plot. — theme_y_axis","text":"plot_settings Named list constructed plotsettings_lineplot(). Defaults list settings set 0. several predefined lists optimized settings different plots. See plotsettings_lineplot() overview.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for a y-axis plot. — theme_y_axis","text":"ggplot2 theme, can used plotted y-axis.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/theme_y_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for a y-axis plot. — theme_y_axis","text":"","code":"# tbd"},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_2.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — trend_2","title":"BT24 example data. — trend_2","text":"Default plot settings mean-barplot without trend.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — trend_2","text":"","code":"trend_2"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_2.html","id":"trend-","dir":"Reference","previous_headings":"","what":"trend_2","title":"BT24 example data. — trend_2","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_3.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — trend_3","title":"BT24 example data. — trend_3","text":"Example data grouping var multiple levels.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — trend_3","text":"","code":"trend_3"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_3.html","id":"trend-","dir":"Reference","previous_headings":"","what":"trend_3","title":"BT24 example data. — trend_3","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_books.html","id":null,"dir":"Reference","previous_headings":"","what":"BT21 Books trend — trend_books","title":"BT21 Books trend — trend_books","text":"BT21 data set contains results published social disparities chapter.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_books.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT21 Books trend — trend_books","text":"","code":"trend_books"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_books.html","id":"trend-books","dir":"Reference","previous_headings":"","what":"trend_books","title":"BT21 Books trend — trend_books","text":"data frame 2904 rows 32 columns: kb Competence","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_books.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"BT21 Books trend — trend_books","text":"<\"Q:/BT2021/BT/60_Bericht/06_Soziale_Disparitäten/01_Rechnungen/KAS/Abb65Buecher_mitTrend.csv\">","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_mw.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — trend_mw","title":"BT24 example data. — trend_mw","text":"Example data male/female subgroup_var.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_mw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — trend_mw","text":"","code":"trend_mw"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_mw.html","id":"trend-mw","dir":"Reference","previous_headings":"","what":"trend_mw","title":"BT24 example data. — trend_mw","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_zwh.html","id":null,"dir":"Reference","previous_headings":"","what":"BT24 example data. — trend_zwh","title":"BT24 example data. — trend_zwh","text":"Example data zuwanderungshintergrund subgroup_var.","code":""},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_zwh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BT24 example data. — trend_zwh","text":"","code":"trend_zwh"},{"path":[]},{"path":"https://nickhaf.github.io/eatPlot/reference/trend_zwh.html","id":"trend-zwh","dir":"Reference","previous_headings":"","what":"trend_zwh","title":"BT24 example data. — trend_zwh","text":"list four elements.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-100-major-update","dir":"Changelog","previous_headings":"","what":"eatPlot 1.0.0 “Major Update”","title":"eatPlot 1.0.0 “Major Update”","text":"Breaking Changes: package completely restructured encompass changes made output format eatRep. Mainly, data preparation changed internally. user end, changes visible changed output format prepared data, changed column names prepared data. function arguments changed consistency. prep_plot() split prep_plot_lineplot() prep_plot_tablebarplot(), different arguments output formats.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-better-braces-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9029 “Better Braces”","title":"eatPlot 1.0.0 “Major Update”","text":"Updated algorithm calculating brace position indention, longer trend always gets longer brace. braces get indented automatically, depending position plot.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-x-axis-label-size-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9028 “x axis label size”","title":"eatPlot 1.0.0 “Major Update”","text":"Implemented argument axis_x_label_size plotsettings_tablebarplot() setting fontsize x axis labels barplots.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-bar-nudge-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9027 “bar nudge”","title":"eatPlot 1.0.0 “Major Update”","text":"Using argument bar_nudge_y plotsettings_tablebarplot() now possible nudge bars y direction.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-complex-group-comparisons-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9026 “complex group comparisons”","title":"eatPlot 1.0.0 “Major Update”","text":"Comparisons type group_1.vs.group_2.VS.wholeGroup-group_1.vs.group_2 always compare group comparison states vs wholeGroup. Therefore, naming respective columns adapted, output complexity reduced.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-white-spaces-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9025 “white spaces”","title":"eatPlot 1.0.0 “Major Update”","text":"Implemented possiblity plot white spaces next plots, can sperated white space. Use space_right plotsettings_tablebarplot() set width, controll background_stripes borders background_stripes_border.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-better-headers-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9024 “better headers”","title":"eatPlot 1.0.0 “Major Update”","text":"Implemented column_spanners_2 argument [plotsettings_tablebarplot()]. provides second dimension column spanners. Implemented headers_row_height, column_spanners_row_height column_spanners_2_row_height arguments [plotsettings_tablebarplot()]. makes possible set width row headers column_spanners written . Implemented headers_nudge_y, column_spanners_nudge_y columns_spanners_2_nudge_y arguments [plotsettings_tablebarplot()] nudge individual headers column_spanners along y-axis. Removed headers_background_widht_y argument [plotsettings_tablebarplot()]. Implemented headers_font_size argument [plotsettings_tablebarplot()].","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9023","title":"eatPlot 1.0.0 “Major Update”","text":"Fixed NA-handling [filter_rows()].","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-1","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9022","title":"eatPlot 1.0.0 “Major Update”","text":"Implemented vs.Vs.vs. comparisons, crossDiff_of_groupDiffs can plotted now.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-2","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9021","title":"eatPlot 1.0.0 “Major Update”","text":"Moved background_lines argument [plot_lineplot()] [plotsettings_lineplot()].","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-3","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9020","title":"eatPlot 1.0.0 “Major Update”","text":"Removed white space around final plots. lineplots, still needed drawing box around. Adjusted distance single lineplot-tiles. now possible set y-axis lineplots manually using argument axis_y_lims axis_y_tick_distance [plotsettings_lineplot()]. Renamed y_axis [plotsettings_lineplot()] axis_y. Tweaked scales lineplots, white spaces highest point year-banner reduced.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-4","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9019","title":"eatPlot 1.0.0 “Major Update”","text":"New function [gsub_plot_dat()] replacing character strings prepared data. Mainly intended replacing “wholeGroup” “Deutschland”, use cases possible well. now possible draw box around tiles [plot_lineplot()] defining wanted tiles seperate_plot_var_box-Argument. Improved y-axis plotting [plot_lineplot()]. Changed underlying architechture lineplot-scales.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-5","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9018","title":"eatPlot 1.0.0 “Major Update”","text":"Trend lines differing year ranges can now plotted equal length (split non-split plots). Use equal_trend_line_length-argument [plotsettings_lineplot()] care, distances timepoints might distorted approach (however, necessary BT22).","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-6","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9017","title":"eatPlot 1.0.0 “Major Update”","text":"Changed defaults y position column headers.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-7","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9016","title":"eatPlot 1.0.0 “Major Update”","text":"Column header lines now consistent width.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-8","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9015","title":"eatPlot 1.0.0 “Major Update”","text":"Limits y-axis lineplots can set manually using argument axis_y_lims [plotsettings_lineplot()]. New [cmyk()] function setting colour values using cmyk colour coding. Set default cmyk-colours chapter 3.3 (Frz). New defaul-settings list mean-barplots without trend.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-9","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9014","title":"eatPlot 1.0.0 “Major Update”","text":"Added function [standardize_column_widths] can used calculate relative column width plots combined later. way, columns width can easily set width. calcualtion columns_table_sig_high_letter_nudge_x argument [plotsettings_tablebarplot()] adjusted slightly behaves consistent. Added argument specifying background line colour lineplots. Changed default colours default plotting lists, go ahead cmyk colours needed publisher. Barplots patterns now small black frame.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-10","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9013","title":"eatPlot 1.0.0 “Major Update”","text":"Changed color encoding CMYK default save_plot(). , dashes represented UTF8 Encoding. done automatically plot-functions. result, dashes represented correctly look plot directly R, correct PDF.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-11","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9012","title":"eatPlot 1.0.0 “Major Update”","text":"plot_lineplot() kann die seperate_plot_var jetzt als factor übergeben werden, damit die Reihenfolge der Linienplots der Reihenfolge der factorlevels entspricht.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-12","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9011","title":"eatPlot 1.0.0 “Major Update”","text":"bar header argument merged columns_headers argument plot_tablebarplot, now named headers. bar header now behaves like column headers, can aligned headers_alignment - Argument plotsettings_tablebarplot().","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-13","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9010","title":"eatPlot 1.0.0 “Major Update”","text":"argument columns_table_se can now used specifying columns plotted (SE) (brackets). now example Chapter 4 plots without trend. now possible define different types background lines plotsettings_tablebarplot(), using argument bar_background_lines. now possible let background lines span rows specified bar_background_lines_spanners argument plotsettings_tablebarplot() function. Added border line top bar plots. Added templates chapter 3 - french chapter 4 - noTrend analyses. Use ggsave() save_plot(), correct dashes displayed pdf.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-14","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9009","title":"eatPlot 1.0.0 “Major Update”","text":"grouping_vars - argument prep_plot() now takes two grouping_vars. Renamed arguments prep_plot(): grouping_var grouping_var_groups grouping_vars grouping_vars_groups. Comparison columns now named differently. New comparisons prepared: : c(“crossDiff”, “groupDiff”, “crossDiffofgroupDiff”, “trendDiffgroup”, “trendDiffcross”). Nested comparisons type ‘group_a.vs.group_b.VS.group_b.vs.group_c’ currently included. Removed default setting label_sig_high argument plot_lineplot(). Added argument title_superscript plot_lineplot() specifying superscripts plot titles. Added argument comparisons plot_lineplot() specifying wanted comparisons. Standardized column names plot_data$plot_tablebarplot, _noTrend always written Comp.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-15","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9008","title":"eatPlot 1.0.0 “Major Update”","text":"Added argument plotsettings_tablebarplot(bar_background_lines = TRUE) striped border lines barplots. Added alignent option 2 tablebars. right align columns middle column, usefull numeric columns. Columns linebreaks adjusted automatically now, don’t flow upper line borders .","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-16","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9007","title":"eatPlot 1.0.0 “Major Update”","text":"Tables/Barplots now take sorting data.frame input.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-17","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9006","title":"eatPlot 1.0.0 “Major Update”","text":"Columns can now aligned decimal point (possible alignment = 1).","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-18","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9005","title":"eatPlot 1.0.0 “Major Update”","text":"default setting patterned bars now reversed, pattern shown non-significant bars. now possible specify letter used superscript significance.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-19","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9004","title":"eatPlot 1.0.0 “Major Update”","text":"plot_lineplot() tries plot background lines whole group trend confidence intervall, derived values whole Group theire standard errors. prep_plot() now distinguishes columns crossDiff groupDiff. prep_plot() makes less assumptions groups want plot. makes flexible. grouping_var_groups argument, can now filter groups want plot data preperation. Multiple bugfixes prep_plot().","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-20","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9003","title":"eatPlot 1.0.0 “Major Update”","text":"prep_plot()$plot_tablebarplot now returns data.frame wide format.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-21","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9002","title":"eatPlot 1.0.0 “Major Update”","text":"Added checks prep_plot() reduce error messages.","code":""},{"path":"https://nickhaf.github.io/eatPlot/news/index.html","id":"eatplot-1-0-0-22","dir":"Changelog","previous_headings":"","what":"eatPlot 0.0.0.9001","title":"eatPlot 1.0.0 “Major Update”","text":"Fixed Bug prep_plot() threw error, comparison-column empty.","code":""}]
